<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2015-10-03 11:13"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>0x7df</title>
<link>https://0x7df.wordpress.com</link>
<description/>
<pubDate>Sat, 03 Oct 2015 11:13:49 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://0x7df.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>0x7df</wp:author_login>
  <wp:author_email>0x7df1@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[0x7df]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>573568</wp:term_id>
  <wp:category_nicename>cuda</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[CUDA]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1876795</wp:term_id>
  <wp:category_nicename>physics-2</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Physics]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>4276</wp:term_id>
  <wp:tag_slug>api</wp:tag_slug>
  <wp:tag_name><![CDATA[api]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>131629</wp:term_id>
  <wp:tag_slug>atmospheric-science</wp:tag_slug>
  <wp:tag_name><![CDATA[atmospheric science]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5853484</wp:term_id>
  <wp:tag_slug>black-body</wp:tag_slug>
  <wp:tag_name><![CDATA[black body]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2426</wp:term_id>
  <wp:tag_slug>c</wp:tag_slug>
  <wp:tag_name><![CDATA[C]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>191017</wp:term_id>
  <wp:tag_slug>cold-war</wp:tag_slug>
  <wp:tag_name><![CDATA[Cold War]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>304056</wp:term_id>
  <wp:tag_slug>combinations</wp:tag_slug>
  <wp:tag_name><![CDATA[combinations]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>330323663</wp:term_id>
  <wp:tag_slug>combinations-permutations</wp:tag_slug>
  <wp:tag_name><![CDATA[combinations permutations]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>312353</wp:term_id>
  <wp:tag_slug>combinatorics</wp:tag_slug>
  <wp:tag_name><![CDATA[combinatorics]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>573568</wp:term_id>
  <wp:tag_slug>cuda</wp:tag_slug>
  <wp:tag_name><![CDATA[CUDA]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2842992</wp:term_id>
  <wp:tag_slug>cyclomatic-complexity</wp:tag_slug>
  <wp:tag_name><![CDATA[cyclomatic complexity]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>555477</wp:term_id>
  <wp:tag_slug>doxygen</wp:tag_slug>
  <wp:tag_name><![CDATA[doxygen]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>657</wp:term_id>
  <wp:tag_slug>economics</wp:tag_slug>
  <wp:tag_name><![CDATA[economics]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>330658996</wp:term_id>
  <wp:tag_slug>exponential-atmosphere</wp:tag_slug>
  <wp:tag_name><![CDATA[exponential atmosphere]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2100741</wp:term_id>
  <wp:tag_slug>factorial</wp:tag_slug>
  <wp:tag_name><![CDATA[factorial]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>302491</wp:term_id>
  <wp:tag_slug>fluid-dynamics</wp:tag_slug>
  <wp:tag_name><![CDATA[fluid dynamics]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>14852</wp:term_id>
  <wp:tag_slug>game-theory</wp:tag_slug>
  <wp:tag_name><![CDATA[game theory]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>112287</wp:term_id>
  <wp:tag_slug>gpu</wp:tag_slug>
  <wp:tag_name><![CDATA[GPU]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>751916</wp:term_id>
  <wp:tag_slug>graph-theory</wp:tag_slug>
  <wp:tag_name><![CDATA[graph theory]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>330659001</wp:term_id>
  <wp:tag_slug>homogeneous-atmosphere</wp:tag_slug>
  <wp:tag_name><![CDATA[homogeneous atmosphere]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>103084</wp:term_id>
  <wp:tag_slug>hpc</wp:tag_slug>
  <wp:tag_name><![CDATA[HPC]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>647</wp:term_id>
  <wp:tag_slug>html</wp:tag_slug>
  <wp:tag_name><![CDATA[html]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>56698736</wp:term_id>
  <wp:tag_slug>hydrostatic-balance</wp:tag_slug>
  <wp:tag_name><![CDATA[hydrostatic balance]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>16485635</wp:term_id>
  <wp:tag_slug>hydrostatic-equilibrium</wp:tag_slug>
  <wp:tag_name><![CDATA[hydrostatic equilibrium]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>32011</wp:term_id>
  <wp:tag_slug>julia</wp:tag_slug>
  <wp:tag_name><![CDATA[julia]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8800</wp:term_id>
  <wp:tag_slug>latex</wp:tag_slug>
  <wp:tag_name><![CDATA[latex]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>610</wp:term_id>
  <wp:tag_slug>linux</wp:tag_slug>
  <wp:tag_name><![CDATA[linux]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>140810</wp:term_id>
  <wp:tag_slug>markdown</wp:tag_slug>
  <wp:tag_name><![CDATA[markdown]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6464371</wp:term_id>
  <wp:tag_slug>massively-parallel</wp:tag_slug>
  <wp:tag_name><![CDATA[massively parallel]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>35184</wp:term_id>
  <wp:tag_slug>maths</wp:tag_slug>
  <wp:tag_name><![CDATA[maths]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2842993</wp:term_id>
  <wp:tag_slug>mccabe</wp:tag_slug>
  <wp:tag_name><![CDATA[mccabe]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18407</wp:term_id>
  <wp:tag_slug>meteorology</wp:tag_slug>
  <wp:tag_name><![CDATA[meteorology]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1854931</wp:term_id>
  <wp:tag_slug>nash-equilibrium</wp:tag_slug>
  <wp:tag_name><![CDATA[Nash equilibrium]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>37697</wp:term_id>
  <wp:tag_slug>parallel-computing</wp:tag_slug>
  <wp:tag_name><![CDATA[parallel computing]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>647643</wp:term_id>
  <wp:tag_slug>parallel-programming</wp:tag_slug>
  <wp:tag_name><![CDATA[parallel programming]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>12547</wp:term_id>
  <wp:tag_slug>particle-physics</wp:tag_slug>
  <wp:tag_name><![CDATA[particle physics]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18058662</wp:term_id>
  <wp:tag_slug>pep8</wp:tag_slug>
  <wp:tag_name><![CDATA[pep8]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>590077</wp:term_id>
  <wp:tag_slug>permutations</wp:tag_slug>
  <wp:tag_name><![CDATA[permutations]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1211</wp:term_id>
  <wp:tag_slug>physics</wp:tag_slug>
  <wp:tag_name><![CDATA[physics]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2638291</wp:term_id>
  <wp:tag_slug>prospector</wp:tag_slug>
  <wp:tag_name><![CDATA[prospector]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7303457</wp:term_id>
  <wp:tag_slug>pylint</wp:tag_slug>
  <wp:tag_name><![CDATA[pylint]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>832</wp:term_id>
  <wp:tag_slug>python</wp:tag_slug>
  <wp:tag_name><![CDATA[python]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>44443</wp:term_id>
  <wp:tag_slug>regular-expressions</wp:tag_slug>
  <wp:tag_name><![CDATA[regular expressions]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>538062</wp:term_id>
  <wp:tag_slug>static-analysis</wp:tag_slug>
  <wp:tag_name><![CDATA[static analysis]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1669124</wp:term_id>
  <wp:tag_slug>text-processing</wp:tag_slug>
  <wp:tag_name><![CDATA[text processing]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17929779</wp:term_id>
  <wp:tag_slug>thermal-radiation</wp:tag_slug>
  <wp:tag_name><![CDATA[thermal radiation]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>357000</wp:term_id>
  <wp:tag_slug>thermodynamics</wp:tag_slug>
  <wp:tag_name><![CDATA[thermodynamics]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>599182</wp:term_id>
  <wp:tag_slug>twitter</wp:tag_slug>
  <wp:tag_name><![CDATA[twitter]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>255</wp:term_id>
  <wp:tag_slug>ubuntu</wp:tag_slug>
  <wp:tag_name><![CDATA[ubuntu]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>95007</wp:term_id>
  <wp:tag_slug>virtual-machine</wp:tag_slug>
  <wp:tag_name><![CDATA[virtual machine]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>989685</wp:term_id>
  <wp:tag_slug>virtualbox</wp:tag_slug>
  <wp:tag_name><![CDATA[virtualbox]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>185229</wp:term_id>
  <wp:tag_slug>vm</wp:tag_slug>
  <wp:tag_name><![CDATA[vm]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>331600</wp:term_id>
  <wp:tag_slug>wordcloud</wp:tag_slug>
  <wp:tag_name><![CDATA[wordcloud]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>33</wp:term_id>
  <wp:tag_slug>wordpress</wp:tag_slug>
  <wp:tag_name><![CDATA[wordpress]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6852</wp:term_id>
  <wp:tag_slug>xml</wp:tag_slug>
  <wp:tag_name><![CDATA[xml]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>550844</wp:term_id>
  <wp:tag_slug>yaml</wp:tag_slug>
  <wp:tag_name><![CDATA[yaml]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://secure.gravatar.com/blavatar/5daf4b8721f96721fad36c62ce570923?s=96&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Fbuttonw-com.png</url>
		<title> &#187; 0x7df</title>
		<link>https://0x7df.wordpress.com</link>
	</image>
	<item>
  <title>About</title>
  <link>https://0x7df.wordpress.com/about/</link>
  <pubDate>Sat, 14 Feb 2015 19:30:30 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?page_id=1</guid>
  <description/>
  <content:encoded><![CDATA[Physics, computer science, Python, Julia, Fortran, MPI, OpenMP, programming, agile, software, mathematics, CUDA, GPU, PHP, SQL, Scrum, Kanban, lean, Git, ...

<h2>Feedback</h2>

[contact-form][contact-field label='Name' type='name'/][contact-field label='Email' type='email'/][contact-field label='Website' type='url'/][contact-field label='Comment' type='textarea' required='1'/][/contact-form]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1</wp:post_id>
  <wp:post_date>2015-02-14 19:30:30</wp:post_date>
  <wp:post_date_gmt>2015-02-14 19:30:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Connecting Wordpress to Twitter with IFTTT</title>
  <link>https://0x7df.wordpress.com/2015/02/14/connecting-wordpress-to-twitter-via-ifttt/</link>
  <pubDate>Sat, 14 Feb 2015 20:40:41 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=4</guid>
  <description/>
  <content:encoded><![CDATA[It's possible to string together web services - like <a href="https://wordpress.com" target="_blank">WordPress</a>, <a href="http://twitter.com" target="_blank">Twitter</a>, <a href="https://www.facebook.com" target="_blank">Facebook</a>, <a href="https://www.gmail.com" target="_blank">Gmail</a>, <a href="https://www.tumblr.com" target="_blank">Tumblr</a>, <a href="https://evernote.com/" target="_blank">Evernote</a>, etc. - using <a href="http://ifttt.com" target="_blank"><em>If This Then That </em></a><em>(</em><a href="http://ifttt.com" target="_blank"><em>IFTTT </em></a>for short).

In IFTTT, you create <em>Recipes</em>, each of which consists of a <em>Trigger</em>, and an <em>Action.</em> Whenever you do something that is a Trigger for one of your Recipes (like publishing a new WordPress blog post for example), then the associated Action (such as tweeting the link to the blog post) is automatically performed for you.

I've added a pre-existing recipe to my IFTTT account that does exactly that, and this blog entry is to test it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>4</wp:post_id>
  <wp:post_date>2015-02-14 20:40:41</wp:post_date>
  <wp:post_date_gmt>2015-02-14 20:40:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>connecting-wordpress-to-twitter-via-ifttt</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>CUDA basics part 1</title>
  <link>https://0x7df.wordpress.com/2015/04/05/cuda-basics-part-1/</link>
  <pubDate>Sun, 05 Apr 2015 20:59:41 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=9</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Introduction</h2>

<a href="http://en.wikipedia.org/wiki/CUDA" target="_blank">CUDA (Compute Unified Device Architecture) </a>is an extension of <a href="http://www.tutorialspoint.com/cprogramming/c_overview.htm" target="_blank">C/C++</a>, developed by <a href="http://www.nvidia.com/page/home.html" target="_blank">NVIDIA</a>, the <a href="http://www.webopedia.com/TERM/G/GPU.html" target="_blank">GPU </a>manufacturer, for programming their devices. (There is also a <a href="https://www.pgroup.com/resources/cudafortran.htm" target="_blank">Fortran version</a>, developed by <a href="http://www.pgroup.com/" target="_blank">PGI</a>.) The purpose of CUDA is to allow developers to program GPUs much more easily than previously, and since its inception in 2007, the use of GPUs has opened up beyond just graphics to more general, e.g. scientific, computing, which is often referred to as general-purpose GPU computing - <a href="http://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units" target="_blank">GPGPU</a>.

CUDA is proprietary, which in my opinion disqualifies it from use in major code development. The lifetime of high-performance scientific and engineering codes is typically decades, and given <a href="http://dx.doi.org/10.1017/S0962492912000050" target="_blank">the uncertainty surrounding supercomputing architectures</a>, a credible candidate for a programming model needs to be supported by a wide range of compilers and on a wide range of platforms. (A similar programming language is <a href="https://www.khronos.org/opencl/" target="_blank">OpenCL</a>, which as the name suggests, is an open standard, being developed by a consortium of organisations.) However, the <a href="https://www.coursera.org/course/hetero" target="_blank">point has been made </a>that CUDA is a useful teaching vehicle for the basic concepts of programming heterogeneous, many-core supercomputers.

<h2>Heterogeneous Computing</h2>

Let's assume here that the model is heterogeneous; i.e. there are CPUs (hosts) and GPUs (devices) working in conjunction, and that the application runs on the CPU host, handing specific, highly <a href="http://queue.acm.org/detail.cfm?id=1365499" target="_blank">data-parallel</a> parts of the program off to the device as and when appropriate. Also , we assume initially that the CPU part is basically serial; that is, we're not combining CUDA with <a href="http://www.mpi-forum.org/" target="_blank">MPI</a> at this stage.

To exploit this kind of architecture, it's necessary to <i>kernelise</i> the code: identify parts of it suitable for a high level of concurrency, turn them into kernel functions that are handed over to the GPU device. These will typically be portions of the code that are highly data-parallel - i.e. loops over large sets of data items where the iterations of the loops are independent of each other. A nice example is a simple "DAXPY" loop (i.e. a double precision <em>Ax</em> + <em>y</em> vector addition) or "DAXBY" loop (<em>Ax</em> × <em>y</em>), implemented here in C:

[sourcecode language="C"]
void vectorAdd(int n, double a, double *x, double *y)
{
    for (int i = 0; i &lt; n; ++i)
    {
        y[i] = a*x[i] + y[i];
    }
}
[/sourcecode]

Note that the element indices are all <code>i</code>; there's no use of data from previous iterations of the loop. It's this absence of <em>loop-carried dependencies</em> that makes this loop data-parallel, and therefore suitable for threading. Essentially, we can calculate all the iterations of the loop independently, in any order; hence we can pass it to a GPU and invoke as many threads as there are elements, to do the work as concurrently as possible.

<h2>GPU hardware overview</h2>

<h3>Threading</h3>

This post is about how to program using CUDA, but to understand what's going on it's necessary to have a minimum of knowledge about the hardware architecture. A single GPU is comprised of a set of what are known, in NVIDIA's terminology, as <i>streaming multiprocessors </i>(SMs); these are, according to <a href="http://booksite.elsevier.com/9780123838728/" target="_blank">Hennessy and Patterson</a>, "multithreaded <a href="http://en.wikipedia.org/wiki/SIMD" target="_blank">SIMD</a> processors", with the nearest non-GPU equivalent being a multithreaded <a href="http://www.phy.ornl.gov/csep/ca/node24.html" target="_blank">vector processor</a>. The typical number of SMs in one GPU is between 2 and 30, varying from generation to generation. Each SM can support a maximum number of threads at one time, typically in the low thousands (e.g. 1,536) ; so overall the GPU can handle tens of thousands of threads simultaneously. A key aspect of the GPU is that, as well as being massively multithreaded, it also has a SIMD aspect. The threads assigned to a streaming multiprocessor are grouped into sets of 32 threads, called <em>warps</em>. Each 32-thread warp is dealt with by the SM in a SIMD fashion; that is, each instruction is fetched once and executed for all 32 threads at the same time. So all the threads in a particular warp are progressed in lock-step. Hence there are two types of parallelism at play in a GPU:

<ol>
    <li>Multithreading (a kind of<a href="en.wikipedia.org/wiki/SPMD" target="_blank"> SPMD - single program/multiple data parallelism</a>), where different processors execute the same program independently, on different subsets of the data; and</li>
    <li>SIMD (single instruction/multiple data), where each processor is executing the same instruction at the same time as every other.</li>
</ol>

Note that the SIMD aspect causes problems in cases where, as a result of the logic of the particular bit of code being executed, different threads within the same warp end up going down different paths through the code, and therefore require different instructions. The GPU can handle this <em>control divergence</em>, but execution becomes inefficient; so it's something the programmer needs to be aware of and think explicitly about avoiding.

<h3>Memory</h3>

As will become clear, it's also vitally important to understand the memory hierarchy of a GPU. As well as, and separate from, the host CPU's memory (and we'll ignore the <a href="http://www.bottomupcs.com/memory.html" target="_blank">hierarchy </a>there), the GPU device has several different levels of memory:<a href="https://0x7df.files.wordpress.com/2015/02/gpu_layout.png"><img class=" size-full wp-image-167 alignright" src="https://0x7df.files.wordpress.com/2015/02/gpu_layout.png" alt="gpu_layout" width="374" height="411" /></a>

<ul>
    <li>The main <i>global memory</i> or <em>device memory</em>, which is accessible to all the threads on the GPU,</li>
    <li>The <em>c</em><i>onstant memory</i>, also globally accessible,</li>
    <li>The <i>shared memory</i>, of which each streaming multiprocessor has its own private bank, accessible to only the threads on that SM, and</li>
    <li>The per-thread <em>private memory</em>.</li>
</ul>

On reaching a portion of the code that is data parallel and suitable for passing to the GPU, the programmer allocates memory in the device's global memory, and then uses CUDA commands to transfer data items from the CPU host memory into the global memory. Calculated quantities then need to be explicitly transferred back again. This is where we see the first key difference from <a href="www.openmp.org" target="_blank">OpenMP</a> threading; in that model, variables and arrays in memory are declared as either private (each thread has its own copy) or global (every thread sees the same bit of memory); but either way they all reside on the same memory hardware. In CUDA we explicitly have to transfer data from CPU to GPU memory space and back again.

The global (device) memory is the only memory that the host CPU can read and write to. Transfers into shared memory and private memory can be done only by the GPU itself.

<h2>Threads and blocks</h2>

When we implement a CUDA kernel function, which is a chunk of highly data-parallel code that will be handled by a large set of threads working concurrently, we arrange the threads into a <em>grid</em> of <em>thread blocks</em>. We'll worry about why this is, later; for now just note that a grid is a three-dimensional construction of <em>l ×</em> <em>m</em> × <em>n</em> thread blocks, each of which is three-dimensional grouping of <em>i</em> × <em>j</em> × <em>k </em>threads. The actual values of <em>i</em>, <em>j</em>, ... to be used are defined in the host code by the special CUDA statements:

[sourcecode language="C"]
dim3 gridDims(l,m,n);
dim3 blockDims(i,j,l);
myKernel&lt;&lt;&lt;gridDims,blockDims&gt;&gt;&gt;(args);
[/sourcecode]

The third statement launches the kernel function called <code>myKernel</code>, and is a standard C function call statement - i.e. <code>myKernel(args)</code> - but with the special CUDA notation - <code> &lt;&lt;&lt;gridDims, blockDims&gt;&gt;&gt;</code> - rather unpleasantly intruding between the function name and its arguments. The previous two lines define the variables <code>gridDims</code> and <code>blockDims</code> as having <code>dim3</code> type.

CUDA requires that the blocks be independent of each other; there is no way to communicate between different blocks that are executing.

The reason for grouping threads together into blocks, is so that the streaming multiprocessor can switch between threads (or really between warps, which are sets of 32 threads that are always executed in lock-step) - this means that one warp is waiting for a memory access, the SM can switch to another in the meantime.

<h2>Vector addition - host code</h2>

The host C code running on the CPU will look something like this:

[sourcecode language="C"]
int main(int argc, char **argv)
{
    int n, gridSize;
    float *hostX, *hostY;
    float *deviceX, *deviceY;
    cudaError_t err;

    // Allocate and populate the hostX and hostY vectors

    // Allocate GPU memory
    int size = n*sizeof(float);
    err = cudaMalloc((void **) &amp;deviceX, size);
    err = cudaMalloc((void **) &amp;deviceY, size);

    // Copy memory to the GPU
    err = cudaMemcpy(deviceX, hostX, size, cudaMemcpyHostToDevice);
    err = cudaMemcpy(deviceY, hostY, size, cudaMemcpyHostToDevice);

    // Initialize the grid and block dimensions
    dim3 gridDims(ceil(n/256),1,1);
    dim3 blockDims(256,1,1);

    // Launch the GPU Kernel
    myKernel&lt;&lt;&lt;gridDims,blockDims&gt;&gt;&gt;(n, deviceX, deviceY);

    // Copy the GPU memory back to the CPU
    err = cudaMemcpy(hostY, deviceY, size, cudaMemcpyDeviceToHost);

    // Free the GPU memory
    err = cudaFree(deviceX);
    err = cudaFree(deviceY);

    // Do something with the solution, free the host
    // arrays, return
}
[/sourcecode]

In the definition of the grid and block dimensions, we've chosen to have 256 threads per block, and therefore <em>n</em>/256 blocks (and we've used the ceiling function to make sure the number of blocks is rounded <em>up</em> to the nearest integer if <em>n</em> isn't divisible by 256). The grid and the blocks are one-dimensional, for simplicity.

Hopefully, the various CUDA functions that are called - <code>cudaMalloc</code>, <code>cudaMemcpy</code> and <code>cudaFree</code> - are fairly self-explanatory, and are <a href="http://docs.nvidia.com/cuda/cuda-c-programming-guide" target="_blank">well documented</a>.

<h2>Vector addition - kernel code</h2>

The CUDA kernel function that is called looks like this:

[sourcecode language="C"]

__global__ void vecAdd(int n, float *x, float *y)
{
    int i = threadIdx.x + blockDim.x*blockIdx.x;
    if (i &lt; n) y[i] = x[i] + y[i];
}
[/sourcecode]

The first difference from an ordinary C function is the <code>__global__</code> keyword at the beginning of the function declaration. The compiler needs to distinguish between functions for the host CPU and kernel functions intended for the GPU; it does this using the keywords <code>__host__</code> for the former, and either <code>__global__</code> or <code>__device__</code> for the latter. The second difference is the existence of the pre-defined variables <code>threadIdx</code> and <code>blockIdx</code>, which give the (<em>x</em>, <em>y</em>, <em>z</em>) indices of the thread within the block, and of the block within the grid, respectively; and <code>blockDim</code>, which gives the (<em>x</em>, <em>y</em>, <em>z</em>) dimensions of the block, as defined in the function call.

The <code>if</code> statement is included for the case where <em>n</em> is not divisible by 256 and therefore we have <code>ceil(n/256)</code> blocks, resulting in there being more threads than elements in the vector(s).

<h2>Parallel efficiency</h2>

If we ignore the multiplication by the constant <em>A</em> for the moment, and concentrate on the vector addition <code>y[i] = x[i] + y[i]</code>, we can see that there are three memory accesses (two reads and a write) for each statement, and only one floating-point calculation (the addition). The <a href="http://www.greatlakesconsortium.org/events/GPUMulticore/Chapter4-CudaMemoryModel.pdf" target="_blank">compute-to-global-memory-access (CGMA) ratio</a> is therefore 1:3, or 1/3. This is an important metric of the performance of an application or section of code. We often refer to codes as being either <em>compute-bound</em> or <em>memory-bound</em>, depending on whether the limiting factor on improving their performance is the rate at which we can do computations, or the rate at which we can retrieve and send data to and from memory. We'll see now that for a typical GPU, this vector addition operation is very clearly memory-limited.

A typical memory bandwidth for a GPU might be, say, 200GB/s, which means that we can load/store:

$latex \frac{200\,\mathrm{GB/s}}{8\,\mathrm{B/memory\:access}} = 25 \times 10^9\,\mathrm{memory\:access/s} &amp;s=1&amp;bg=ffffff$

Crudely, this limits the actual computation rate to

$latex 25 \times 10^9\,\mathrm{memory\:access/s}\,\times\,0.33\,\mathrm{FLOP}/\mathrm{memory\:access} \approx 8\,\mathrm{GFLOP/s} &amp;s=1&amp;bg=ffffff$

The peak theoretical performance of the GPU might be, say, 1000 GFLOP/s double-precision – i.e. the actual performance obtained is  less than 1% of peak. This is the case no matter how many threads there are - the limiting factor is how quickly data can be transferred between the global memory and the processors.

For this function - simple vector addition - there isn't a great deal we can do about the fact that it's memory bound. You have to bring back each pair of elements from <em>x</em> and <em>y</em> from memory, then put the result back again - the number of memory operations is irreducible. For more complex operations, where pieces of data are typically used multiple times, the trick is to use shared memory, which is much, much faster than global memory. However, there is obviously much less of it, so only small chunks of data can be placed there at a time; this means that programmers need to think very carefully about memory access patterns in their code, to ensure that multiple uses of a given chunk of data are grouped as closely together as possible in the flow of the program, so data isn't continually being placed and replaced in shared memory, via expensive global memory operations. This is analogous to moving data from memory into local <a href="http://searchstorage.techtarget.com/definition/cache-memory" target="_blank">cache</a> in a normal CPU, except that in CUDA programming for GPUs, the programmer is explicitly controlling movement of data between the shared and global memory.

Actually, one way to improve the vector addition might be to utilise<a href="www.cs.iastate.edu/~prabhu/Tutorial/PIPELINE/instrLevParal.html" target="_blank"> instruction-level parallelism (ILP)</a>. In the kernel, the single floating-point operation has to wait for both of the input vector elements (<code>x[i]</code> and <code>y[i]</code>) to be retrieved from global memory before it can begin. Hence if the global memory reads and writes take <em>M</em> clock cycles each, and the floating operation takes <em>N</em>, then the total number of clock cycles is <em>(M+1)+N+M</em> (assuming the second load begins one clock cycle after the first, but otherwise that they are done simultaneously). This is <em>2M+N+1</em>, so to go through it <em>k</em> times is <em>k(2M+N+1)</em>.

However, if within the kernel we loaded two values of each input vector, say <code>x[i+1]</code> and <code>y[i+1]</code> as well as <code>x[i]</code> and <code>y[i]</code>, then the computation of <code>x[i] + y[i]</code> starts after <em>M+1</em> cycles and takes <em>N</em> cycles, so the result is written back to global memory after <em>(M+1)+N+M</em> cycles as before; <em>but</em>, x[i+1] can start to load after 2 cycles, and y[i+1] after 3 cycles, so computation of <code>x[i+1] + y[i+1]</code> can begin after <em>M+3</em> cycles, and still takes <em>N</em>. Hence <code>y[i+1]</code> has been written back to global memory after <em>(M+3)+N+M</em> cycles. This means the whole operation to get <code>x[i] + y[i]</code> and <code>x[i+1] + y[i+1]</code> takes <em>(M+3)+N+M</em> cycles overall, which is only 2 cycles more than it took to get only <code>x[i] + y[i]</code> in the original kernel. For <em>k</em> elements, it will take <em>k(2M+N+3)/2</em>. This is basically going to take half the time of the original (as long as <em>2M+N</em> is large enough that the constant doesn't matter).

Nothing has been done to reduce the <a href="http://www.hardwaresecrets.com/article/Understanding-RAM-Timings/26/2" target="_blank">latency </a>of the memory operations, or to do fewer of them; instead they've been overlapped as much as possible. This is called <em>latency-hiding</em> - doing other useful things while waiting for data to return from memory. Actually, at a different level, the concept of latency-hiding is also fundamental to the GPU and threading; by dividing up the data to be processed into small chunks, and having many different threads operate on those chunks, the GPU has much more flexibility to schedule work so that memory latency can be hidden. For this reason, GPUs are described as <em>throughput-oriented</em> - they are more concerned with operating on lots of data concurrently so they need to worry less about latency; whereas CPUs, on the other hand, are <em>latency</em><em>-oriented</em>, and are designed with as many tricks as possible up their sleeve to reduce latency, under the assumption of, basically, a sequential execution model.

If the same sequential processor were handling all the elements, like in a typical CPU, then this <a href="cs.stanford.edu/people/eroberts/courses/soco/projects/risc/pipelining/" target="_blank">pipelining </a>is the sort of thing modern processors try to do for you anyway, without you having to worry about it.

<hr />

<div style="background:#FFFFFF;margin:0 10px 10px 0;padding:0 10px 0 0;text-align:left;font-family:Arial, Helvetica, sans-serif;line-height:1em;">
<div style="font-size:11px;padding:0 0 10px;font-weight:bold;color:#045989;">High-performance computing systems: Status and outlook</div>
<div style="font-size:11px;"><b>J. J. Dongarra and A. J. van der Steen (2012). </b> <a href="http://journals.cambridge.org/action/displayJournal?jid=ANU">Acta Numerica</a>, <a href="http://journals.cambridge.org/action/displayJournal?jid=ANU&amp;volumeId=21&amp;bVolume=y#loc21&gt;&lt;br /&gt;">Volume 21</a>, May 2012, pp 379-474<a href="http://journals.cambridge.org/action/displayAbstract?aid=8539374">http://journals.cambridge.org/action/displayAbstract?aid=8539374</a></div>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>9</wp:post_id>
  <wp:post_date>2015-04-05 20:59:41</wp:post_date>
  <wp:post_date_gmt>2015-04-05 20:59:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cuda-basics-part-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="c"><![CDATA[C]]></category>
  <category domain="category" nicename="cuda"><![CDATA[CUDA]]></category>
  <category domain="post_tag" nicename="cuda"><![CDATA[CUDA]]></category>
  <category domain="post_tag" nicename="gpu"><![CDATA[GPU]]></category>
  <category domain="post_tag" nicename="hpc"><![CDATA[HPC]]></category>
  <category domain="post_tag" nicename="massively-parallel"><![CDATA[massively parallel]]></category>
  <category domain="post_tag" nicename="parallel-computing"><![CDATA[parallel computing]]></category>
  <category domain="post_tag" nicename="parallel-programming"><![CDATA[parallel programming]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[167]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/450210125130823_474851356000033]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1374960056154041;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/cyC9FtpwRV]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=403453629&stype=M&topic=5990588465270530048&type=U&a=p9Cm]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5cd1bcf6c4808d715cda02771a0a7ef0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_180f8aacd1c8f9587bc5fd02b79d4cec</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1</wp:comment_id>
    <wp:comment_author><![CDATA[CUDA basics part 2 | 0x7df]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>https://0x7df.wordpress.com/2015/04/21/cuda-basics-part-2/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.101.165</wp:comment_author_IP>
    <wp:comment_date>2015-04-21 20:58:55</wp:comment_date>
    <wp:comment_date_gmt>2015-04-21 20:58:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] I posted a basic introduction to CUDA C for programming GPUs, which showed how to do a vector addition. This illustrated some of the CUDA basic syntax, but it [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1429649936.6941521167755126953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1429650167</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1429650168.912187099456787109375;s:7:"message";s:44:"0x7df changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"0x7df";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Combinations and permutations</title>
  <link>https://0x7df.wordpress.com/2015/03/13/combinations-and-permutations/</link>
  <pubDate>Fri, 13 Mar 2015 05:01:42 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=13</guid>
  <description/>
  <content:encoded><![CDATA[<a href="https://0x7df.files.wordpress.com/2015/02/abstract-balls-blue-200.png"><img class="  wp-image-172 alignright" src="https://0x7df.files.wordpress.com/2015/02/abstract-balls-blue-200.png" alt="abstract-balls-blue-200" width="218" height="149" /></a>I recently had to explain the formulae for calculating the number of combinations and permutations, when selecting $latex r &amp;s=1&amp;bg=ffffff$ items out of a pool of $latex n &amp;s=1&amp;bg=ffffff$. In case you're ever in the same boat, here's a refresher. There are four scenarios:

<table>
<tbody>
<tr>
<td></td>
<td><span style="color:#333399;">Combinations </span><span style="color:#333399;">(order doesn't matter):</span></td>
<td><span style="color:#333399;">Permutations</span> <span style="color:#333399;">(order does matter):</span></td>
</tr>
<tr>
<td><span style="color:#333399;">Selected items are replaced:</span></td>
<td align="center">$latex \frac{\left(n + r - 1\right)!}{ r!\left(n - 1\right)!} &amp;s=3&amp;bg=ffffff$</td>
<td align="center">$latex n^r &amp;s=3&amp;bg=ffffff$</td>
</tr>
<tr>
<td><span style="color:#333399;">Selected items are not replaced:</span></td>
<td align="center">$latex \frac{n!}{r!\left(n-r\right)!} &amp;s=3&amp;bg=ffffff$</td>
<td align="center">$latex \frac{n!}{\left(n-r\right)!} &amp;s=3&amp;bg=ffffff$</td>
</tr>
</tbody>
</table>

<h3>The factorial function</h3>

The exclamation mark represents <a href="http://mathworld.wolfram.com/Factorial.html" target="_blank">the <em>factorial</em></a>:

$latex x! = x \times \left(x-1\right) \times \left(x-2\right) \times \ldots \times 2 \times 1 &amp;s=1&amp;bg=ffffff$

For example:

$latex 5! = 5 \times 4 \times 3 \times 2 \times 1 = 120 &amp;s=1&amp;bg=ffffff$

You can invoke it in <a href="https://www.python.org/" target="_blank">Python</a> like this:

<pre><code>
$ python
&gt;&gt;&gt; import math
&gt;&gt;&gt; math.factorial(5)
120
</code></pre>

or perhaps, if you're going to use it a lot:

<pre><code>
$ python
&gt;&gt;&gt; from math import factorial as fac
&gt;&gt;&gt; fac(4)
24
</code></pre>

In <a href="http://julialang.org/" target="_blank">Julia</a>:

<pre><code>
$ julia
julia&gt; factorial(7)
5040
</code></pre>

One last thing to know about the factorial function, is that $latex 0! = 1 &amp;s=1&amp;bg=ffffff$.

<h3>Permutations vs. combinations</h3>

To get the formula right, there are two choices to make. First, we have to decide whether or not the order that items are selected in matters to us. The various different arrangements of some group of items are called <em>permutations</em> when the order matters; e.g. if the arrangement (1, 2, 3) is considered different from (2, 3, 1). If the order doesn't matter - e.g. if the arrangements (a, b, c), (b, c, a), (b, a, c), etc., are considered to be the same - then the arrangements are referred to as <em>combinations</em>.  This depends on the application.

<h3>With vs. without replacement</h3>

The second thing we have to consider is whether or not each item that gets selected is put back into the pool before the next selection is made. In a <a href="http://en.wikipedia.org/wiki/Lottery" target="_blank">lottery</a>, when a ball is selected, it can't get selected again - this scenario is selection <em>without replacement</em>. For a group of kids playing <a href="http://en.wikipedia.org/wiki/Hot_potato_%28game%29" target="_blank">pass the parcel</a>, as far as they're concerned the same individual can get selected any number of times - you stay in the game even after you've been selected and you hope you might get chosen again. So this is selection <em>with replacement</em>. (NB in practice that's not a very sensible way to play pass the parcel if you want an easy time, so adults running the game are more likely to see it as selection<em> without replacement</em>...)

This leads to our four scenarios. Now let's work out the equations.

<h3>1. Permutations without replacement</h3>

You have $latex n &amp;s=1&amp;bg=ffffff$ distinct items and you have to select $latex r &amp;s=1&amp;bg=ffffff$. The order doesn't matter, and the items aren't replaced in the pool once selected. There are $latex n &amp;s=1&amp;bg=ffffff$ possibilities for the first item, but because there is no replacement, there are only $latex n-1 &amp;s=1&amp;bg=ffffff$ possibilities for the second item, then only $latex n-2 &amp;s=1&amp;bg=ffffff$ possibilities for the third, etc. Since, to get the total number, we're going to multiply these together, we start to see that the formula for the total number of combinations, say $latex M &amp;s=1&amp;bg=ffffff$, is going to look something like:

$latex M = n \times \left(n-1\right) \times \left(n-2\right) \times \ldots &amp;s=1&amp;bg=ffffff$

If we continued this series of terms right to the end,  down to 1, then that would be the same as taking the factorial of $latex n &amp;s=1&amp;bg=ffffff$. However, the number of terms we need to multiply together is the same as the number of selections in whatever game we're playing. We need to remember we're only selecting $latex r &amp;s=1&amp;bg=ffffff$ items, so there are going to be only $latex r &amp;s=1&amp;bg=ffffff$ terms:

$latex M = n \times \left(n-1\right) \times \left(n-2\right) \times \ldots \times \left(n-r+1\right) &amp;s=1&amp;bg=ffffff$

So just taking the factorial of $latex n &amp;s=1&amp;bg=ffffff$ will only give the right answer if we want to select all the items eventually, i.e. if $latex r = n &amp;s=1&amp;bg=ffffff$. In general we need to truncate the series after $latex r &amp;s=1&amp;bg=ffffff$ terms. How do we do this? The answer is going to be $latex n!/\left(n-r\right)! &amp;s=1&amp;bg=ffffff$, and this will be easiest to see using an example. Let $latex n = 6 &amp;s=1&amp;bg=ffffff$ and $latex r = 3 &amp;s=1&amp;bg=ffffff$. We can write the answer out the long way: $latex M = 6 \times 5 \times 4 &amp;s=1&amp;bg=ffffff$ and compare this with the formula for $latex n! &amp;s=1&amp;bg=ffffff$:

$latex n! = 6 \times 5 \times 4 \times 3 \times 2 \times 1 &amp;s=1&amp;bg=ffffff$

Clearly, $latex M = n! /\left(3 \times 2 \times 1 \right) &amp;s=1&amp;bg=ffffff$, which of course is the same as $latex M = n! / 3! &amp;s=1&amp;bg=ffffff$. After working out another couple of simple examples like this, you will see that the denominator always needs to be $latex \left(n-r\right)! &amp;s=1&amp;bg=ffffff$, to cancel out the last $latex \left(n-r\right)! &amp;s=1&amp;bg=ffffff$ terms of the factorial of $latex n &amp;s=1&amp;bg=ffffff$, leaving just the first $latex r &amp;s=1&amp;bg=ffffff$ terms that we need. Hence:

$latex M = \frac{n!}{\left(n-r\right)!} &amp;s=1&amp;bg=ffffff$

<h3>2. Permutations with replacement</h3>

The difference here from the last example is that each time we make a selection, we replace the item afterwards. Every selection is made from the same original pool, rather than from a gradually decreasing pool. So in this case the formula is going to look something like:

$latex M = n \times n \times n \times \ldots &amp;s=1&amp;bg=ffffff$

The logic above about there only being $latex r &amp;s=1&amp;bg=ffffff$ terms is exactly the same here, so we end up with:

$latex M = n^r &amp;s=1&amp;bg=ffffff$

Simple!

<h3>3. Combinations without replacement</h3>

Now we take the first scenario - permutations without replacement - and adapt it to the scenario where we don't distinguish between different orderings of the selected items. Clearly, we're going to have reduce the number - there will be fewer combinations than there are permutations. Let's assume $latex n = 5 &amp;s=1&amp;bg=ffffff$ and $latex r = 3 &amp;s=1&amp;bg=ffffff$. Imagine the items are numbered balls like in a lottery, and imagine the selected balls are (1, 3, 4). If these were your numbers, you'd win no matter what order they came out in, so the permutations of the $latex r &amp;s=1&amp;bg=ffffff$ selected items - (1, 3, 4), (1, 4, 3), (3, 1, 4), (3, 4, 1), (4, 1, 3) and (4, 3, 1) - are the same, and should be considered just one distinct arrangement. Of course, we already know that there are $latex r! &amp;s=1&amp;bg=ffffff$ permutations of $latex r &amp;s=1&amp;bg=ffffff$ selected items, so if we care about the order of the selected items, then there are going to be $latex r! &amp;s=1&amp;bg=ffffff$ more possibilities than if we don't. So, all we have to do to get the number of combinations is reduce the number of permutations by a factor of $latex r! &amp;s=1&amp;bg=ffffff$. Hence:

$latex M = \frac{n!}{r!\left(n-r\right)!} &amp;s=1&amp;bg=ffffff$

<h3>4. Combinations with replacement</h3>

This scenario is slightly more complicated. <em>Without</em> replacement, to get from the number of permutations to the number of combinations, we just reduced by a factor of $latex r! &amp;s=1&amp;bg=ffffff$. You might therefore think that the answer here is going to be the number of permutations <em>with</em> replacement, similarly reduced by a factor of $latex r! &amp;s=1&amp;bg=ffffff$; but it isn't. Let's take a simple example: a pool of three numbers, and selection of two items. The permutations without replacement are:

(1,2) <span style="color:#ff0000;">(2,1)</span> (1,3) <span style="color:#ff0000;">(3,1)</span> (2,3) <span style="color:#ff0000;">(3,2)</span>

and the additional ones if replacement is allowed are:

(1,1) (2,2) (3,3)

The permutations highlighted in red are the ones you'd get rid of if you were interested only in combinations. Notice that there aren't any red ones in the second batch - the "extra" possibilities that arise when replacement is allowed are the same for permutations as for combinations (in this special case of selecting two items). When you generalise this idea to larger numbers, you do end up with some red items in the second batch, but not as high a proportion as in the first batch. So we have to reduce the second batch by some different factor, not $latex r! &amp;s=1&amp;bg=ffffff$.

This shows us why reducing the total number of permutations by $latex r! &amp;s=1&amp;bg=ffffff$ doesn't work with replacement, but it doesn't actually help us do the calculation, because we can't easily work out how big the second batch is, nor what factor to reduce it by. However, what if we pretend that, whenever we get repetition due to the items being replaced, an item being selected a second time is actually a new item? So instead of (1,1) we could perhaps write (1,1′), with the prime on the second 1 indicating our pretense that it's a different item. If we had (1,1,2,1) for an $latex r = 4 &amp;s=1&amp;bg=ffffff$ trial, we'd call it (1,1′,2,1′′), indicating that the three instances where 1 was selected should all be treated as if they were different items. We're now back in the realm of permutations without replacement, for which the formula is $latex m! /r!\left(m-r\right)! &amp;s=1&amp;bg=ffffff$, where now we're using $latex m &amp;s=1&amp;bg=ffffff$, for the "expanded" number of items to choose from as a consequence of replacement being allowed, rather than $latex n &amp;s=1&amp;bg=ffffff$, the true number of distinct items. Now we just need to work out $latex m &amp;s=1&amp;bg=ffffff$. It turns out that:

$latex m = n + r - 1 &amp;s=1&amp;bg=ffffff$

That is, selecting <em>with</em> replacement from a pool of $latex n &amp;s=1&amp;bg=ffffff$ is like selecting <em>without</em> replacement from a pool of $latex n + r - 1 &amp;s=1&amp;bg=ffffff$. There are $latex r -1 &amp;s=1&amp;bg=ffffff$ extra possibilities to select from, because once we have selected the first item, the remaining $latex r -1 &amp;s=1&amp;bg=ffffff$ items could be (in reality) the same item every time, but we are pretending that they are different. Hence, substituting for $latex m &amp;s=1&amp;bg=ffffff$:

$latex m! /\left(m - r\right)! = \left(n + r - 1\right)! /\left(n - 1\right)! &amp;s=1&amp;bg=ffffff$

This gives us the number of permutations, which we <em>can</em> now reduce by $latex r! &amp;s=1&amp;bg=ffffff$ to get the number of combinations. Our final formula is therefore:

$latex M = \frac{\left(n + r - 1\right)!}{ r!\left(n - 1\right)!} &amp;s=1&amp;bg=ffffff$]]></content:encoded>
  <excerpt:encoded><![CDATA[A quick review of the equations to calculate the number of permutations and combinations when selecting r items from a pool of size n.]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2015-03-13 05:01:42</wp:post_date>
  <wp:post_date_gmt>2015-03-13 05:01:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>combinations-and-permutations</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="combinations"><![CDATA[combinations]]></category>
  <category domain="post_tag" nicename="combinatorics"><![CDATA[combinatorics]]></category>
  <category domain="post_tag" nicename="factorial"><![CDATA[factorial]]></category>
  <category domain="post_tag" nicename="julia"><![CDATA[julia]]></category>
  <category domain="post_tag" nicename="maths"><![CDATA[maths]]></category>
  <category domain="post_tag" nicename="permutations"><![CDATA[permutations]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[172]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/450210125130823_463099417175227]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1374960056154041;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/hgByUe6uxR]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=403453629&stype=M&topic=5982012458682839040&type=U&a=3_7c]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Great American Gamble, by Keith Payne</title>
  <link>https://0x7df.wordpress.com/?p=61</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=61</guid>
  <description/>
  <content:encoded><![CDATA[In <a href="http://www.amazon.com/The-Great-American-Gamble-Twenty-First-ebook/dp/B0051IX0SU" target="_blank">this book</a>, the phrase "great American gamble" is used to refer to the conscious decision, dating back to the 1960s, not to develop strategic defence systems or to protect the civilian population from nuclear strike. The reason for not doing so is to remain vulnerable, which assists in maintaining a stable balance of terror to prevent nuclear war. Strategic defensive systems, in this paradigm, are considered destabilising.

Virtually all sides of US policy debate ultimately adhered to or acceded to this policy, and debates during the <a href="en.wikipedia.org/wiki/Cold_War" target="_blank">Cold War</a> about nuclear doctrine reflected only variations on this theme, not significant departures from it.

However, the concept of a stable balance of terror assumes that the adversary will choose to be deterred; whenever a threat is issued, the threatened party, having free will, controls whether it is an effective threat or not by choosing whether to comply or not. The assumption that a well-managed balance of terror will predictably deter an adversary, regardless of his goals, ideology and interests, the domestic context, and the circumstances of an attendant crisis, is convenient and simplified. It may have worked in the particular circumstances of the Cold War, but may not be so universally.

In addition to deterring a direct nuclear attack by the <a href="http://en.wikipedia.org/wiki/Soviet_Union" target="_blank">Soviet Union</a>, the US was concerned throughout the Cold War to deter a Soviet conventional attack on Europe. The Soviet Union had massive conventional superiority, at one time for example having 140 <a href="http://en.wikipedia.org/wiki/Division_%28military%29" target="_blank">divisions</a>, with the ability to raise 400 divisions within 30 days, in compared with <a href="http://www.nato.int/" target="_blank">NATO</a>'s 30 divisions. It was unquestionably able to conquer Europe in a conventional war. Consequently NATO emphasised nuclear deterrence in the hope of preventing this; in effect the US extended its "nuclear umbrella" over Europe, by threatening nuclear escalation in the face of a Soviet conventional advance into Europe.

However, whether or not this threat was credible, and how to make it so, was the subject of great debate. The Soviet ability to retaliate after nuclear attack by the US was so great as to make such an attack an essentially suicidal act. It was therefore often contended that the US would not risk its existence to defend Europe against a conventional advance by the <a href="http://en.wikipedia.org/wiki/Soviet_Union" target="_blank">USSR</a>, and therefore that the nuclear threat was not credible.

Two schools of thought emerged in response to this:

<ul type="circle">
    <li>The first, lead by <a href="en.wikipedia.org/wiki/Herman_Kahn" target="_blank">Herman Kahn</a>, contended that the threat as it stood was not credible and that the only way to make it credible was to defend against nuclear retaliation. By limiting the damage the Soviets could inflict on the US, using <a href="http://www.cfr.org/missile-defense/ballistic-missile-defense/p30607" target="_blank">BMD</a> and air defences against bombers, the US could survive the Soviet retaliatory strike that would inevitably follow US nuclear escalation. By assuring its own survival given such a course of action, the US could demonstrate its willingness to follow such a course if necessary, thus making the threat credible. Such defensive capabilities would also have the secondary function of limiting damage in the event that deterrence failed. Furthermore the US needed to be able to threaten a wide range of Soviet targets - military and political targets as well as cities and industry - to be credible.</li>
    <li>The second, lead by <a href="http://en.wikipedia.org/wiki/Thomas_Schelling" target="_blank">Thomas Schelling</a>, argued that the threat was enough and that strategic defences were not necessary. His reasoning was that, even if the US was not willing to initiate a deliberate nuclear strike against the USSR, and therefore the threat was not credible, the risk of such a strike being initiated by "chance, accident, third-party influence, imperfection in the machinery of decision, or just processes that we do not entirely understand" is enough to deter. The possibility that irrationality, miscalculation or imprudence in the "fog of war" could result in nuclear attack is great enough that whether the US was prepared to take a conscious decision to do so is irrelevant.</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>61</wp:post_id>
  <wp:post_date>2015-02-21 17:36:15</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>"Windscale 1957: Anatomy of an Accident", by Lorna Arnold</title>
  <link>https://0x7df.wordpress.com/?p=63</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=63</guid>
  <description/>
  <content:encoded><![CDATA[<a href="en.wikipedia.org/wiki/Windscale_fire" target="_blank">Windscale </a>was the site of the first production nuclear reactors in the UK (the first ever UK reactors were the research reactors <a href="en.wikipedia.org/wiki/GLEEP" target="_blank">GLEEP </a>and <a href="www.neimagazine.com/features/featurecurtains-for-bepo/" target="_blank">BEPO</a>, built at <a href="en.wikipedia.org/wiki/Atomic_Energy_Research_Establishment" target="_blank">Harwell </a>in 1947 and 1948). There were two piles, both built to provide <a href="http://www.epa.gov/radiation/radionuclides/plutonium.html" target="_blank">plutonium</a> for the UK nuclear weapons programme. (They also provided <sup>210</sup><a href="http://www.webelements.com/polonium/" target="_blank">Po</a> and <a href="http://www.physics.isu.edu/radinf/tritium.htm" target="_blank">T</a> via the irradiation of cartridges of <a href="http://www.sigmaaldrich.com/catalog/product/aldrich/426172" target="_blank">boron oxide</a> and <a href="http://en.wikipedia.org/wiki/Magnesium_alloy#Magnesium-lithium_alloys" target="_blank">lithium-magnesium alloy,</a> respectively.)

Work on Windscale began in 1947. Pile no. 1 went critical in 1950 and pile no. 2 in 1951. They were <a href="www.world-nuclear.org/info/.../What-is-Uranium--How-Does-it-Work-/" target="_blank">natural uranium</a>, <a href="en.wikipedia.org/wiki/Graphite" target="_blank">graphite</a>-<a href="http://www.doitpoms.ac.uk/tlplib/nuclear_materials/moderators.php" target="_blank">moderated</a> and air-cooled reactors. The US had used water cooling for their plutonium production reactors at <a href="http://www.hanford.gov/" target="_blank">Hanford</a>, but this raised practical problems for the UK: a site which could supply the required volume of water, and which was sufficiently far from any centre of population given the inherent danger of water cooling (due to the severity of <a href="http://www.nrc.gov/reading-rm/basic-ref/glossary/loss-of-coolant-accident-loca.html" target="_blank">loss-of-coolant accidents</a>), could not be found. However it was found that "finning" the fuel element cartridges to increase heat transfer, and introducing air at the side rather than the bottom, helped overcome the difficulties of gas cooling which had previously caused that method to be rejected by both the UK and US, and a decision was made to build atmospheric-pressure air-cooled piles, which need not be so far from centres of population. Hence the Windscale site was found to be adequate.

Each reactor consisted of 2000 tons of graphite blocks in an octagonal stack. The graphite blocks were pierced by horizontal fuel channels - 3440 in all - into each of which 21 fuel elements were loaded, giving a total of over 70,000 fuel elements weighing a total of over 180 tons. The fuel elements were loaded from the "charge face" (the front face of the pile), and when the fuel elements in a channel were to be removed, they were pushed back through the channels out of the rear "discharge face" and fell into skips in a water duct. Fuel channels were in groups of 4 and amongst each group of 4 was a smaller channel used for loading absorbers (to correct the power distribution) and isotope cans for irradiation. There were also 24 horizontal <a href="http://www.tatasteeleurope.com/en/products-and-services/flat/narrow-strip/offering/boron-steels" target="_blank">boron-steel</a> <a href="http://www.nrc.gov/reading-rm/basic-ref/glossary/control-rod.html" target="_blank">control rods</a>.

Fuel was natural uranium, but when <a href="http://web.ead.anl.gov/uranium/glossacro/dsp_wordpopup.cfm?word_id=292" target="_blank">low-enriched uranium</a> first became available from <a href="en.wikipedia.org/wiki/Capenhurst" target="_blank">Capenhurst</a>, this was used as well to counteract the depression of power in the core due to the neutron-absorbing isotope cartridges.

The 1957 fire in Windscale pile no. 1 occurred during an annealing process to release <a href="http://www.britannica.com/EBchecked/topic/643429/Wigner-effect" target="_blank">Wigner energy</a>. Wigner energy is <a href="http://www.physicsclassroom.com/class/energy/Lesson-1/Potential-Energy" target="_blank">potential energy</a> stored in a crystalline material such as graphite due to the displacement of atoms in the lattice upon bombardment by neutrons. The energy can be deliberately released by heating the graphite and <a href="http://www.physicsclassroom.com/class/energy/Lesson-1/Potential-Energy" target="_blank">annealing </a>the crystal structure, yielding more heat. However if this is not done, the energy accumulates and can lead to a spontaneous and uncontrolled release which may be dangerous. It is only a problem in relatively low-temperature reactors; in higher temperature reactors the annealing process goes on continually, preventing Wigner energy from building up.

This problem was not considered at Windscale until 1952, when a minor spontaneous Wigner release occurred in pile no. 2 (this was observed as an anomalous increase in temperature in part of the pile, and was quickly brought under control by increasing the flow of air), followed by a second event the same year in pile no. 1, while the pile was shut down. It was decided to do a deliberate anneal of the remainder of pile no. 2 (where increased temperatures had not been observed and where, it was conjectured, stored Wigner energy still remained.) This and subsequent anneals were performed by shutting down the cooling fans and raising the power to increase the reactor temperature (applying nuclear heating), until sudden temperature increases were observed in specially installed <a href="http://www.thermocoupleinfo.com/index.htm" target="_blank">thermocouples</a>, indicating the release of Wigner energy.

Each Wigner release was different and there was no defined "correct" procedure for performing one. During the 1957 Wigner release, the initial nuclear heating of one part of the pile did not appear to have worked, the relevant thermocouples not having shown the expected sudden temperature rises. Therefore a second nuclear heating was applied to raise the temperature yet further. The official explanation for the fire, published in a government white paper (Cmd 302) a month after the incident, was that the second nuclear heating was applied "before it was necessary" and "at too rapid a rate" and thus caused "the failure of one or more [fuel] cartridges whose contents then oxidised slowly, eventually leading to the fire", and that the accident was due "partly to faults of judgement by the operating staff". This conclusion was based on the results of an inquiry chaired by <a href="http://www.oxfordtimes.co.uk/news/yourtown/oxford/9994337.William_Penney__There_as_the_new_age_dawned/" target="_blank">William Penney</a>, although Penney's report did not mention errors of judgement by the operators.

However, Penney's inquiry was conducted immediately after the accident and had to report very quickly; not all the relevant evidence was available to it. In particular, when pile no. 2 was shut down later, some of the lithium-magnesium cartridges were found to be severely damaged, and when Penney saw photos of these he commented that they might have changed the conclusions of his report had he known about them. Other scientists already believed by this time that the lithium-magnesium cartridges had had a significant role in the accident, even though Penney's report had discounted this as an "unlikely" potential cause. A report published in early 1958 suggested that it was a lithium-magnesium cartridge that had caught fire initially, which in turn had lead to the oxidation of the surrounding graphite, generating enough heat to propagate the fire. Furthermore, lithium was observed to be present in the stack filters prior to the increase in fission products. A second alternative explanation is that the graphite itself caused the fire: previously graphite was thought to be resistant to oxidation up to temperatures significantly higher than those reached in the Wigner anneal, but when the graphite in pile no. 2 was studied in detail after shut-down, it was found that its resistance to oxidation had been greatly degraded by years of irradiation. Despite the increased likelihood of these possible alternatives, in which human error played no part, no revision to the official explanation was ever published.

The main public health hazard caused by Windscale was posed by <a href="http://emergency.cdc.gov/radiation/isotopes/iodine.asp" target="_blank"><sup>131</sup>I</a>, which has an 8-day <a href="http://hyperphysics.phy-astr.gsu.edu/hbase/nuclear/halfli.html" target="_blank">half-life</a>, and can be be consumed by humans via cow's milk. This is particular hazardous to children due to their higher consumption of milk and the smaller size of their thyroids, where iodine accumulates. Consequently a milk ban was issued, and all milk produced close to the Windscale site was destroyed for some time afterwards. In general the assessments of the public danger caused by the accident through this contaminant have been that it was negligible.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>63</wp:post_id>
  <wp:post_date>2015-02-22 15:06:22</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>"The Trap: Whatever Happened to Our Dream of Freedom?", by Adam Curtis</title>
  <link>https://0x7df.wordpress.com/?p=65</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=65</guid>
  <description/>
  <content:encoded><![CDATA[<em><a href="http://www.imdb.com/title/tt0979263/" target="_blank">The Trap: Whatever Happened to Our Dream of Freedom</a></em> was a three-part documentary by the British film-maker <a href="http://www.bbc.co.uk/blogs/adamcurtis" target="_blank">Adam Curtis,</a> which aired on the <a href="http://www.bbc.co.uk" target="_blank">BBC</a> in 2007. Here are a few notes on the first part - <em><a href="http://en.wikipedia.org/wiki/The_Trap_%28TV_series%29#1._.22F.2A.2Ak_You_Buddy.22_.2811_March_2007.29" target="_blank">F**k You Buddy</a></em>.

After the <a href="www.history.com/topics/great-depression" target="_blank">depression in the 1930s</a> and the <a href="www.bbc.co.uk/history/worldwars/wwtwo" target="_blank">Second World War</a>, the established political view was that no-holds-barred <a href="dictionary.reference.com/browse/capitalism" target="_blank">capitalism</a>, founded on individual liberty, did not work, and greater government intervention was required to prevent another depression. Economies could not be driven purely by <a href="http://www.investopedia.com/terms/f/freemarket.asp" target="_blank">free markets</a> but required regulation by government.

Over the subsequent years government bureaucracies increased enormously, attempting to regulate economies for the good of everyone.

<a href="http://www.econlib.org/library/Enc/bios/Hayek.html" target="_blank">Friedrich von Hayek</a>, and Austrian aristocrat who had escaped the Nazis, argued that this was a dangerous strategy and pointed to the <a href="en.wikipedia.org/wiki/Soviet_Union" target="_blank">Soviet Union</a> as an example of what happens when too much control is exercised by government. Government control to plan society inevitably lead to tyranny and dictatorship, and was far worse than the problems of capitalism. He called this '<a href="http://mises.org/library/road-serfdom-0" target="_blank">the road to serfdom</a>'.

Von Hayek proposed a 'self-directing automatic system', a spontaneous order based on individuals striving for personal gain. Von Hayek's ideas however were dismissed by politicians and economists.

However, during the <a href="en.wikipedia.org/wiki/Cold_War" target="_blank">Cold War</a>, nuclear strategists in the US, particularly those at the <a href="www.rand.org" target="_blank">Rand Corporation</a>, developed and applied <a href="www.gametheory.net" target="_blank">game theory</a> as an objective, mathematical basis for approaching nuclear strategy.

Underpinning game theory is the assumption that individuals act entirely in their own self-interest. It also suggests, as in the <a href="plato.stanford.edu/entries/prisoner-dilemma/" target="_blank">prisoner's dilemma</a>, that betraying the other person is always the best strategy.

The mathematician <a href="www-history.mcs.st-and.ac.uk/Biographies/Nash.html" target="_blank">John Nash</a> (portrayed by <a href="https://twitter.com/russellcrowe" target="_blank">Russell Crowe</a> in the film <a href="http://www.imdb.com/title/tt0268978/" target="_blank"><em> A Beautiful Mind</em></a>) took this further and proved that isolated individuals acting alone and entirely in their own self-interest can reach a stable equilibrium, which benefits everyone. However if people cooperate the equilibrium is not achieved and the results are unpredictable. Nash won the Nobel Prize for his work.

Nash's work had an influence on politics in that it proved that a society based on individual self-interest would not necessarily lead to total chaos, but would lead to order; the <a href="https://www.khanacademy.org/economics-finance-domain/microeconomics/nash-equilibrium-tutorial" target="_blank">Nash equilibrium</a>. It provided a scientific basis for von Hayek's idea of self-directing order based on individual freedom.

However, the theory did not match observations of human interactions, which suggested that humans do not always act with pure self-interest, but co-operate and display altruism.

The Scottish psychiatrist <a href="http://laingsociety.org/biograph.htm" target="_blank">R D Laing</a> was, at the time, experimenting with treatments for schizophrenics. He noticed that the doctors never talked to the patients, so as an experiment he spent months talking to 12 patients; this was so successful that they were able to leave the hospital, but within a year they had all returned. This shifted Laing's focus on to studying the conditions of family life and how family members behaved towards each other; he became convinced that this was the root of a wide range of mental problems.

Laing had learnt about game theory and used it to analyse the "games" played by people in their inter-personal relations; games in the sense that there were rules, although some of which were secret.

He showed that the family was essentially an arena for strategising; family members used their everyday actions as strategies to control and manipulate each other. What were normally seen as acts of kindness and love were actually weapons, used to exert control. Love was a way in which one person tried to dominate another person.

He argued that this continual struggle lead to stability in society but a bleak existence for individuals.

Laing became radicalised, believing people could fundamentally not be trusted, including those in public office. He became a leading member of the 1960s counter-culture.

Laing and his followers on the left found unlikely allies in a group of right-wing economists in the US influenced by von Hayek, many of whom came from the Rand Corporation.

These economists put forward a theory called <a href="en.wikipedia.org/wiki/Public_choice" target="_blank">public choice theory</a>, based on the mathematics of game theory, which said the fundamental reality of life was that all people were strategising against each other for their own personal advantage. What had been an assumption in game theory had become a truth. Their leader was <a href="http://en.wikipedia.org/wiki/James_M._Buchanan" target="_blank">James Buchanan</a>.

Specifically, politicians' and bureaucrats' belief that they were working in the public good was false. There is no real measurable concept of "the public good" that exists; rather than helping others, politicians and other groups in control work in their own self-interest at the expense of others.

In the 1970s the British economy was spiralling out of control, and proponents of public choice theory claimed the chaos was a result of the fallacy that government was working in the good of the public, when it was in fact working in its own interest

This view heavily influenced <a href="http://en.wikipedia.org/wiki/Margaret_Thatcher" target="_blank">Margaret Thatcher</a>; James Buchanan was brought to the UK by a right-wing think-tank advising the Thatcher government to give a series of seminars.

As this idea spread throughout government, the result was the tearing down of institutions, of elites who thought they knew what was best for the public good. This was manifest in Thatcher's reform of the <a href="www.nhs.uk" target="_blank">health service</a> for example; the medical elite that controlled the health service was replaced with a new system of management that centred on incentives. If people essentially worked in their own interest, then they could be incentivised to perform well and work efficiently by offering them personal gain as a reward. Systems of targets were used to measure this. This approach was pioneered by <a href="http://www.gsb.stanford.edu/faculty-research/faculty/alain-c-enthoven" target="_blank">Thomas Enthoven</a> in the US DOD, and it heavily influence US Secretary of Defence <a href="en.wikipedia.org/wiki/Robert_McNamara" target="_blank">Robert McNamara</a>'s running of the Vietnam war (in which there were targets for body count, for example). It was Enthoven who advised the Thatcher government on the reform of the health service.

The conclusion is that the view of humans as isolated individuals with essentially no real emotion or altruism, but only a desire to work for their own gain and self-interest, moved from being a simplified approximation that allowed John Nash and the game theorists to produce tractable mathematics, to becoming a fundamental truth about human nature that guided the governing of society in the UK. Government moved away from the assumption that public servants were motivated by doing good for the public interest, to the assumption that they were working in their own interest and therefore had to be offered personal incentives in order to perform well, necessitating targets to measure this performance.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>65</wp:post_id>
  <wp:post_date>2015-02-22 11:51:32</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cold-war"><![CDATA[Cold War]]></category>
  <category domain="post_tag" nicename="economics"><![CDATA[economics]]></category>
  <category domain="post_tag" nicename="game-theory"><![CDATA[game theory]]></category>
  <category domain="post_tag" nicename="nash-equilibrium"><![CDATA[Nash equilibrium]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>"The Soviet Union's Last Stand", by Malcolm Brinkworth</title>
  <link>https://0x7df.wordpress.com/?p=67</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=67</guid>
  <description/>
  <content:encoded><![CDATA[The <a href="http://www.imdb.com/title/tt1173570/" target="_blank"><em>Soviet Union's Last Stand</em></a> was a television documentary by <a href="https://explore.bfi.org.uk/4ce2ba0f5f152" target="_blank">Malcolm Brinkworth</a> that aired on <a href="http://www.bbc.co.uk/bbcfour" target="_blank">BBC Four</a> in 2007. The events it documented are summarised below:

<ul type="disc">
    <li>By 1991 Gorbachev had been in power for six years and had made great reforms in the Soviet Union, bringing increased freedom and democracy.</li>
    <li>However this freedom had also brought with it uncertainty and discontent. Also the USSR's economy was in a nosedive; food was scarce.</li>
    <li>In August 1991 Gorbachev went on holiday to his villa on the Crimean Sea. He had been negotiating a new union treaty with the increasingly nationalistic republics which wanted independence. While away, his Prime Minister saw the text of the treaty and realised that it would essentially spell the end of the Soviet Union.</li>
    <li>The Prime Minister called together senior members of the government including the head of the KGB, and this group unanimously agreed that Gorbachev must not sign the treaty.</li>
    <li>In an extraordinary breach of protocol they turned up, unannounced, at Gorbachev's villa demanding a meeting. They claimed to want simply to talk to Gorbachev to ask him not to sign the treaty, but the KGB had cut off Gorbachev's phone lines. They asked him to return to Moscow and meet with the leaders of the republics, but he refused, and they asked him to sign a state of emergency decree, but he refused. With no communications, he was cut off, including from the Soviet nuclear trigger.</li>
    <li>The group announced that Gorbachev was ill and could not fulfil his duties, and therefore the vice president became acting president and signed a state of emergency. Essentially, the "emergency committee" had seized power. All political parties other than the Communist Party were banned and the army was brought in to maintain control.</li>
    <li>Boris Yeltsin was President of Russia, and was striving for independence from the Soviet Union and a sovereign, democratic Russia. As an enemy of Gorbachev, the emergency committee wanted to offer Yeltsin the presidency of the Soviet Union in order to preserve the Union. This offer was bungled (it was done over the phone rather than face to face), and Yeltsin refused.</li>
    <li>Yeltsin had his base at the Russian Parliament, nicknamed the White House, and he went there. Yeltsin had popular support, and approximately 30,000 of his supporters surrounded and barricaded the White House, in the hope that the Russian army, under the control of the emergency committee, would not want to risk the blood of Russian people. They called the bluff of the emergency committee and won out, as once the army realised the scale of the bloodshed that would be necessary to neutralise Yeltsin, they withdrew.</li>
    <li>Yeltsin claimed victory. A delegation from Yeltsin and a delegation of the emergency committee now raced to Gorbachev, who refused to see the latter but welcomed Yeltsin's delegation with open arms.</li>
    <li>Yeltsin subsequently attacked Gorbachev, and banned the Russian Communist Party. Gorbachev soon realised that communism could not be reformed, and took the extraordinary action of resigning as head of the Communist Party and recommending that it be disbanded.</li>
    <li>Within months, most of the Soviet republics had declared independence; on Christmas Day, the red flag was lowered over the Kremlin for the last time.</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>67</wp:post_id>
  <wp:post_date>2015-02-22 16:10:07</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cold-war"><![CDATA[Cold War]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Programme Management Demystified, by Geoff Reiss</title>
  <link>https://0x7df.wordpress.com/?p=69</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=69</guid>
  <description/>
  <content:encoded><![CDATA[<span style="text-decoration:underline;"></span>

Introduction

What is Programme Management?

Programme management is the coordinated management of a portfolio of projects that call upon the same resources, to achieve a set of business objectives.

In particular, programme management consists of the following responsibilities:

<ul type="disc">
    <li>Defining programmes and projects based on the organisation's strategy</li>
    <li>Describing the scope and boundaries of the programme</li>
</ul>

<ul type="disc">
    <li>Evaluating risks and benefits of specific projects</li>
</ul>

<ul type="disc">
    <li>Maintaining the relevant section of the work breakdown structure</li>
</ul>

<ul type="disc">
    <li>Controlling the membership of the project management team</li>
</ul>

<ul type="disc">
    <li>Establishing and operating an approval procedure for projects</li>
    <li>Approving projects' budgets and timescales</li>
    <li>Assigning projects to project managers</li>
</ul>

<ul type="disc">
    <li>Managing conflicts between projects and between functions</li>
</ul>

<ul type="disc">
    <li>Monitoring progress towards projects milestones</li>
</ul>

<ul type="disc">
    <li>Making decisions about future workload</li>
</ul>

<ul type="disc">
    <li>Understanding the impact of projects on each other</li>
</ul>

<ul type="disc">
    <li>Understanding the impact of changes in functional areas on projects</li>
</ul>

<ul type="disc">
    <li>Analysing past project performance</li>
</ul>

<ul type="disc">
    <li>Risk management</li>
</ul>

<div>
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>Programme Management</td>
<td>Project Management</td>
</tr>
<tr>
<td>Ongoing</td>
<td>Fixed timescale</td>
</tr>
<tr>
<td>Many simultaneous projects</td>
<td>Single project</td>
</tr>
<tr>
<td>Projects tend to be similar</td>
<td>Projects not necessarily similar</td>
</tr>
<tr>
<td>Personal relationship with skilled resources (individuals)</td>
<td>Impersonal relationship with unskilled resources (sub-contractors)</td>
</tr>
<tr>
<td>Concentration on resources</td>
<td>Resources less important</td>
</tr>
<tr>
<td>Maximise utilisation of resources</td>
<td>Minimise demand for resources</td>
</tr>
<tr>
<td>Concentration on the corporate objectives</td>
<td>Concentration on the project alone</td>
</tr>
</tbody>
</table>
</div>

Types of Project

<ul type="disc">
    <li>Internal or external. Internal projects are designed to change the organisation within which they run, whereas external projects have a deliverable for a customer.</li>
    <li>Closed or open. Closed projects involve the delivery of something that is clearly specified, and can therefore have a clear timescale. Open projects usually start from requirements and involve the development or design of something. For example, building a hotel from drawings and specifications is a closed project, designing a hotel from a set of customer requirements is an open project.</li>
</ul>

<ul type="disc">
    <li>Physical or non-physical. Physical projects have a tangible deliverable. Non-physical projects include software development and scientific R&amp;D.</li>
</ul>

Projects can also be classified as "runners", "repeaters" and "strangers":

<ul type="disc">
    <li>Runners are mainstream projects typical of the organisation that happen all the time: the bread and butter.</li>
</ul>

<ul type="disc">
    <li>Repeaters are less typical projects that require a little more attention from the organisation and are slightly riskier.</li>
</ul>

<ul type="disc">
    <li>Strangers are one-off projects that the organisation has little or no experience of, and is likely to be higher risk.</li>
</ul>

Benefits of Programme Management

<ol type="1">
    <li value="1">Encourages forward planning.</li>
</ol>

<ol type="1">
    <li value="2">Leads to better communication.</li>
    <li>Allows something to monitor against.</li>
</ol>

Managing the Programme

Programme Definition

One simple tool to help evaluate a project's viability is a graphical comparison of a set of alternative projects based on three factors: value, risk and demand for resources. Plot each project as a symbol on a chart with "demand for resources" on the x-axis and "value" on the y-axis. Then make the size of the symbol representing each projects represent "risk": the larger the symbol the more risky the project. Small symbols in the top-left portion are better than large symbols in the bottom-right.

Structured Diagrams

There are three types:

<ol type="1">
    <li value="1">Products breakdown structure (PBS)</li>
</ol>

<ol type="1">
    <li value="2">Work breakdown structure (WBS)</li>
    <li>Organisation breakdown structure (OBS)</li>
</ol>

The PBS (or component breakdown structure) is a hierarchical diagram showing the breakdown of the physical deliverable into its sub-systems and components. It is not chronological, and says nothing about what has to be done or who will do it. There may be more than one way to break the product down into a hierarchy.

The WBS indicates the work that has to be done. The task of conducting the project is broken down into a hierarchy of subtasks. Each subtask is a "work package". The WBS does not take into account the logical flow of the work, but is concerned with only identifying the tasks and organising them. Critical path diagrams or PERT charts can be used to link the tasks together into a logical sequence.

A "responsibility assignment matrix" or "responsibility chart" can be used to link the WBS to the people or teams available to do the work. The elements of the WBS are listed down the left-hand-side and the names of people or teams (and their functions) along the top. Then in each cell write "R" (responsible), "A" (accountable), "C" (consulted) or "I" (informed). Only one person can be accountable. The responsible people are those that will actually do the work. Those denoted with "C" will be consulted about the task and therefore contribute to it, whereas "I" indicates that the individual will be kept informed about the task but will not contribute to it.

Problems in Programme Management

<ol type="1">
    <li value="1">Resource conflicts occur.</li>
    <li>Responsibility for the programme is often assumed but no authority over the resources is given.</li>
</ol>

<ol type="1">
    <li value="3">The work plan may change rapidly requiring frequent updates.</li>
</ol>

<ol type="1">
    <li value="4">Data are available on the work done (e.g. through timesheets), but the important question is "how much is left to do?"</li>
</ol>

<ol type="1">
    <li value="5">Downtime (staff holidays, training, administration) is difficult to estimate and account for.</li>
</ol>

Budgets, Cost Control and Finance

Many organisations require that projects pass through a series of stages or phases, and may relate permission or approval to these stages (e.g. through stage gates). Most stage approaches are based on three main phases:

<ol type="1">
    <li value="1">Concept or initial design</li>
</ol>

<ol type="1">
    <li value="2">Detailed or final design</li>
</ol>

<ol type="1">
    <li value="3">Construction or implementation</li>
</ol>

Approval is usually required between concept and detailed design, then again between detailed design and implementation. Cost estimates for the project are likely to be less accurate in the early phases and ought to become increasingly accurate as the project progresses. The uncertainty on the cost estimate may also be asymmetric: for the example the uncertainty may be -20% to +50% at the beginning, -10% to +30% in the detailed design stage, and -5% to +15% in the implementation phase. This reflects the higher likelihood, or the greater impact, of costs rising rather than falling. Furthermore, as the project progresses, and the amount of money committed increases, the ability to influence the project falls. The cost of making changes increases.

Expenditure on a project can be plotted as a cash-flow curve: a cumulative graph of expenditure over the life of the project. Estimated and actual expenditure can be plotted on the same diagram to monitor costs. An "earned-value analysis" (EVA) graph shows:

<ol type="1">
    <li value="1">The planned expenditure (the "budgeted cost of work scheduled")</li>
</ol>

<ol type="1">
    <li value="2">The actual expenditure (the "actual cost of work scheduled")</li>
    <li>The value of the work actually done (the "budgeted cost of work performed")</li>
</ol>

Matrix Management

Matrix management is a technique that allows multiple projects or programmes of work to be mapped to the functional areas of the organisation. Organisations structured in this way have two hierarchies. The first is a functional hierarchy in which functional managers run departments comprised of specialists or operatives of a particular type: designers, software developers, sales people, etc. The second is a programme hierarchy in which project managers take responsibility for specific projects, which are grouped into programmes of work run by programme managers. The project and programme managers plan and manage work but don't do anything directly, and are not responsible for the resources required to conduct the projects.

There are several styles of matrix management.

<ol type="1">
    <li value="1">Subcontract matrix. Each project manager is given a budget for each project, and he "buys" work from functional departments. This works very well where there is more than one functional department that can compete for the work, and the project manager can essentially invite functional departments to "bid" for work. Tasks assigned to a functional department are then managed by and within that department until they are completed and handed back to the project manager, who may have little or no interaction with the individuals doing the work. One disadvantage with this approach is that there is no project team: each functional department works in isolation from the others involved in the project, and have only limited involvement in the project as a whole.</li>
    <li>Full-time assignment matrix. In this approach the project manager builds a project team for the duration of the project, asking functional managers to assign personnel from their areas to the project. The functional areas act more like staffing agencies, providing manpower to multiple projects. The disadvantage of this approach is that staff essentially have two lines of authority: the long-term future and career path are the responsibility of the functional manager, while the project manager has responsibility for the particular work delivered in the short-term.</li>
    <li>Part-time assignment matrix. This is something of a hybrid of the above. As in the full-time assignment matrix, staff from functional areas are loaned out to projects and become part of the project team for the duration. However, as in the subcontracting model, they remain located in their functional areas and probably work part-time on a number of different projects. This gives rise to one of the main disadvantages of this approach: the difficulty faced by functional staff juggling the conflicting demands of multiple projects. Furthermore this is a model in which project managers have responsibility for their projects but little or no authority over the functional staff performing the work.</li>
</ol>

Most departments have a significant amount of non-project work to balance with project work: at the very least there is administrative work and training. This needs to be taken into account, either by calculating how many hours a full-time employee actually contributes to the project, or by including some or all of the non-project work in the project plan.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>69</wp:post_id>
  <wp:post_date>2015-02-21 19:20:56</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Product Development for the Lean Enterprise, by ?</title>
  <link>https://0x7df.wordpress.com/?p=71</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=71</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
<ul>
<ul>
    <li>Toyota has been consistently more successful than its competitors, even in harsh economic periods. This is often attributable to its Toyota Production System: a manufacturing system developed to eliminate waste as far as possible, and from which the concept of "lean" subsequently emerged.</li>
</ul>
<ul>
    <li>However, lean manufacturing is only part of Toyota's success, as illustrated by the failure of many other organisations to mimic Toyota's success despite implementing lean manufacturing. A second vital aspect that is much less well known is Toyota's Product Development System (TPDS).</li>
</ul>
<ul>
    <li>Toyota's Product Development System is not simply the result of applying waste reduction to product development , in the same way that the TPS is the result of reducing waste in manufacturing. Instead it is an entirely different paradigm or operating philosophy.</li>
    <li>Toyota does not have a detailed step-by-step process describing how to do product development. Instead, they have a knowledge-based environment in which knowledge from all previous projects about what works and what doesn't is captured, made available and widely used. New products more or less emerge from the collective learning.</li>
</ul>
<ul>
    <li>There are four cornerstone elements to the TPS:
<ol>
    <li>Set-based concurrent engineering (the process)</li>
</ol>
</li>
<ol>
    <li>Workforce expertise (the people)</li>
</ol>
<ol>
    <li>System-designer entrepreneurial leadership (the leaders)</li>
</ol>
<ol>
    <li>Responsibility-based planning and control (the control system)</li>
</ol>
</ul>
</ul>
</ul>

&nbsp;

<b>Set-Based Concurrent Engineering</b>

&nbsp;

In a traditional linear engineering process, one of several system concepts is selected and partitioned into subsystems linked by interface specifications, then the subsystems are designed independently before being integrated at the systems level. Problems arising in the integration step result in "loopbacks", unplanned iterations of the design process.

&nbsp;

In set-based engineering, multiple sets of possibilities are explored at the subsystem level, given broad targets, then narrowed and/or combined as the targets tighten. The interfaces are deliberately kept loose to retain flexibility. If a system has five subsystems, and three system-level concepts are developed, then traditionally there are three options for each subsystem. However in a set-based philosophy, the process begins with three options for each subsystem, which due to the deliberate flexibility of the interfaces, can be combined in any way to give 35 options at the system level, for no extra effort. If each option for each subsystem has an 0.8 chance of success, then each combination of options has a 0.85 = 0.33 chance of success. For three unique combinations (the traditional model), then there is a (1-0.33)3 = 0.3 chance that all three fail. If the subsystems are interoperable, then there is a (1-0.8)3 = 0.008 chance of all three options for any single subsystem, will fail, and a (1-0.008)5 = 0.96 chance that no subsystems fail (i.e. total success).

&nbsp;

Importantly, for each subsystem, one option that will certainly work is kept as part of the option set, for redundancy; as knowledge and confidence grow, redundancies can be dropped. The probability of success is therefore 1. If novel, improved, higher-risk options ultimately fail, the lower risk redundancy option means that unplanned loopbacks are not necessary, and the knowledge gained from the failed option is recorded and made available for future projects. This allows an infusion of new ideas to be combined with risk aversion, which are normally mutually exclusive philosophies. Rather than having system-level specifications to which subsystem designers must design, knowledge of performance of subsystems is the driver for the system-level design.

&nbsp;

<b>Workforce Expertise</b>

&nbsp;

There is a requirement for a highly skilled, knowledgable workforce. Engineers stay on a technical career track so that they can continue to build up knowledge and experience, and rather than getting promoted into management, they get rewarded for that experience. Furthermore, functional managers are primarily teachers; engineers are expected to take responsibility, so they have to learn from their managers, who are the most competent engineers with the most experience.

&nbsp;

<b>System-Designer Project Leadership</b>

&nbsp;

While the functional managers are responsible for the teaching and technical excellence of the staff, the project leader is responsible for managing the set-based process and for making the narrowing and combining decisions. In order to be able to make these decisions, the project leader has to be the best technical person available: i.e. The chief engineer for the project is assigned this role. The staff do not report to him, but decisions about the project are ultimately made by him.

&nbsp;

<b>Responsibility-Based Planning and Control</b>

&nbsp;

<i>It is the nature of product development that there will be variability. </i><b><i>There has to be if there is to be innovation.</i></b> Tasks to be done in the future are defined based on the results of current tasks, therefore laying out a project plan consisting of a linear sequence of tasks from start to finish cannot work. Therefore a task-based planning system is replaced with a responsibility-based planning system in TPDS. In this:

<ul>
<ul>
    <li>The chief engineer as the project leader sets a number of target times for key integrating events or milestones. These are imperative dates, and they never slip; if a particular subsystem alternative is not ready, there is a backup standing by that is used. These are not like normal milestones in which a particular identified sub-task has to have been completed, but are for decision-making.</li>
    <li>Once the chief engineer has decided what has to be ready for each integrating event, he sets responsibilities for achieving those results. Those responsible for some aspect must work out their own schedule for meeting the deadline. I.e. the workforce is responsible: the planning and the execution is done by the same people, unlike the traditional model where planners are responsible for creating a schedule which the engineers must try to keep to. The overall plan is simply the aggregation of the individual plans.</li>
</ul>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>71</wp:post_id>
  <wp:post_date>2015-02-21 19:21:49</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Rules of EQ, by Rob Yeung</title>
  <link>https://0x7df.wordpress.com/?p=73</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=73</guid>
  <description/>
  <content:encoded><![CDATA[Emotional intelligence is the ability to identify, understand and manage moods and feelings in both ourselves and others.

&nbsp;

There are three aspects:

&nbsp;

<ul>
<ul>
<ol>
    <li><a href="\Users\Michael\Documents\OneNote%20Notebooks\Books\Business.one">Self-Awareness</a>- the ability to identify moods and feelings in ourselves and understand how they affect others</li>
    <li><a href="\Users\Michael\Documents\OneNote%20Notebooks\Books\Business.one">Self-Direction</a> - the ability to alter our feelings and change our mood to <b>our</b> advantage</li>
    <li><a href="\Users\Michael\Documents\OneNote%20Notebooks\Books\Business.one">Interpersonal Savvy</a><i>'</i> - the ability to identify and manage the emotional states of other people</li>
</ol>
</ul>
</ul>

&nbsp;

A fourth area of <a href="\Users\Michael\Documents\OneNote%20Notebooks\Books\Business.one">Organizational Savvy</a> is also identified, as the application of the above to tackling problems in the workplace.

&nbsp;

&nbsp;

<b>Self-Awareness</b>

&nbsp;

<ul>
<ul>
    <li><b>Understand the brain-body-behaviour connection</b>. Thoughts lead to feelings and physical sensations (if we think an important presentation is going to go badly, we feel nervous). Feelings and physical sensations shape our behaviour. Behaviour affects our thinking. Deliberately behaving in a certain way can create the corresponding thoughts and mood.</li>
    <li><b>Examine your emotions</b>. As stated above, emotions can affect our behaviour. But we often experience emotions that are not really appropriate, such as feeling nervous about a presentation for which we are well-prepared and well-practised. The key to controlling our emotions is to be aware of them and examine them objectively, then to try to identify the thoughts that led to them. It if often the case that the thoughts that lead to negative emotions come from an inner voice that does not describe the reality of the situation, and can be overridden.</li>
    <li><b>Label your emotions</b>. This helps us to think about them objectively.</li>
    <li><b>Distinguish between fact and feeling</b>. Facts are interpreted in different ways by different people, who consequently have different feelings about them (Relationship Counsellor: "How often do you have sex?" Woody Allen: "Hardly ever - three times a week." Girlfriend: "All the time - three times a week!") We can train ourselves to distinguish between fact and feeling. "That presentation went badly" is an evaluation not a fact; a thought that will elicit negative feelings.</li>
    <li><b>Marry your perceptions with those of others</b>. When it comes to strengths and weaknesses, there is no absolute reality. Other people may perceive your strengths and weaknesses differently from you; they may even perceive your strengths (e.g. confidence) as weakness (e.g. arrogance). Being aware of this is an important part of emotional intelligence.</li>
</ul>
<ul>
    <li><b>Reflect and evaluate</b>. Evaluate events by asking the following questions (use the mnemonic SABRE):
<ul>
    <li>Situation (what was it?)</li>
</ul>
</li>
<ul>
    <li>Action (what did you do?)</li>
    <li>Behaviour (how did others behave and how did they respond to you?)</li>
    <li>Result (what was the outcome and how did everyone feel about it?)</li>
    <li>Evaluation (what could you have done better?)</li>
</ul>
</ul>
<ul>
    <li><b>Seek feedback</b>.</li>
</ul>
<ul>
    <li><b>Accept feedback with good grace</b>.</li>
</ul>
<ul>
    <li><b>Identify your priorities</b>. Being explicitly aware of our priorities is essential to achieving them.</li>
</ul>
<ul>
    <li><b>Write your eulogy</b>. This helps to identify what it important to us.</li>
    <li><b>Discover your vision</b>. A vision is an image of what success looks like. Not just an action plan, but something that sums up our life's ambitions.</li>
    <li><b>Set SMART goals</b>. Goals should be:
<ul>
    <li>Specific</li>
    <li>Measurable</li>
    <li>Achievable</li>
</ul>
</li>
<ul>
    <li>Realistic</li>
</ul>
<ul>
    <li>Timed</li>
</ul>
</ul>
</ul>

&nbsp;

<b>Self-Direction</b>

&nbsp;

<ul>
<ul>
<ul>
    <li><b>Break the link</b>. When we feel strong emotion we have a tendency to act first and think later. Instead, as soon as we start to feel an emotion and the associated physical sensations, we should question it.</li>
</ul>
<ul>
    <li><b>Challenge automatic negative thoughts</b>. These are private, uncensored views that pop into our heads when we experience strong emotions. They are unavoidable but we can challenge them rather than letting them lead to negative action.</li>
</ul>
<ul>
    <li><b>Put it into perspective</b>. Ask "is this problem going to kill me?" or more usefully "is this still going to be affecting me in five years?"</li>
</ul>
<ul>
    <li><b>Manage physical sensations and symptoms</b>. The brain-body link works both ways; while emotions can cause physical sensations, controlling physical sensations can also help to control our emotional state. Breathing techniques are the most common application of this.</li>
</ul>
<ul>
    <li><b>Recite personal affirmations</b>. The cyclical brain-body-behaviour link allows us to manipulate our emotions by training our brains to engage in positive thoughts.</li>
    <li><b>Take a problem-solving approach</b>. When encountering problems, check they are tangible problems in the outside world or a problem interpretation and reaction. The strategies above help problems of the latter kind, but in the event of a tangible problem, it can be tackled in the following way:
<ol>
    <li>Define the problem</li>
</ol>
</li>
<ol>
    <li>Generate possible solutions</li>
</ol>
<ol>
    <li>Create a shortlist</li>
</ol>
<ol>
    <li>Weigh up pros and cons</li>
</ol>
<ol>
    <li>Make a choice</li>
</ol>
</ul>
<ul>
    <li><b>Make a list</b>. Write down all of the important tasks you need to accomplish over a number of hours. Don't write everything; make it achievable by writing down a few tasks you can realistically complete. Break big tasks into manageable chunks. By achieving even modest targets in this way, the brain can release reward chemicals, thus improving motivation.</li>
    <li><b>Visualize success</b>. Visualizing success causes the brain to release chemicals that promote positive feelings.</li>
    <li><b>Use emotional anchors</b>.</li>
    <li><b>Walk tall</b>. Controlling posture and body language is another example of controlling behaviour to influence emotional state.</li>
</ul>
<ul>
    <li><b>Handle setbacks</b>. There are five stages in response to a big setback:
<ol>
    <li>Denial</li>
    <li>Anger</li>
</ol>
</li>
<ol>
    <li>Disorientation and depression</li>
</ol>
<ol>
    <li>Acceptance</li>
    <li>Renewal</li>
</ol>
</ul>
</ul>
</ul>

Understanding this allows us to identify which stage we are in and accelerate the process of recovery.

<ul>
<ul>
<ul>
    <li><b>Develop your emotional resilience</b>. Setbacks are often all in the mind, so how we recover depends on how we perceive the setback and how resilient we are. Learn to acknowledge setback rather than denying them, deal constructively with anger, etc.</li>
</ul>
</ul>
</ul>

&nbsp;

&nbsp;

<b>Interpersonal Savvy</b>

&nbsp;

There are four aspects:

&nbsp;

<ul>
<ul>
<ol>
    <li>Empathy and rapport.</li>
</ol>
<ol>
    <li>Communication.</li>
    <li>Building rewarding relationships.</li>
</ol>
<ol>
    <li>Tackling unsatisfactory relationships.</li>
</ol>
</ul>
</ul>

&nbsp;

<ul>
<ul>
<ul>
    <li><b>Empathy and rapport</b>.
<ul>
    <li>Listen, listen, listen</li>
</ul>
</li>
<ul>
    <li>Read emotional cues</li>
</ul>
<ul>
    <li>Ask questions</li>
</ul>
<ul>
    <li>Demonstrate listening and sensitivity</li>
</ul>
<ul>
    <li>Make eye contact, don't stare</li>
</ul>
</ul>
<ul>
    <li><b>Communication</b>.
<ul>
    <li>Reinforce rapport through self-disclosure</li>
</ul>
</li>
<ul>
    <li>Express your emotions</li>
</ul>
<ul>
    <li>Disclose secrets with care</li>
</ul>
<ul>
    <li>Make effective requests</li>
</ul>
<ul>
    <li>Give constructive feedback</li>
</ul>
<ul>
    <li>Assert yourself</li>
</ul>
<ul>
    <li>Learn to say no, but...</li>
    <li>Communicate without words</li>
</ul>
<ul>
    <li>Mind your language</li>
</ul>
</ul>
<ul>
    <li><b>Building rewarding relationships</b>.
<ul>
    <li>Respond and reciprocate</li>
</ul>
</li>
<ul>
    <li>Understand innermost needs</li>
</ul>
<ul>
    <li>Respect relationship boundaries</li>
</ul>
<ul>
    <li>Build "other-esteem"</li>
</ul>
<ul>
    <li>Control emotional outbursts</li>
</ul>
<ul>
    <li>Facilitate problem-solving</li>
</ul>
<ul>
    <li>See the glass as half-full</li>
</ul>
</ul>
<ul>
    <li><b>Tackling unsatisfactory relationships</b>.
<ul>
    <li>Broach disagreements</li>
    <li>Discuss differences</li>
    <li>Acknowledge personality differences</li>
    <li>Respect personality differences</li>
    <li>Establish ground rules</li>
</ul>
</li>
<ul>
    <li>Restore goodwill</li>
</ul>
<ul>
    <li>Act as a peacemaker</li>
</ul>
</ul>
</ul>
</ul>

&nbsp;

&nbsp;

<b>Organizational Savvy</b>

&nbsp;

<ul>
<ul>
<ul>
    <li><b>Become politically aware</b>. Being alert to office politics is an essential skill for being successful. Be aware of key decision-makers and the relationships between them, and build relationships with them. The key players are not always the most senior people. Be aware of gatekeepers: those who may not hold influence themselves but act as a filter to key players (secretaries, support staff, PAs).</li>
</ul>
<ul>
    <li><b>Understand your culture</b>. The culture of an organisation is the set of unwritten rules that govern how peopleshould actually behave. There are four basic questions to ask to understand an organisation's culture:
<ol>
    <li>Team or individual performance? Should you work selflessly for the benefit of the team of look after your own interests?</li>
</ol>
</li>
<ol>
    <li>High or low sociability?</li>
</ol>
<ol>
    <li>Meritocracy or "politocracy"? Will you be rewarded for the good work you have done or for being known and liked by your managers?</li>
</ol>
<ol>
    <li>High versus low risk? Note that an organisation that rewards those who take chances and succeed may not be a highly risk-tolerant culture, if it simultaneously punishes those who take risks and fail.</li>
</ol>
</ul>
<ul>
    <li><b>Deepen your understanding of culture</b>. Consider:
<ol>
    <li>What does the dress code say about the culture?</li>
    <li>How direct are people in their communications?</li>
</ol>
</li>
<ol>
    <li>How much control is exerted on employees?</li>
    <li>To what extent does the organisation live by its stated values?</li>
    <li>What are the unwritten rules about perks and benefits?</li>
</ol>
</ul>
<ul>
    <li><b>Identify role models and mentors</b>.</li>
    <li><b>Exert indirect influence</b>. If you are unable to influence someone directly, you may be able to do so through a third party.</li>
    <li><b>Demonstrate integrity</b></li>
</ul>
</ul>
</ul>

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>73</wp:post_id>
  <wp:post_date>2015-02-21 19:23:04</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Speaking your Mind by Rebecca Stott, Tory Young and Cordelia Bryan</title>
  <link>https://0x7df.wordpress.com/?p=75</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=75</guid>
  <description/>
  <content:encoded><![CDATA[<ul>
<ul>
<ol>
    <li>Introduction</li>
</ol>
<ol>
    <li>Conversations and seminars
<ol>
    <li>Conversation</li>
</ol>
</li>
<ol>
    <li>Analysing conversation
<ul>
    <li>When conversing, most people follow certain assumed principles: they will not obstruct the flow of conversation, they will speak clearly and truthfully, and they will follow the principle of politeness.</li>
    <li>The <b>metamessage</b> is the sum total of content, context and body language.</li>
    <li>Gestures that mimic what they refer to, for example the size of some object, are deacribed as <b>iconic</b>. Other gestures by convention stand for certain meanings, such as a nod of the head for affirmation.</li>
</ul>
</li>
<ul>
    <li>Conversation analysts speak of <b>adjacency pairs</b>, which consist of a <b>first part pair</b> and a <b>second part pair</b>. These pairs consist of an utterance and a response, or a question and answer.</li>
    <li><b>Turn-suppressing</b> or <b>turn-claiming cues</b>, such as a raised hand, urgent nod or turning towards someone else, let the speaker know they should give up the turn.</li>
</ul>
<ul>
    <li>The ending of a conversation is known as the <b>terminal exchange</b>. A topic introduced to end a conversation is <b>closing implicative</b>.</li>
</ul>
<ul>
    <li><b>Deictic words</b> are pointing words, such as this, that and here.</li>
</ul>
<ul>
    <li>Cohesion in conversation is created by <b>anaphoric reference</b>, the referring back to earlier content.</li>
    <li>An excellent way of ensuring you have understood the speaker is to paraphrase or summarise their comments in your own mind before you respond. Active listening requires us to paraphrase and summarise and we do this by looking for key words and phrases, analogies and metaphors that make sense to us, as we listen.</li>
    <li>Good speakers usually give signposts to indicate the main structure of their points. These are usually clue words such as 'firstly', 'next', 'finally' and 'on the other hand'. Sometime the signals come in sentences such as 'There are three wyas...' or 'I will present four reasons...'. These let you know what is coming. Usually the signposts are emphasised by the speaker's tone of voice, inflection, body language and facial expression.</li>
</ul>
</ol>
<ol>
    <li>Gender and conversation</li>
    <li>Literary conversations</li>
    <li>Seminars</li>
    <li>Analysing seminars</li>
</ol>
<ol>
    <li>Chairing seminars</li>
</ol>
</ol>
<ol>
    <li>Rhetoric and argument
<ol>
    <li>Argument
<ul>
    <li>A communicative process used for the growth of knowledge, a process based on making claims, asserting and challenging, assenting and dissenting. It is conversational in nature, involves critical reasoning, and depends upon participants coming prepared to reach an agreement.</li>
</ul>
</li>
</ol>
</li>
<ol>
    <li>Analysing argument
<ul>
    <li>Once of the simplest ways of analysing argument is to use the terms <b>claimant</b> and <b>interlocutor</b>. The claimant makes a claim and tries to persuade others of its validity; the interlocutor repsond to the claim and refine it by asking questions, objecting to claims, putting forward counter-claims, and producing evidence to support the counter-claims.</li>
    <li>Other key features are the <b>audience</b>, who will or will not be persuaded by the argument, the use of reason to reach an agreement, and the adaption of the premise on which the argument is based to the particular audience.</li>
    <li>The following skills are required to argue effectively:
<ul>
    <li>Openness to the positions of others</li>
</ul>
</li>
<ul>
    <li>Good listening skills</li>
</ul>
<ul>
    <li>The ability to reason effectively</li>
    <li>The ability to ask good questions</li>
</ul>
<ul>
    <li>The ability to collect appropriate evidence</li>
</ul>
<ul>
    <li>The ability to see the sequence of the argument</li>
    <li>The ability to summarise accurately the positions of others</li>
    <li>The ability to think around an issue</li>
</ul>
<ul>
    <li>The ability to speak so people will listen</li>
    <li>Clarity</li>
    <li>Conciseness</li>
    <li>Confidence</li>
</ul>
<ul>
    <li>Good judgement</li>
</ul>
</ul>
</li>
</ol>
<ol>
    <li>Rhetoric
<ul>
    <li>Rhetoric means 'the art of persuasion'. A rhetor was an ancient Greek or Roman teacher of rhetoric. When we say something is rhetorical, we mean it has been constructed to have persuasive effect.</li>
    <li>Aristotle defined rhetoric as the art of discovering all the available means of persuasion in any given case. He insists that rhetoric can adapt to any new subject area; it is possible to find the means of persuasion for any given subject.</li>
    <li>Rhetoric grew with the emergence of democracies, presumably because within a democracy people have to be persuaded not ruled by force.</li>
</ul>
</li>
<ul>
    <li>Aristotle classifies the mean of persuasion into three categories:
<ol>
    <li><b>Ethos</b>: persuasion through personality and stance</li>
</ol>
</li>
<ol>
    <li><b>Pathos</b>: persuasion through arousal of emotion</li>
</ol>
<ol>
    <li><b>Logos</b>: persuasion through reasoning.</li>
</ol>
</ul>
<ul>
    <li>The Roman rhetorician Quintillian (writing in AD 94) said rhetoric consisted of:
<ol>
    <li><b>Invention</b>: the finding of arguments or proofs</li>
</ol>
</li>
<ol>
    <li><b>Disposition</b>: the arrangement of such matters</li>
    <li><b>Style</b>: the choice of words, verbal patterns and rhythms that will most effectively express the material.</li>
</ol>
</ul>
<ul>
    <li>Later rhetoricians came to think of three types of rhetoric:
<ol>
    <li><b>Deliberative</b>: to persuade an audience to approve or disapprove of a particular point of view or policy (e.g. in a parliamentary address)</li>
</ol>
</li>
<ol>
    <li><b>Forensic</b>: to achieve condemnation or approval of a person's actions (e.g. in a court)</li>
</ol>
<ol>
    <li><b>Epideictic</b>: to enlarge on the praiseworthiness or sometime blameworthiness of a person or group (usually in a ceremonial context).</li>
</ol>
</ul>
</ol>
<ol>
    <li>Analysing rhetoric</li>
</ol>
</ol>
<ol>
    <li>Shakespeare and Renaissance rhetoric
<ol>
    <li>Politics, class and rhetoric in Shakespearean England</li>
</ol>
</li>
<ol>
    <li>Rhetoric in the grammar schools</li>
</ol>
<ol>
    <li>Dialogue, gender, and a rhetorical duel</li>
</ol>
<ol>
    <li>Rhetoric and the drama of persuasion</li>
</ol>
<ol>
    <li>Tropes: the building blocks of rhetoric
<ul>
    <li><b>Tropes</b> are rhetorical figures or structures (a trope means a 'turn' in language which catches the attention of the reader or listener).</li>
</ul>
</li>
<ul>
    <li>The 20 most common tropes are:
<ol>
    <li>Alliteration</li>
</ol>
</li>
<ol>
    <li>Anaphora: repetition of the same word in succeeding clauses or sentences</li>
</ol>
<ol>
    <li>Antithesis: close placing of contrasting words and therefore ideas</li>
    <li>Aposiopesis: breaking off a sentence before completion, often indicating passionate feeling</li>
</ol>
<ol>
    <li>Assonance: grouping the same or similar vowels closely in a sequence of words</li>
</ol>
<ol>
    <li>Climax: repeating the final word of the first phrase at the beginning of the second, the final word of the second at the beginning of the third, etc.</li>
</ol>
<ol>
    <li>Ekphrasis: a vivid description written in a style intended to match its subject.</li>
</ol>
<ol>
    <li>Erotema: a rhetorical question</li>
</ol>
<ol>
    <li>Hyperbaton: particular deviation from the expected word order</li>
</ol>
<ol>
    <li>Hyperbole</li>
</ol>
<ol>
    <li>Irony</li>
</ol>
<ol>
    <li>Metaphor</li>
</ol>
<ol>
    <li>Onomatopoeia</li>
</ol>
<ol>
    <li>Oxymoron</li>
</ol>
<ol>
    <li>Parison: repetition of a particular grammatical structure in linked clauses or sentences</li>
</ol>
<ol>
    <li>Periphrasis: an expansive way of saying something that might be said more concisely</li>
</ol>
<ol>
    <li>Prosopopoeia: personification</li>
</ol>
<ol>
    <li>Puns</li>
    <li>Simile</li>
    <li>Synecdoche: replacing the whole or the general with a part</li>
</ol>
</ul>
</ol>
<ol>
    <li>Using tropes: Julius Caesar</li>
</ol>
<ol>
    <li>Using tropes: Hamlet</li>
</ol>
</ol>
<ol>
    <li>Everyday rhetorics
<ol>
    <li>Rhetoric in the criminal court</li>
    <li>Rhetoric is everywhere</li>
    <li>Rhetoric in selling</li>
    <li>Rhetoric in story-telling</li>
</ol>
</li>
</ol>
<ol>
    <li>Preparing your case
<ol>
    <li>When is a presentation helpful?</li>
    <li>Preparation: knowing your audience</li>
    <li>Invention, or gathering material
<ul>
    <li>The steps to be considered are:
<ol>
    <li>Understand the context (know and understand the wider picture)</li>
</ol>
</li>
<ol>
    <li>Identify your objective</li>
</ol>
<ol>
    <li>Think about your audience</li>
</ol>
<ol>
    <li>Think round the issues (try to see them from many different vantage points)</li>
</ol>
</ul>
</li>
</ol>
</li>
<ol>
    <li>Disposition, or arrangement of material
<ul>
    <li>Ask yourself:
<ol>
    <li>What is your objective?</li>
    <li>What are the means of persuasion?</li>
    <li>What is relevant/not relevant?</li>
</ol>
</li>
<ol>
    <li>What are the most important points and will they persuade this audience?</li>
    <li>What evidence is most persuasive and effective and what does this evidence prove in terms of your selected main points?</li>
</ol>
<ol>
    <li>How will you arrange your material so that it is most effective with your audience?</li>
</ol>
<ol>
    <li>How will you show your audience that you have moved from one main point to another?</li>
</ol>
<ol>
    <li>How will you show the links between the different parts of the argument, the sequence of the argument and how each point connects to the others?</li>
</ol>
</ul>
</li>
</ol>
<ol>
    <li>Style, or expressing the argument</li>
</ol>
</ol>
<ol>
    <li>Presenting your case
<ol>
    <li>Learning presentation skills</li>
    <li>Types of presentation</li>
    <li>Register</li>
</ol>
</li>
<ol>
    <li>Overcoming your nerves</li>
    <li>Giving and receiving feedback</li>
    <li>Using anecdotes, analogies and examples</li>
</ol>
<ol>
    <li>Practice makes perfect</li>
    <li>Notes, demonstrations and visual aids</li>
    <li>Some final preparations</li>
</ol>
</ol>
</ul>
</ul>

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>75</wp:post_id>
  <wp:post_date>2015-02-21 19:24:28</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Tiger That Isn't by Michael Blastland and Andrew Dilnot</title>
  <link>https://0x7df.wordpress.com/?p=77</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=77</guid>
  <description/>
  <content:encoded><![CDATA[Introduction

Size: Make it Personal

The first question to ask upon encountering a number should be "is this a big number?" Essentially, judgements about the size of numbers cannot be properly made unless the number is put in context, and it is especially important to be wary of large nmbers. The best way to do this is somehow to relate the number in question to a human scale: for example by dividing it by the number of people it is supposed to affect.

Examples:

<ul type="disc">
    <li>If the government raises the retirement age from 65 to 67, 1 in 5 who would have survived to retirement age no longer will. In essence this means that someone who reaches 65 years of age has a 1 in 5 chance of dying in the next 2 years, which is clearly a preposterously high proportion. In fact only 4% of those reaching age 65 will die before they are 67.</li>
</ul>

<ul type="disc">
    <li>The government will spend an extra £300m over 5 years to create a million new childcare places. This corresponds to £300 for each of the million new places, and spread over 5 years amounts to £60 per year per place, or £1.15 per week per place. This is a minuscule amount.</li>
</ul>

<ul type="disc">
    <li>The NHS is heading for a budget deficit of £0.8bn. This seems a large figure when viewed out of context, but it corresponds to about 1% of the total annual NHS budget, and the ability to hit a financial target to within 1% is very good by any standards. NHS spending is about £1600 per head per annum, and a 1% deficit is therefore £16, which is less than the cost of a single visit to the GP (£18).</li>
</ul>

Counting: Use Mushy Peas

In order to produce statistics, something must be counted; and in order to count something, it must be identified and defined. Varying the definition can change the number: for example, in order to count how many people are out of work it is necessary to define what "unemployed" means. (Mrs. Thatcher's government changed the definition of "unemployed" 23 times.) This is often extremely difficult in the real world: especially where people are involved. The things being counted are frequently ill-defined, variable, or change over time. Therefore, it is often the case when statistics are quoted that the definition of the thing being counted has been simplified or modified to allow the counting to take place, and it is important to know whether this simplification has invalidated the meaning of the statistic.

Chance: The Tiger That Isn't

The existence of clusters of apparently unusual events does not necessarily indicate a single cause, or a relationship between the events in the cluster. For example, an unusually large number of cancer cases close to a mobile phone mast may occur because the signals from the mast cause cancer, but it also may occur due to chance, and have no connection to the mast whatsoever. Here "by chance" does not mean without cause, but simply that the causes are not properly understood or too complex or numerous for precise numerical predictions to be made. Theoretically, if a bag of rice is thrown in the air and allowed to fall on the floor, the pattern of rice on the floor could be precisely calculated in advance, but because the calculation is impossible in practice, the pattern might as well be random.

People tend to underestimate how big clusters can be and how frequently they can arise. This can be shown by taking cards one at a time from a well-shuffled pack of cards and observing the longest run of cards of one colour or the other: asked in advance most people would predict a run of 2 or 3, but a run of 5 or 6 is quite likely. The same can be demonstrated by tossing a coin repeatedly. Evolution has probably programmed us to be good at recognising patterns quickly, perhaps even where there are none - it is better to assume that a pattern in the grass is actually a tiger and to flee than to assume the opposite and linger.

Chance can also cause numbers to rise and fall over time, without a simple, definitely identifiable cause. For example, accident rates on a particular stretch of road will rise and fall. If, after one particular rise, a speed camera is installed and a subsequent fall in accidents occurs, then it may be claimed that the speed camera reduces accidents. However, the rise may simply be a chance crest, after which rates would fall anyway. This is called "regression to the mean": after a recent trough or crest, rates will move back towards the long-term average value.

Averages: The White Rainbow

Averages are useful for summarising large amounts of data, but obscure the variety of those data, and may be misleading. Also, there is a tendency to equate "average" with "typical", "normal" or "reasonable", which is often wrong.

<ul type="disc">
    <li>The average length of pregnancy is quoted as 280 days. However, late babies are induced after a maximum of 2 weeks, so late births that would otherwise push the average up are brought forward artificially. The average is therefore shorter than it would be if nature were left to its own devices. Even if we ignore this, we find the median is 282 days: i.e. we must remember that the average is not in the middle.</li>
</ul>

<ul type="disc">
    <li>The average UK salary in 2005/06 was £23k PA. However the median was only £18.8k, so much more than half the population earns less than the national average. The average is skewed towards a higher value by a small number of very high earners. If we imagine all the people in the world were made as tall as they are wealthy, with a person of average wealth being given average height, then put them all in an hour-long procession starting with the poorest, then for the first 20 minutes no-one is visible due to having zero or even negative wealth. Only after 48 minutes have passed do we see someone of average height, and in the last few minutes heights become exceptional, with the last being over 10 miles high. This shows how non-Gaussian the distribution of wealth is compared with the distribution of actual heights.</li>
</ul>

Targets: The Whole Elephant

Performance targets and indicators, like averages, attempt to reduce a complex situation to a single number and in doing so ignore many other facets of the situation. There are 2 main problems: the first is "gaming" in which the individuals responsible for ensuring the target is met focus resources on it in such a way that quality in other areas is reduced. For example, a doctor is told to treat a particular patient urgently because they are about to exceed a waiting time threshold, despite there being another patient more urgently requiring medical attention, but who has already breached the threshold. The other problem is that even without gaming, it is rarely the case the one aspect of something chosen to become the focus of the target robustly represents the whole.

Risk: Make it Personal II

Measurement: How to Drink from a Fire Hose

Data: Know the Unknowns

Shock Figures: Wayward Tee Shots

Comparison: Mind the Gap

Causation: Think Twice

A correlation does not imply causation: the assumption that it does is a common mistake, especially when the causation seems plausible, or fits an existing prejudice. For example:

<ul type="disc">
    <li>Girls educated at single-sex schools perform better in exams. This may be true, but the implication that the single-sex education is the cause of the improved performance may not be. An alternative explanation is that wealthy parents are more likely to send their children to single-sex schools, which are typically fee-paying, and that children of wealthy parents are also more likely to perform better at school. Whenever attempts have been made to adjust performance data for the socio-economic status of the students, single-sex schools have performed no better than co-ed.</li>
</ul>

&nbsp;

Inserted from &lt;<a>file://F:\Books Web\the_tiger_that_isn't.htm</a>&gt;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>77</wp:post_id>
  <wp:post_date>2015-02-21 19:26:53</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fusion</title>
  <link>https://0x7df.wordpress.com/?p=79</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=79</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Types of fusion reactor</h2>

To achieve fusion, extremely high temperatures must be achieved so that nuclei can overcome the repulsive Coulomb force that acts to keep them apart, and as a result of the high temperatures the material - usually deuterium or a deuterium-tritium mix - is in a plasma state. This gives rise to the technological challenge of confining this hot plasma for long enough for the fusion reaction to take place.

There are two main techniques for confining a plasma in a fusion reactor:

<ol>
    <li>Magnetic confinement</li>
    <li>Inertial confinement</li>
</ol>

<h2>Magnetic confinement fusion</h2>

In magnetic confinement fusion the hot D-T plasma is confined within a toroid by magnetic fields. A toroidal magnetic field (going the long way round the toroid) is generated by external coils. A poloidal magnetic field (going the short way round) is generated by an electric current flowing through the plasma in the toroidal direction. The resultant field is helical. The toroidal electric current is usually driven by a toroidal electric field, induced by a transformer. The plasma is initially heated by Ohmic heating due to its own plasma current, induced by the primary transformer. However the plasma becomes less resistive as its temperature rises, so this heating technique is limited. Further heating is therefore provided by neutral beam injection. Temperature is maintained by alpha particle emission from the fusion reactions. The alpha particles maintain the plasma at a steady temperature (allowing the neutrons to escape so that their energy can be harnessed). <span lang="en-GB">This 'ignition' condition requires that:</span>

<span lang="en-GB">nT</span><span lang="el">τ</span><span lang="en-GB">E</span><span lang="en-GB"> &gt; 3e+21 keV.m</span><span lang="en-GB">-3</span><span lang="en-GB">.s</span>

<span lang="en-GB">where </span><span lang="en-GB">n</span><span lang="en-GB"> is the number density of the plasma, </span><span lang="en-GB">T</span><span lang="en-GB"> is its temperature, and </span><span lang="el">τ</span><span lang="en-GB">E</span><span lang="en-GB"> is the energy confinement time. This latter is the characteristic time for the plasma to cool once the heating is switched off (typically a few seconds). </span>Hence to initiate a self-sustaining fusion reaction the temperature must be around 10 keV (around 100 million Kelvin) for a density of 1020 m-3 (at which the plasma pressure is about 1 atm). <span lang="en-GB">The actual value of </span><span lang="en-GB">nT</span><span lang="el">τ</span><span lang="en-GB">E</span><span lang="en-GB"> achieved in research reactors has more than doubled every two years since the first generation of tokamaks in the late 1960s, a faster rate of progress than Moore's law for the number of transistors that can fit on a piece of silicon, and faster than the rate of increase in energy of particle accelerators, which doubles roughly every three years. </span>Only the Tokamak Fusion Test Reactor at Princeton and JET at Culham have used D-T; most experience have involved deuterium only. Plasma-facing components must withstand particle fluxes of up to 20 MW/m2 (almost a quarter of the heat flux on the surface of the sun), corresponding to a surface temperature of tens of thousands of degrees. Water cooling is used to vent some of this heat. One of the main challenges for producing a feasible fusion reactor is achieving steady-state operation. The main reason pulsed rather than continuous operation is currently used is that the usually copper magnetic field coils require a lot of electrical energy to maintain the steady magnetic field. A fusion reactor will require superconducting coils to operate continuously with low power consumption. These must be cooled to 1.8 K by liquid helium. The technology pioneered in the fusion programme (particularly at the Tore Supra tokamak at Cadarache) has formed the basis of the cryogenic systems of the LHC.

<h2>Inertial confinement</h2>

<h3>Conventional inertial-confinement fusion (ICF)</h3>

ICF involves imploding a capsule of fuel - the hot plasma is confined by its own inertia for a time, until enough fusion energy has been deposited to overcome this inertia and cause the pellet to disassemble.

<h3>Fast ignition</h3>

Unlike conventional inertial confinement fusion (ICF), which uses the same set of laser beams both to compress and to heat the fuel, ast ignition uses a set of long-pulse lasers to compress the fuel and a separate short-pulse laser to heat it.

There are three phases:

<ol type="a">
    <li>A capsule is imploded as in conventional ICF to assemble a high-density fuel configuration.</li>
    <li>A hole is bored through the capsule corona composed of ablated material, as the critical density is pushed close to the high-density core of the capsule by the ponderomotive force associated with high-intensity laser light.</li>
    <li>The fuel is ignited by suprathermal electrons, produced in the high-intensity laser-plasma interactions, which then propagate from the critical density to this high-density core.</li>
</ol>

The technique is so-called because the fuel must absorb the heat from the short pulse within 10 ps of the implosion.

Fast ignition does not rely on heating the fuel with a series of shock waves, as ICF does, to create a small central 'hot spot'. Therefore:

<ul type="disc">
    <li>The requirement for high precision in the uniformity of the laser beam and shape of the fuel pellet is avoided, allowing lower quality fabrication.</li>
    <li>More fuel can be compressed for the same energy; fast ignition is about two to three times more efficient than conventional ICF.</li>
</ul>

Crucial to the success of fast ignition will be the ability to transfer a large enough fraction of the energy from the short pulse to the fuel.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>79</wp:post_id>
  <wp:post_date>2015-02-22 14:29:30</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Radiation protection</title>
  <link>https://0x7df.wordpress.com/?p=83</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=83</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Dose and Units</h2>

<p lang="en-US"><em>Dose</em> is the amount of energy absorbed per unit mass, usually measured in J/kg. There are two measures, however:</p>

<ul type="circle">
    <li><em>Absorbed dose</em> is the energy deposited the medium, irrespective of the type of radiation and the nature of the medium. This is not a good measure of the biological effects of ionising radiation on living tissue, since different types of radiation cause different amounts of damage for the same energy deposited. The type of tissue also makes a difference.</li>
    <li><em>Dose equivalent</em> is therefore also used. This is the absorbed dose multiplied by a dimensionless quality factor (which is a function of the type of radiation), and another dimensionless number depending on the type of tissue, which together make up a radiation weighting factor. X-rays, gamma rays, electrons, positrons and muons have a quality factor of 1, protons 2, neutrons 5-20 depending on their energy, and alpha particles, heavy nuclei and fission fragments 20. The dose equivalent is also measured in J/kg, since the radiation weighting factor is dimensionless.</li>
</ul>

Because of the confusion arising from measuring both quantities in J/kg, the units <em>gray</em> (Gy) and <em>sievert</em> (Sv) are used for absorbed dose and dose equivalent, respectively.

<h2>Typical values</h2>

<ul>
    <li>The average dose equivalent from natural background radiation is about 2 mSv/year.</li>
    <li>For full-body doses received in a short period (up to about an hour):
<ul type="disc">
    <li>1 Sv causes nausea</li>
    <li>2-5 Sv causes hair loss, haemorrhaging and death in many cases</li>
    <li>3 Sv causes death within three days in 50% of cases</li>
    <li>6 Sv causes death in almost all cases</li>
</ul>
</li>
</ul>

<h2>Risk vs. Dose</h2>

The broad view is that the relationship between risk and dose is more or less linear down to as low as 100 mSv. However, there is controversy over whether this relationship is linear at very low doses, or whether there is some threshold dose below which the radiation causes no harm, or even is beneficial. Statistical studies are reaching their limits due to the size of populations required to demonstrate statistically significant risk at lower exposure levels.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>83</wp:post_id>
  <wp:post_date>2015-02-22 14:42:50</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Nuclear Sites in the UK</title>
  <link>https://0x7df.wordpress.com/?p=85</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=85</guid>
  <description/>
  <content:encoded><![CDATA[&nbsp;

&nbsp;
Calder Hall

&nbsp;

Calder Hall was the UK’s first nuclear power station, opened in 1956 by the Queen. The Calder Hall site adjoined the Windscale site, and two dual-purpose reactors for plutonium and power production, called PIPPAs, were constructed there from 1953, and a further two from 1955 onwards. (Four additional PIPPAs were constructed from 1955 onwards at Chapelcross, across the Solway Firth in Dumfriesshire.) These were Magnox reactors, in which the natural uranium was canned in Magnox (magnesium oxide), rather than aluminium, sine this alloy has a low neutron cross-section and can withstand a higher operating temperature than aluminium. The Magnox reactors at Calder Hall, and those at Chapelcross, were still generating electricity in 1991.

&nbsp;

<img src="\Users\Michael\AppData\Local\Temp\msohtmlclip11\clip_image001.jpg" alt="" width="200" height="160" />
Capenhurst

&nbsp;

Enrichment has taken place at Capenhurst using the diffusion process since the early 1950s. Originally for the national weapons programme, the plant was converted for civilian grade enrichment in the mind 1960s. 1971 was the start of collaboration between BNFL and Dutch and German organisations to develop the more efficient centrifuge process. In 1977, the first commercial scale centrifuge plant was opened at Capenhurst. Similar plants were build in Holland and Germany. Enrichment services were sold jointly under the banner of Urenco. The diffusion plant ceased operations in 1982 and work commenced on decommissioning the plant.

&nbsp;

In 1995, the Capenhurst site was confirmed as BNFL’s uranic storage facility. Subsequently approval was given for a programme to modernise and upgrade the uranium storage facilities, housed in the former diffusion plant.

&nbsp;

The site safely stores uranic materials prior to their long-term re-use within the nuclear fuel cycle.

&nbsp;
Chapelcross

&nbsp;

Chapelcross in Dumfriesshire was the site of four PIPPA-type reactors (dual-purpose plutonium production and power production reactors), on which construction began in 1955.

&nbsp;
Dounreay

&nbsp;

Site of the UK’s first and only fast reactor, the Dounreay Fast Reactor (DFR). Construction began in 1955 and the reactor was operational by 1959. It was not the first fast reactor in the world but the first small fast reactor capable of generating significant power.

&nbsp;
Harwell

&nbsp;

Harwell, originally an airfield 15 miles from Oxford, was chosen as the site of the UK’s first nuclear research establishment, set up in 1945 by Clement Attlee’s Labour government to study “all uses of atomic energy”. The first director was Sir John Cockcroft.

&nbsp;
Risley

&nbsp;

In 1946, one year after Harwell, a research establishment was set up at Risley, near Warrington. Its purpose was to undertake the production of fissile material “for whatever purpose it might be required”. It was directed by Christopher Hinton. When the Atomic Energy Authority was formed Risley became the home of the Production Group (which made up the AEA along with the Industrial Group based at Harwell and the Weapons Group lead by Penney). Risley was also later the location of the AEA central safety organisation.

&nbsp;
Sellafield

&nbsp;

Sellafield, an ex-Royal Ordnance Factory on the Cumbrian coast, was the site of the UK’s first nuclear reactor, although it was renamed Windscale at the time to avoid confusion with Springfields. The original Windscale reactors (there were two piles, simply called 1 and 2) were graphite-moderated, air-cooled natural uranium reactors built with the intention of producing plutonium for the UK’s NW programme. Pile No. 1 went critical in 1950 and Pile No. 2 in 1951.

&nbsp;

Since plutonium production was the purpose, an on-site chemical separation plant was required, from which the first piece of British plutonium was extracted in 1952 (the first UK weapon test, which used plutonium from Windscale, was on 3rd October 1952). Windscale continued to reprocess fuel from the UK’s Magnox reactors.

&nbsp;

Windscale was also the site of the first advanced gas-cooled reactor (AGR); this 28 MW reactor began to supply power to the national grid in 1963.

&nbsp;

Sellafield is the site of the Thorp reprocessing plant and the Sellafield MOX Plant (SMP).

&nbsp;
Sizewell B

&nbsp;

The last nuclear power station to be built in the UK, in 1995. The UK’s only pressurised water reactor.

&nbsp;
Springfields

&nbsp;

Sprigfields, near Preston, was the UK’s first nuclear manufacturing facility, designed to extract uranium from ore or concentrate, reduce it to metal, and to cast and machine it into fuel elements.

&nbsp;
Wylfa

&nbsp;

Wylfa, in Angleseym is the site of the last of the nine Magnox reactors to be built in the UK.

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>85</wp:post_id>
  <wp:post_date>2015-02-21 20:20:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>“On Newtonian mechanics, no system of point charges admits of a stable static equilibrium”</title>
  <link>https://0x7df.wordpress.com/?p=87</link>
  <pubDate>Sat, 21 Feb 2015 20:25:11 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=87</guid>
  <description/>
  <content:encoded><![CDATA[Niels Bohr, 1961. Prove this.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>87</wp:post_id>
  <wp:post_date>2015-02-21 20:25:11</wp:post_date>
  <wp:post_date_gmt>2015-02-21 20:25:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Atomic collapse</title>
  <link>https://0x7df.wordpress.com/?p=89</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=89</guid>
  <description/>
  <content:encoded><![CDATA[Show from classical electromgnetic theory that a negative electron orbiting a positive nucleus in a mechanically stable orbit radiates energy continuously at a frequency equal to that of its motion.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>89</wp:post_id>
  <wp:post_date>2015-02-21 20:25:32</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Poisson distribution</title>
  <link>https://0x7df.wordpress.com/?p=91</link>
  <pubDate>Sat, 21 Feb 2015 20:37:01 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=91</guid>
  <description/>
  <content:encoded><![CDATA[Consider a concentration of <em>C</em>, in atoms per litre. This is constant in space and time. The measured half-life is <em>τ</em>, in seconds, and the decay constant is $latex \lambda = \ln(2)/\tau &amp;s=1&amp;bg=ffffff$. The number of decays per second per litre – the decay rate – is <em>λC</em>.

However, this is an average value, and the decay is a Poissonian process. The probability of <em>k</em> decays per litre in any given second-long period is:

$latex p(k) = \frac{\left[\lambda k\right]^k e^{-\left[\lambda C\right]}}{k!} &amp;s=1&amp;bg=ffffff$

The figure shows example Poisson distributions for <em>λC</em> = 10, 50, 90 and 130.

<a href="https://0x7df.files.wordpress.com/2015/02/poisson_distributions.png"><img class="aligncenter size-full wp-image-93" src="https://0x7df.files.wordpress.com/2015/02/poisson_distributions.png" alt="poisson_distributions" width="660" height="403" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>91</wp:post_id>
  <wp:post_date>2015-02-21 20:37:01</wp:post_date>
  <wp:post_date_gmt>2015-02-21 20:37:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>poisson_distributions</title>
  <link>https://0x7df.wordpress.com/?attachment_id=93#main</link>
  <pubDate>Sat, 21 Feb 2015 20:35:30 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/02/poisson_distributions.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>93</wp:post_id>
  <wp:post_date>2015-02-21 20:35:30</wp:post_date>
  <wp:post_date_gmt>2015-02-21 20:35:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>poisson_distributions</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>91</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/02/poisson_distributions.png</wp:attachment_url>
</item>
<item>
  <title>X-ray interactions with matter</title>
  <link>https://0x7df.wordpress.com/?p=96</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=96</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Overview</h2>

Because of the electromagnetic nature of X-ray photons, they interact strongly with charged particles, or the electric fields thereof. Several processes can occur when photons interact with matter. Some are listed here and dealt with separately below:

<ul>
    <li>Elastic (coherent) scattering</li>
    <li>Inelastic (incoherent) scattering</li>
    <li>Compton scattering</li>
    <li>Photoelectric effect</li>
    <li>Resonance absorption</li>
    <li>Fluorescence</li>
    <li>Stimulated emission</li>
    <li>Pair production (nuclear)</li>
    <li>Electronic pair production</li>
    <li>Photodisintegration/photofission</li>
    <li>Photonuclear effect</li>
</ul>

<h2>Elastic (Coherent) Scattering</h2>

When a photon scatters off a bound electron, it may scatter elastically or inelastically. In the former, the photon energy is less than the energy required to excite the atom to an excited state, so the atom remains in its ground state, and the photon is scattered. The scattering is described as elastic since the incoming and outgoing (scattered) photons have the same energy. Such scattering is often therefore called classical scattering, since the classical theory of electromagnetic radiation does not permit changes in frequency (energy); the incident radiation causes the electron to oscillate and therefore to re-emit radiation of the same frequency. In the special case in which the scattering target is much smaller than the wavelength of the radiation, the scattering is called Rayleigh scattering, which has the special property that the scattering cross-section varies as 1/λ<sup>4</sup>.

<ul>
    <li>Interaction centre: bound electrons</li>
    <li>Energy range: &lt; 10 keV</li>
    <li><em>Z</em>-dependence: <em>Z</em><sup>2</sup></li>
    <li><em>E</em>-dependence: <em>E</em><sup>-1</sup> (notes) or None (LLNL paper)</li>
</ul>

<h2>Inelastic (Incoherent) Scattering</h2>

In inelastic scattering, the photon does have enough energy to cause the atom to make a transition to an excited state. The energy of the outgoing photon is equal to the energy of incoming photon minus the excitation energy.

<h2>Compton Scattering</h2>

Compton scattering is a special case of inelastic scattering in which the scattering electron is removed entirely from the atom. The relationship between the incident and scattered photons is:

$latex E' = \frac{E}{1 + \frac{E\left(1 - cos\theta\right)}{m_ec^2}} &amp;s=1&amp;bg=ffffff$

where <em>m</em><sub>e</sub><em>c</em><sup>2</sup> is the rest mass of the electron and <em>θ</em> is the scattering angle. Clearly, for small scattering angle, $latex \cos\theta \approx 1 &amp;s=1&amp;bg=ffffff$ and the photon energy is changed very little. The electron energy, or Compton defect, is given by:

$latex E_e = E - E' &amp;s=1&amp;bg=ffffff$

The Compton scattering cross-section is given by the Klein-Nishina formulae. For $latex E &gt; m_ec^2 &amp;s=1&amp;bg=ffffff$, electrons are scattered predominantly in the forward direction.

Compton scattering is the dominant interaction at intermediate photon energies.

<ul>
    <li>Interaction centre: "free" electrons</li>
    <li>Energy range: 300 - 1500 keV</li>
    <li><em>Z</em>-dependence: None (notes) or <em>Z</em> (LLNL paper)</li>
    <li><em>E</em>-dependence: <em>E</em><sup>-1</sup></li>
</ul>

<h2>Photoelectric Effect</h2>

In the photoelectric effect, the incident photon has sufficient energy to remove the electron from the atom altogether, thus ionising it. The photon is absorbed completely, its energy <em>hν</em> going into overcoming the electronic binding energy <em>B</em><sub>e</sub>, with any excess then appearing as the kinetic energy of the electron <em>E</em><sub>e</sub>:

$latex E_e = h\nu - B_e &amp;s=1&amp;bg=ffffff$

Simultaneously with the emission of an electron is the emission of several further photons in the X-ray part of the spectrum, as the newly created vacancy in the inner shell is filled; this is fluorescence.

The photoelectric effect is the dominant interaction at low photon energies. The cross-section exhibits peaks at photon energies equal to the binding energies of the electron shells

<ul>
    <li>Interaction centre: tightly-bound electrons</li>
    <li>Energy range: 0.1 - 500 keV</li>
    <li><em>Z</em>-dependence: <em>Z</em><sup>3</sup></li>
    <li><em>E</em>-dependence: <em>E</em><sup>-3</sup></li>
</ul>

\section{Pair Production}

Photon interaction with the electrinc field of the positively-charged nucleus gives rise to pair production; that is, the annihilation of the photon with the creation of an electron and a positron. The pair production threshold s therefore 1.02 MeV (2$m_ec^2$). While eergy is conserved in pair production, there is a broad spectrum of positron and electron energies.

Pair production is the dominant interaction at high photon energies.

Interaction centre: Nuclear electric field

Energy range: &gt; 1022 keV

$Z$-dependence: $Z$ (notes) or $Z^2$ (LLNL paper)

$E$-dependence: $(E-1022)$ (notes) or $(E-1022)^2$ (LLNL paper)

\section{Photonuclear Effect}

The interaction of photons with the nucleus results in the emission of photonucleons (protons or neutrons). For most nuclei, the photonuclear emission threshold is about 10 MeV.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>96</wp:post_id>
  <wp:post_date>2015-02-22 16:29:27</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Physics of D-T Fusion</title>
  <link>https://0x7df.wordpress.com/?p=98</link>
  <pubDate>Sat, 21 Feb 2015 21:49:39 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=98</guid>
  <description/>
  <content:encoded><![CDATA[<h3>Nuclear Potential Barrier</h3>

The mutual repulsive Coulomb force that a deuterium nucleus and a tritium nucleus exert on each other is given by:

$latex F(r) = \frac{k Z_D Z_T e^2}{r^2} &amp;s=1&amp;bg=ffffff$

where <em>Z<sub>D</sub></em> and <em>Z<sub>T</sub></em> are the charges of the deuterium and tritium nuclei in units of <em>e</em> (which, despite being unity, shall be retained in the equations for pedagogical reasons), <em>r</em> is the separation, and <em>k</em> is the Coulomb constant 1/4<em>πε</em><sub>0</sub>. The work done by this force in moving a pair of nuclei from their minimum separation (<em>R</em><sub>D</sub> + <em>R</em><sub>T</sub>) to an infinite separation is:

$latex W = \int_{r_1}^{r_2} F(r) dr &amp;s=1&amp;bg=ffffff$

$latex W = \int_{R_D + R_T}^{\infty} \frac{dr}{r^2} &amp;s=1&amp;bg=ffffff$

$latex W = -k Z_D Z_T e^2 \left[ \frac{1}{r} \right]_{R_D + R_T}^{\infty} &amp;s=1&amp;bg=ffffff$

The work done by the force is equal to the decrease in potential that occurs asa result of the action of the force:

$latex \Delta U = -W &amp;s=1&amp;bg=ffffff$

$latex \Delta U = k Z_D Z_T e^2 \left[ \frac{1}{r} \right]_{R_D + R_T}^{\infty} &amp;s=1&amp;bg=ffffff$

$latex \Delta U = -\frac{k Z_D Z_T e^2}{R_D + R_T} &amp;s=1&amp;bg=ffffff$

Hence if the potential at infinite separation is assumed to be zero, the energy required to bring the D-T nuclei to their point of closest approach is:

$latex E = \frac{e^2}{4\pi\varepsilon_0\left(R_D + R_T\right)} &amp;s=1&amp;bg=ffffff$

In general, the nuclear radius, R, can be approximated by:

$latex R = R_0 A^{1/3} &amp;s=1&amp;bg=ffffff$

so for D-T:

$latex E = \frac{e^2}{4\pi\varepsilon_0R_0\left(A_D^{1/3} + A_T^{1/3}\right)} &amp;s=1&amp;bg=ffffff$

which evaluates to about 355 keV.

At first glance, then, one might assume that a D-T gas would need to be raised to a temperature of 355 keV (4.1 x 10<sup>9</sup> K) - two orders of magnitude greater than the temperature in the core of the sun – to initiate fusion.

However, there are two flaws in this analysis which, when corrected, show that fusion occurs at significantly lower temperatures. These are:

<ol>
    <li>For any system of particles at a given temperature, the particle energies are not all equal to k<sub>B</sub>T, as assumed above, but instead have the Maxwell-Boltzmann (or Maxwellian) distribution. Therefore, even at temperatures significantly lower than the nuclear potential barrier, some particles in the tail of the distribution have high enough energies to overcome it.</li>
    <li>The above treatment is purely classical; in reality, barrier penetration, or quantum tunnelling, allows fusion to occur at energies lower than than the Coulomb barrier with finite probability.</li>
</ol>

<h3>The Maxwell-Boltzmann Distribution</h3>

The Maxwell-Boltzmann distribution function, <em>f</em>(<em>v</em>) is defined as follows. In a system of <em>N</em> particles of mass <em>m</em> at temperature <em>T</em>, the number of particles that have speeds between <em>v</em> and <em>v</em> + <em>dv</em> is <em>dN</em>, given by:

$latex dN = Nf(v)dv &amp;s=1&amp;bg=ffffff$

Therefore, <em>f</em>(<em>v</em>)<em>dv</em> gives the fraction of particles (<em>dN</em>/<em>N</em>) in the range <em>dv</em>. The Maxwell-Boltzmann distribution function can be derived using statistical mechanics; it is:

$latex f(v) = \frac{4}{\sqrt{\pi}} \left( \frac{m}{2k_BT} \right)^{3/2}v^2 \exp\left( -\frac{mv^2}{2k_BT}\right) &amp;s=1&amp;bg=ffffff$

Often, the Maxwell-Boltzmann distribution function is written in terms of the particle energy. This is:

$latex E = \frac{1}{2} mv^2 &amp;s=1&amp;bg=ffffff$

so that:

$latex dE = mv dv &amp;s=1&amp;bg=ffffff$

Now, if:

$latex dN = Nf(E)dE &amp;s=1&amp;bg=ffffff$

then:

$latex f(v)dv = \frac{4}{\sqrt{\pi}} \left( \frac{m}{2k_BT} \right)^{3/2}\sqrt{\frac{2E}{m}} \exp\left( -\frac{E}{k_BT}\right)\frac{dE}{m} &amp;s=1&amp;bg=ffffff$

Now, since:

$latex f(v)dv = f(E)dE &amp;s=1&amp;bg=ffffff$

Hence:

$latex f(E) = \frac{2}{\sqrt{\pi}} \left( \frac{1}{k_BT} \right)^{3/2}\sqrt{E} \exp\left( -\frac{E}{k_BT}\right) &amp;s=1&amp;bg=ffffff$

<h3>Quantum Tunnelling</h3>

Individual nuclei with energies lower than the nuclear potential barrier can undergo fusion due to the phenomenon of barrier penetration, or quantum tunnelling, which is an example of the wave nature of particles. Consider a tritium nucleus of energy <em>E</em> incident on a stationary deuterium target nucleus whose potential is <em>U</em>(<em>r</em>), where <em>r</em> is the radial distance from the nucleus centre. Outside the barrier, the wave function of the tritium nucleus is sinusoidal with amplitude <em>y</em>(<em>r</em>); however, upon interacting with the barrier, it does not reduce immediately to zero, but assumes an exponentially decreasing form until it emerges on the inside. At this point it must smoothly resume a sinusoidal form, albeit diminished in amplitude. Since the probability of a finding a particle in a volume element equals the square root of the wave function’s amplitude in that element, this means there is a finite probability of finding the particle inside the potential barrier.

The probability of transmission through the barrier, <em>T</em>, is:

$latex T = 1 - R &amp;s=1&amp;bg=ffffff$

where <em>R</em> is the probability of reflection. For the simple case of a square barrier with height <em>U</em><sub>0</sub> and width <em>a</em>, and α<em>a</em> &gt;&gt; 1, <em>T</em> is given by:

$latex T \propto e^{-2\alpha a} &amp;s=1&amp;bg=ffffff$

where:

$latex \alpha = \sqrt{\frac{2m\left(U_0 - E\right)}{\hbar^2}} &amp;s=1&amp;bg=ffffff$

Provided the energy of the interacting particles is well below the Coulomb barrier, the cross-section for fusion can be represented, to a good approximation, as a function of the relative particle energy, <em>W</em>, i.e. the total kinetic energy of the two nuclei in the centre-of-mass system:

$latex \sigma(W) \sim \frac{1}{W} \exp{\left(-\frac{2^{1/2}\pi M^{1/2} Z_D Z_T e^2}{\hbar W^{1/2}}\right)} &amp;s=1&amp;bg=ffffff$

where <em>M</em> is the reduced mass:

$latex M = \frac{m_Dm_T}{m_D + m_T} &amp;s=1&amp;bg=ffffff$]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>98</wp:post_id>
  <wp:post_date>2015-02-21 21:49:39</wp:post_date>
  <wp:post_date_gmt>2015-02-21 21:49:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Solutions to some problems in "A Short Course in Cloud Physics", by Rogers and Yau</title>
  <link>https://0x7df.wordpress.com/?p=131</link>
  <pubDate>Sat, 21 Feb 2015 22:09:19 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=131</guid>
  <description/>
  <content:encoded><![CDATA[<h2>CHAPTER 1 - Thermodynamics of Dry Air</h2>

The effective molecular weight, $latex M_{eff} &amp;s=1&amp;bg=ffffff$ of dry air is a weighted average of the molecular weights of the main permanent constituents:

$latex M_{\mathrm{eff}} = \sum_{n=1}^N f_n M_n &amp;s=1&amp;bg=ffffff$

where $latex f_n &amp;s=1&amp;bg=ffffff$ and $latex M_n &amp;s=1&amp;bg=ffffff$ are the fraction (by mass) and the molecular weight of the $latex n^{\mathrm{th}} &amp;s=1&amp;bg=ffffff$ constituent. Given the data in the table, the effective molecular weight of dry air is:

$latex M_{\mathrm{eff}} = (0.7557 \times 28.016) + (0.2315 \times 32.000) + (0.0128 \times 39.944) &amp;s=1&amp;bg=ffffff$

<h2>CHAPTER 3 - Parcel Buoyancy and Atmospheric Stability</h2>

<em>Two model atmospheres often used in theoretical work are the homogeneous atmosphere:</em>

$latex \rho(z) = \rho_0 &amp;s=1&amp;bg=ffffff$

<em>and the exponential atmosphere:</em>

$latex \rho(z) = \rho_0 e^{-z/H} &amp;s=1&amp;bg=ffffff$

<em>where</em> $latex \rho_0 &amp;s=1&amp;bg=ffffff$<em> is the density at the surface and H is called the scale height of the atmosphere. The top of the homogeneous atmosphere is defined as the altitude where the pressure falls to zero. Prove that the height of the top of the homogeneous atmosphere equals the scale height of the exponential atmosphere.</em>

For this problem we need only the equation of hydrostatic balance:

$latex \frac{\partial p}{\partial z} = -\rho(z) g &amp;s=1&amp;bg=ffffff$

First consider the homogeneous atmosphere; it is very simple to calculate the height at which the pressure falls to zero because, since the density is constant, the gradient of pressure with height is also constant:

$latex \frac{\partial p}{\partial z} = -\rho_0 g &amp;s=1&amp;bg=ffffff$

That is, the pressure falls off linearly:

$latex p(z) = \left( -\rho_0 g \right) z + p_0 &amp;s=1&amp;bg=ffffff$

where $latex p_0 &amp;s=1&amp;bg=ffffff$ is the pressure at the surface ($latex z = 0 &amp;s=1&amp;bg=ffffff$). From this equation we see that the pressure falls to zero when:

$latex z|_{p=0} = \frac{p_0}{\rho_0 g} &amp;s=1&amp;bg=ffffff$

Now consider the exponential atmosphere; we can determine <em>H</em> in the following way. First, we integrate the equation for hydrostatic balance from some height $latex z = z' &amp;s=1&amp;bg=ffffff$ up to $latex z = \infty &amp;s=1&amp;bg=ffffff$ to obtain the pressure at height <em>z</em>':

$latex \int_{z'}^{\infty} \frac{\partial p}{\partial z} dz = -\rho_0 g \int_{z'}^{\infty} e^{-z/H} dz &amp;s=1&amp;bg=ffffff$

If we assume that the pressure tends to infinity as height tends to infinity, and we set $latex z' = 0 &amp;s=1&amp;bg=ffffff$, then:

$latex p_0 = \rho_0 g H &amp;s=1&amp;bg=ffffff$

Consequently:

$latex H = \frac{p_0}{\rho_0 g} &amp;s=1&amp;bg=ffffff$

Hence, as long as $latex p_0 &amp;s=1&amp;bg=ffffff$ has the same value in both the homogeneous and exponential atmospheres, the height of the top of the homogeneous atmosphere is equal to the scale height of the exponential atmosphere.

<hr />

<em>Prove that the geopotential </em>$latex \mathrm{\psi} &amp;s=1&amp;bg=ffffff$<em> and the specific enthalpy, </em>h<em>, of an air sample undergoing a dry adiabatic process are related by:</em>

$latex h + \psi = \mathrm{const} &amp;s=1&amp;bg=ffffff$

From problem (1.5) we recall that specific enthalpy of a gas is defined by:

$latex h = u + p\alpha &amp;s=1&amp;bg=ffffff$

where <em>u</em> is the specific internal energy. The geopotential is defined as the potential energy of a unit mass at height <em>z</em> above mean sea level (or some other reference level). From this definition we have:

$latex d\psi = g dz &amp;s=1&amp;bg=ffffff$

That is, the change in gravitational potential energy (per unit mass) is equal to the force (per unit mass) times the change in height. If <em>h</em> + <em>ψ</em> is constant, then $latex dh = -d\psi &amp;s=1&amp;bg=ffffff$. That is:

$latex du + pd\alpha + \alpha dp = -g dz &amp;s=1&amp;bg=ffffff$

If the process is adiabatic, meaning there is no net energy flow into the air sample, then the change in internal energy <em>du</em> must be accounted for by the work done, <em>dw</em>:

$latex du = -dw &amp;s=1&amp;bg=ffffff$

That is, the work done by the sample in expanding its volume against the pressure of the surrounding medium must be accounted for by a drop in the sample's internal energy (altitude increase); or, the compressional work done on the sample by the atmosphere leads to an equivalent increase in the sample's internal energy (altitude decrease). Either way the work done is expressed by $latex dw = pd\alpha &amp;s=1&amp;bg=ffffff$, therefore:

$latex du = -pd\alpha &amp;s=1&amp;bg=ffffff$

This leads to cancellation of the first two terms in the equation relating <em>dh</em> and $latex d\psi &amp;s=1&amp;bg=ffffff$, such that:

\begin{equation} \alpha dp = -g dz \end{equation}

or:

\begin{equation} \frac{dp}{dz} = -g\rho \end{equation}

Since we know this result to be true (it is just the equation for hydrostatic balance), the initial premise must also be true.

<hr />

\textit{Show that the geopotential at pressure level $p$ of an atmosphere in hydrostatic equilibrium is given by:}

\begin{equation} \psi(p) = R'\bar T_\nu \mathrm{ln} (p_0/p) \end{equation}

\textit{where $\psi(p_0) = 0$.}

The geopotential, assuming gravity is constant with height, is:

\begin{equation} \psi(z) = \int_0^z g dz' = gz \end{equation}

An atmosphere in hydrostatic equilibrium is described by:

\begin{equation} \frac{\partial p}{\partial z} = -g\rho \end{equation}

Substituting the ideal gas equation of state gives:

\begin{equation} \frac{\partial p}{\partial z} = -\frac{gp}{R'T_\nu} \end{equation}

and integrating gives:

\begin{equation} \mathrm{ln} p = -\frac{g}{R' \bar T_\nu} z + \mathrm{ln} C \end{equation}

where $\mathrm{ln} C$ is the constant of integration, and we have replaced $T_\nu$ everywhere with its average value $\bar T_\nu$, to bring it out of the integral. Rearranging for $z$ and substituting into the equation for the geopotential gives:

\begin{equation} \psi(p) = R' \bar T_\nu\mathrm{ln} (C/p) \end{equation}

If $\psi(p_0) = 0$, then $\mathrm{ln} (C/p_0) = 0$ since neither $R'$ nor $\bar T_\nu$ is zero. Hence $C = p_0$, and:

\begin{equation} \psi(p) = R' \bar T_\nu\mathrm{ln} (p_0/p) \end{equation}

<hr />

The geopotential as a function of altitude is given by:

\begin{equation} \mathrm{gpm}(z) = \frac{\psi(z)}{g_0} = \frac{1}{g_0}\int_0^z g(z') dz' \end{equation}

The acceleration due to gravity is the gravitational force exerted by the earth on a unit mass:

\begin{equation} g(z) = \frac{F_g(z)}{m} = \frac{GM_e}{(R + z)^2} \end{equation}

Substituting this into the equation for gpm gives:

\begin{equation} \mathrm{gpm}(z) = \frac{GM_e}{g_0}\int_0^z \frac{1}{(R + z)^2} dz' \end{equation}

The reference value of $g$, $g_0$, is typically chosen to be the value at the earth's surface:

\begin{equation} g_0 = \frac{GM_e}{R^2} \end{equation}

hence:

\begin{equation} \mathrm{gpm}(z) = R^2\int_0^z \frac{1}{(R + z)^2} dz' \end{equation}

The integral of one over a quadratic is given by:

\begin{equation} \int \frac{1}{az'^2 + bz' + c} dz' = -\frac{2}{2az' + b} \end{equation}

where $4ac - b^2 = 0$, which is the case here. Hence the solution is:

\begin{eqnarray} \mathrm{gpm}(z) &amp;=&amp; R^2 \left[ \frac{1}{R} - \frac{1}{z' + R} \right] dz' &#092; &amp;=&amp; R + \frac{R^2}{z' + R} &#092; &amp;=&amp; \frac{Rz}{R + z} &#092; &amp;=&amp; z\left(\frac{1}{1 + z/R}\right) &#092; &amp;\approx&amp; z\left( 1 - \frac{z}{R} \right) \end{eqnarray}

where the last step is valid as long as $z/R &lt;&lt; 1$. Hence:

\begin{equation} \mathrm{gpm}(z) \approx z - az^2 \end{equation}

if $a = 1/R = 1/6.378137 \mathrm{km} = 0.156786 \mathrm{km}^{-1}$. The values of gpm at 1, 10 and 50 km are therefore 0.999843, 9.984321 and 49.608036 km respectively.

<hr />

To solve this problem we use our knowledge of the ambient and parcel lapse rates to determine the buoyant force on the parcel arising from the temperature difference at a particular height. The upward force due to the pressure gradient is the same on the parcel as on the displaced air: $-V(\partial p/\partial z)$ for parcel volume $V$. However the force due to gravity is $\rho Vg$ on the parcel, and $\rho'Vg$ on the ambient air; hence:

\begin{eqnarray} F_B &amp;=&amp; (-\rho Vg) - (-\rho'Vg) &#092; &amp;=&amp; Vg(\rho'-\rho) \end{eqnarray}

The resulting acceleration, which is the buoyant force per unit mass, is therefore:

\begin{equation} \frac{d^2z}{dt^2} = g\left(\frac{\rho'-\rho}{\rho}\right) \end{equation}

Using the equation of state for an ideal gas, we can re-write this in terms of temperature:

\begin{eqnarray} \frac{d^2z}{dt^2} &amp;=&amp; g\left(\frac{p/R'T'-p/R'T}{p/R'T}\right) &#092; &amp;=&amp; g\left(\frac{1/T'-1/T}{1/T}\right) &#092; &amp;=&amp; g\left(\frac{T}{T'}-1\right) &#092; &amp;=&amp; g\left(\frac{T-T'}{T'}\right) \end{eqnarray}

If we use the linear approximation for the dry adiabatic parcel lapse rate:

\begin{eqnarray} \frac{dT}{dz} &amp;=&amp; -\frac{g}{c_p}\frac{T}{T'} &#092; &amp;\approx&amp; -\frac{g}{c_p} \end{eqnarray}

then both the lapse rates are linear, and we can write:

\begin{eqnarray} T(z) &amp;=&amp; T(0) - \Gamma z &#092; T'(z) &amp;=&amp; T'(0) - \gamma z \end{eqnarray}

Substituting these into the equation of motion, and assuming the parcel is initially in equilibrium with its surroundings ($T'(0) = T(0)$) gives:

\begin{equation} \frac{d^2z}{dt^2} = g(\gamma-\Gamma)\frac{z}{T'} \end{equation}

This is a second-order ODE, but it is non-linear in that the coefficient of $z$ depends on $z$, through $T'$. We can however substitute $T(0)$ for $T'$ on the assumption that the reduction in $T'$ over the sorts of height variation that will be occur in a minute is small compared to $T(0)$ itself. This linearises the equation and yields a second-order ODE with constant coefficients, with only a small penalty in error. To solve we postulate a solution $z(t) = e^{\lambda t}$, then determine $\lambda$. By differentiating this twice we can write:

\begin{equation} \lambda^2 e^{\lambda t} = q e^{\lambda t} \end{equation}

Therefore $\lambda = \pm\sqrt{q}$ and $z(t) = e^{\sqrt{q}t}$ and $z(t) = e^{-\sqrt{q}t}$ are solutions of the differential equation (we could verify this by substitution back into the original equation). Since the solutions are linearly independent we can construct the general solution:

\begin{equation} z(t) = C_1 e^{\sqrt{q}t} + C_2 e^{-\sqrt{q}t} \end{equation}

From the boundary conditions:

\begin{eqnarray} z(0) &amp;=&amp; 0 &#092; \frac{dz}{dt} &amp;=&amp; 0.5 \mathrm{m/s} \end{eqnarray}

we have:

\begin{eqnarray} C_1 + C_2 &amp;=&amp; 0 &#092; C_1\sqrt{q} - C_2\sqrt{q} &amp;=&amp; 0.5 \mathrm{m/s} \end{eqnarray}

and:

\begin{equation} C_1 = \frac{0.25\mathrm{m/s}}{\sqrt{q}} \end{equation}

Therefore:

\begin{equation} z(t) = \frac{0.25\mathrm{m/s}}{\sqrt{q}} \left(e^{\sqrt{q}t} - e^{-\sqrt{q}t}\right) \end{equation}

Evaluating this for $t = 60$ s gives $z = 45$ m. Differentiating for speed, $w$, gives:

\begin{equation} w(t) = \frac{dz}{dt} = 0.25\mathrm{m/s} \left(e^{\sqrt{q}t} + e^{-\sqrt{q}t}\right) \end{equation}

For $t = 60$ s, $w = 1.28$ m/s.

<hr />

<em>When deflated, a hot-air balloon has a weight of 1100 N. The balloon has a volume of 1000 m$^3$ when inflated. Estimate the temperature to which the air in the balloon must be heated for it to float at a steady altitude of 2 km while carrying passengers with a combined weight of 1500 N. Assume a standard atmosphere, and assume that the pressure inside the balloon equals that of the ambient air.</em>

For the balloon to float at some steady altitude $z'$, the net vertical force must be zero at that altitude:

\begin{equation} \left(\frac{\partial^2z}{\partial t^2}\right)_{z'} = 0 \end{equation}

We can consider the air in balloon as a parcel of air, on which there is a downward force of $\rho gV$; the downward force on the displaced air is $\rho'gV$, so the net downward force is $-gV(\rho-\rho')$. The upward force due to the pressure gradient is the same on the parcel as on the displaced air, so the net upward force is zero. In addition, we have a downward force due to the weight of the balloon and gondola etc, $-mg$. Consequently, for steady floating at altitude $z'$, we have:

\begin{equation} -g(z)V(\rho(z)-\rho'(z)) - mg(z) = 0 \end{equation}

The $g$ cancels, and rearranging gives:

\begin{equation} \rho' - \rho = \frac{m}{V} \end{equation}

Substituting the equation of state and recognising that the pressure in the balloon $p$ is the same as the pressure outside, $p'$, gives:

\begin{equation} \frac{p}{R'T'} - \frac{p}{R'T} = \frac{m}{V} \end{equation}

Hence:

\begin{equation} T = \left( \frac{1}{T'} - \frac{mR'}{pV}\right)^{-1} \end{equation}

We know that $V$ = 1000 m$^3$ and $m$ = 2600 N/9.81 ms$^{-2}$, and for a standard atmosphere, $T'$ = 275.154 K, $p'$ = 79.501 x 10$^3$ Pa; consequently $T$ = 374 K.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>131</wp:post_id>
  <wp:post_date>2015-02-21 22:09:19</wp:post_date>
  <wp:post_date_gmt>2015-02-21 22:09:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Analytic solution</title>
  <link>https://0x7df.wordpress.com/?p=152</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=152</guid>
  <description/>
  <content:encoded><![CDATA[\documentclass{article}
\usepackage{times}
\usepackage{amssymb,amsmath}

\begin{document}

\title{}

\maketitle

\begin{abstract}

\end{abstract}

\clearpage

\section{}

\subsection{}

The neutrons passing through point $P$ on the surface of a sphere, and thus comprising the scalar flux there, can be divided into two types, depending on whether they have passed through sphere or not. The plane tangent to the sphere at $P$ divides the whole system into two infinite half-spaces, in which, in the absence of scattering, the two types of neutron originate: the neutrons emitted in the half-space that does not contain the sphere arrive at $P$ without having passed through the sphere, whereas the neutrons emitted in the half-space that does contain the sphere cannot reach $P$ without crossing some secant line of the sphere. Hence we divide the scalar flux, $\phi(P)$ into two contributions, $\phi_d(P)$ and $\phi_0(P)$, which have and have not passed through the sphere respectively.

Consider the simpler case of determining $\phi_0(P)$. These neutrons have direction $\hat\Omega$ such that $\hat\Omega\cdot\hat n \le 0$, where $\hat n$ is the outward directed normal unit vector at $P$. The angular flux $\psi(P,\Omega)$ is given by:

\begin{equation}
\psi(\mathbf{r},\Omega) = \int_0^\infty \frac{S(\mathbf{r}-\Omega x)}{4\pi} \mathrm{exp} \left[ -\int_0^x \Sigma(\mathbf{r}-\Omega x') dx' \right] dx
\label{IntTransEqn}
\end{equation}

If the source density and the cross-section is constant in this region, $S(\mathbf{r}) = S$ and $\Sigma(\mathbf{r}) = \Sigma_0$, this becomes simply:

\begin{equation}
\psi(\mathbf{r},\Omega) = \frac{S}{4\pi\Sigma}
\end{equation}

In the other half-space, equation (\ref{IntTransEqn}) becomes:

\begin{equation}
\psi(\mathbf{r},\Omega) = \frac{S}{4\pi} \int_{c(\hat\Omega)}^\infty \mathrm{exp} \left[ -\int_0^x \Sigma(\mathbf{r}-\Omega x') dx' \right] dx
\end{equation}

where $c(\hat\Omega)$ is the chord length represented by the path of the neutron across the sphere. This becomes:

\begin{equation}
\psi(\mathbf{r},\Omega) = \left&#123;
\begin{array}{l l}
\frac{S}{4\pi\Sigma_0} \mathrm{exp}\left[-\Sigma_d c(\hat\Omega)\right] &amp; c(\hat\Omega) &lt; x &#092;
\frac{S}{4\pi\Sigma_d} \mathrm{exp}\left[-\Sigma_d c(\hat\Omega)\right] &amp; c(\hat\Omega) \ge x &#092;
\end{array}
\right.
\end{equation}

\end{document}]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>152</wp:post_id>
  <wp:post_date>2015-02-22 10:41:35</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Hydrostatic balance in the atmosphere</title>
  <link>https://0x7df.wordpress.com/2015/05/02/hydrostatic-balance-in-the-atmosphere/</link>
  <pubDate>Sat, 02 May 2015 22:10:37 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=156</guid>
  <description/>
  <content:encoded><![CDATA[Atmospheric pressure at any altitude represents the total weight, per unit area, of the air column above that altitude. The pressure, therefore, decreases with altitude as there is less air above pressing down. To find the rate of decrease of pressure with height, consider a vertical column of air with unit cross-sectional area, having pressure $latex p &amp;s=1&amp;bg=ffffff$ at height $latex z &amp;s=1&amp;bg=ffffff$. At height $latex z + dz &amp;s=1&amp;bg=ffffff$ the pressure has decreased to some value $latex p-dp &amp;s=1&amp;bg=ffffff$, and the pressure difference $latex dp &amp;s=1&amp;bg=ffffff$ is equal to the weight of the slice of the vertical air column having thickness $latex dz &amp;s=1&amp;bg=ffffff$ (at height $latex z &amp;s=1&amp;bg=ffffff$). Assuming $latex dz &amp;s=1&amp;bg=ffffff$ is small enough that the air density, $latex \rho &amp;s=1&amp;bg=ffffff$, and the acceleration due to gravity, $latex g &amp;s=1&amp;bg=ffffff$, can both be considered constant within the slice:

$latex dp = -g \rho dz &amp;s=1&amp;bg=ffffff$

Here $latex g &amp;s=1&amp;bg=ffffff$ is the acceleration of gravity that transforms the areal mass element $latex \rho dz &amp;s=1&amp;bg=ffffff$ into an areal weight element $latex g\rho dz &amp;s=1&amp;bg=ffffff$.

This equation is called the <em>hydrostatic equation</em>. It is commonly written as:

$latex \frac{\partial p}{\partial z} = -g \rho &amp;s=1&amp;bg=ffffff$

This expresses that the upward vertical pressure-gradient force is balanced by the downward gravitational force, a situation usually referred to as <em>hydrostatic equilibrium</em>.

With increasing altitude, the density of air also decreases (e.g. from an average of 1.2 kg/m<sup>3</sup> at the surface to an average of 0.7 kg/m<sup>3</sup> at 5 km); hence the rate of change of pressure with height decreases with height. Air temperature also affects density (in a way described by the equation of state), and therefore the rate of pressure decrease with altitude.

Substituting in the equation of state allows us to integrate the hydrostatic equation to obtain an expression for $latex p(z) &amp;s=1&amp;bg=ffffff$. The equation of state for dry air is:

$latex p = \rho R T &amp;s=1&amp;bg=ffffff$

where $latex R = R^{*}/m &amp;s=1&amp;bg=ffffff$ is the individual gas constant for dry air, and $latex R^{*} &amp;s=1&amp;bg=ffffff$ and $latex m &amp;s=1&amp;bg=ffffff$ are the universal gas constant and the molecular weight of dry air, respectively. (The equation of state for moist air can be obtained by replacing $latex T &amp;s=1&amp;bg=ffffff$ with $latex T_v &amp;s=1&amp;bg=ffffff$, which is the <em>virtual temperature</em>. It can be shown that moist air is lighter than dry air of the same temperature and pressure, because the water vapour is lighter than the dry air it replaces; so that in cases where only the density of air is important, dry air of slightly higher temperature may be substituted for moist air. Virtual temperature is the fictitious temperature to which dry air must be raised to have the same density as the moist air in question, and of course it depends on the moisture content as well as the pressure.)

Making this substitution gives:

$latex \frac{\partial p}{\partial z} = -\frac{g}{RT}p &amp;s=1&amp;bg=ffffff$

and hence:

$latex \frac{dp}{p} = \frac{g}{RT}dz &amp;s=1&amp;bg=ffffff$

By integration:

$latex p = p_0 \exp \left( -\frac{g}{R} \int_{z_0}^z \frac{1}{T} dz' \right) &amp;s=1&amp;bg=ffffff$

(assuming $latex g &amp;s=1&amp;bg=ffffff$ is constant with height).

In the special case where the temperature is constant with height, the pressure profile is:

$latex p = p_0 \exp \left( -\frac{g(z-z_0)}{RT} \right) &amp;s=1&amp;bg=ffffff$

The temperature in the atmosphere varies by a factor of two, whereas the pressure varies by six orders of magnitude.

<h2>Model atmospheres</h2>

The following is question 3.5 from <a href="https://www.elsevier.com/books/a-short-course-in-cloud-physics/yau/978-0-7506-3215-7" target="_blank"><em>A Short Course in Cloud Physics</em>, by Rogers and Yau</a>.

<blockquote><em>Two model atmospheres often used in theoretical work are the homogeneous atmosphere:</em>

$latex \rho(z) = \rho_0 &amp;s=1&amp;bg=ffffff$

<em>and the exponential atmosphere:</em>

$latex \rho(z) = \rho_0 e^{-z/H} &amp;s=1&amp;bg=ffffff$

<em>where</em> $latex \rho_0 &amp;s=1&amp;bg=ffffff$<em> is the density at the surface and H is called the scale height of the atmosphere. The top of the homogeneous atmosphere is defined as the altitude where the pressure falls to zero. Prove that the height of the top of the homogeneous atmosphere equals the scale height of the exponential atmosphere.</em></blockquote>

For this problem we need the equation of <a href="en.wikipedia.org/wiki/Hydrostatic_equilibrium" target="_blank">hydrostatic balance</a>:

$latex \frac{\partial p}{\partial z} = -\rho(z) g &amp;s=1&amp;bg=ffffff$

which describes the equilibrium achieved in a fluid under gravity, where the upward<a href="en.wikipedia.org/wiki/Pressure-gradient_force" target="_blank"> pressure gradient force</a> balances the opposing force due to gravity.

First consider the <a href="http://glossary.ametsoc.org/wiki/Homogeneous_atmosphere" target="_blank">homogeneous atmosphere</a>; using this equation it is very simple to calculate the height at which the pressure falls to zero because, since the density is constant, the gradient of pressure with height is also constant:

$latex \frac{\partial p}{\partial z} = -\rho_0 g &amp;s=1&amp;bg=ffffff$

That is, the pressure falls off linearly:

$latex p(z) = \left( -\rho_0 g \right) z + p_0 &amp;s=1&amp;bg=ffffff$

where $latex p_0 &amp;s=1&amp;bg=ffffff$ is the pressure at the surface ($latex z = 0 &amp;s=1&amp;bg=ffffff$). From this equation we see that the pressure falls to zero when:

$latex z|_{p=0} = \frac{p_0}{\rho_0 g} &amp;s=1&amp;bg=ffffff$

Now consider the <a href="http://en.wikipedia.org/wiki/Barometric_formula" target="_blank">exponential atmosphere</a>; we can determine <em>H</em> in the following way. First, we integrate the equation for hydrostatic balance from some height $latex z = z' &amp;s=1&amp;bg=ffffff$ up to $latex z = \infty &amp;s=1&amp;bg=ffffff$ to obtain the pressure at height $latex z' &amp;s=1&amp;bg=ffffff$:

$latex \int_{z'}^{\infty} \frac{\partial p}{\partial z} dz = -\rho_0 g \int_{z'}^{\infty} e^{-z/H} dz &amp;s=1&amp;bg=ffffff$

If we assume that the pressure tends to zero as height tends to infinity, and we set $latex z' = 0 &amp;s=1&amp;bg=ffffff$, then:

$latex p_0 = \rho_0 g H &amp;s=1&amp;bg=ffffff$

Consequently:

$latex H = \frac{p_0}{\rho_0 g} &amp;s=1&amp;bg=ffffff$

Hence, as long as $latex p_0 &amp;s=1&amp;bg=ffffff$ has the same value in both the homogeneous and exponential atmospheres, the height of the top of the homogeneous atmosphere is equal to the scale height of the exponential atmosphere.

<div>
    <a href="https://plot.ly/~0x7df/11/" target="_blank" title="Pressure (mb) vs. height (m) for two model atmospheres" style="display:block;text-align:center;"><img src="https://plot.ly/~0x7df/11.png" alt="Pressure (mb) vs. height (m) for two model atmospheres" style="max-width:100%;width:1174px;" width="1174" /></a>
    <a href="https://plot.ly/embed.js">https://plot.ly/embed.js</a>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>156</wp:post_id>
  <wp:post_date>2015-05-02 22:10:37</wp:post_date>
  <wp:post_date_gmt>2015-05-02 22:10:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hydrostatic-balance-in-the-atmosphere</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="atmospheric-science"><![CDATA[atmospheric science]]></category>
  <category domain="post_tag" nicename="exponential-atmosphere"><![CDATA[exponential atmosphere]]></category>
  <category domain="post_tag" nicename="fluid-dynamics"><![CDATA[fluid dynamics]]></category>
  <category domain="post_tag" nicename="homogeneous-atmosphere"><![CDATA[homogeneous atmosphere]]></category>
  <category domain="post_tag" nicename="hydrostatic-balance"><![CDATA[hydrostatic balance]]></category>
  <category domain="post_tag" nicename="hydrostatic-equilibrium"><![CDATA[hydrostatic equilibrium]]></category>
  <category domain="post_tag" nicename="meteorology"><![CDATA[meteorology]]></category>
  <category domain="post_tag" nicename="physics"><![CDATA[physics]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_linkedin_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"IY9XUBVH58";s:4:"date";s:29:"Sun, 30 Aug 2015 13:39:53 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"3vcMyhtB/xOAd4vEaysAAA==";s:10:"set-cookie";s:153:"lidc="b=VB29:g=303:u=6:i=1440941993:t=1441028393:s=AQHKzoy828OCBSqm4jqYI9Dea5SSfQnU"; Expires=Mon, 31 Aug 2015 13:39:53 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1436364430976",
  "requestId": "IY9XUBVH58",
  "status": 401,
  "timestamp": 1440941993498
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:79:""b=VB29:g=303:u=6:i=1440941993:t=1441028393:s=AQHKzoy828OCBSqm4jqYI9Dea5SSfQnU"";s:7:"expires";i:1441028393;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/450210125130823_487453454739823]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[14248963802]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1374960056154041;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/r9pUuO6Iyd]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_linkedin_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"BO6QQEMOA0";s:4:"date";s:29:"Sat, 02 May 2015 22:10:50 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"k/nkvlmH2hPAEbzL0ioAAA==";s:10:"set-cookie";s:153:"lidc="b=VB29:g=230:u=6:i=1430604651:t=1430691051:s=AQHzhfI5BOF_7oLjJ7dRJp_E_EEytUGW"; Expires=Sun, 03 May 2015 22:10:51 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1429136421925",
  "requestId": "BO6QQEMOA0",
  "status": 401,
  "timestamp": 1430604651301
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:79:""b=VB29:g=230:u=6:i=1430604651:t=1430691051:s=AQHzhfI5BOF_7oLjJ7dRJp_E_EEytUGW"";s:7:"expires";i:1430691051;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/115824850944145124788/posts/FcxEV1SGHAP]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_10304825</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"IY9XUBVH58";s:4:"date";s:29:"Sun, 30 Aug 2015 13:39:53 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"3vcMyhtB/xOAd4vEaysAAA==";s:10:"set-cookie";s:153:"lidc="b=VB29:g=303:u=6:i=1440941993:t=1441028393:s=AQHKzoy828OCBSqm4jqYI9Dea5SSfQnU"; Expires=Mon, 31 Aug 2015 13:39:53 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1436364430976",
  "requestId": "IY9XUBVH58",
  "status": 401,
  "timestamp": 1440941993498
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:79:""b=VB29:g=303:u=6:i=1440941993:t=1441028393:s=AQHKzoy828OCBSqm4jqYI9Dea5SSfQnU"";s:7:"expires";i:1441028393;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_11235975</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_11298791</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_11298791</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>gpu_layout</title>
  <link>https://0x7df.wordpress.com/2015/04/05/cuda-basics-part-1/gpu_layout/#main</link>
  <pubDate>Sun, 22 Feb 2015 17:48:44 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/02/gpu_layout.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Memory hierarchy of a GPU]]></excerpt:encoded>
  <wp:post_id>167</wp:post_id>
  <wp:post_date>2015-02-22 17:48:44</wp:post_date>
  <wp:post_date_gmt>2015-02-22 17:48:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gpu_layout</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>9</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/02/gpu_layout.png</wp:attachment_url>
</item>
<item>
  <title>abstract-balls-blue-1346</title>
  <link>https://0x7df.wordpress.com/2015/03/13/combinations-and-permutations/abstract-balls-blue-1346/#main</link>
  <pubDate>Sun, 22 Feb 2015 22:00:58 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/02/abstract-balls-blue-1346.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>170</wp:post_id>
  <wp:post_date>2015-02-22 22:00:58</wp:post_date>
  <wp:post_date_gmt>2015-02-22 22:00:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>abstract-balls-blue-1346</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>13</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/02/abstract-balls-blue-1346.png</wp:attachment_url>
</item>
<item>
  <title>abstract-balls-blue-200</title>
  <link>https://0x7df.wordpress.com/2015/03/13/combinations-and-permutations/abstract-balls-blue-200/#main</link>
  <pubDate>Sun, 22 Feb 2015 22:13:13 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/02/abstract-balls-blue-200.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>172</wp:post_id>
  <wp:post_date>2015-02-22 22:13:13</wp:post_date>
  <wp:post_date_gmt>2015-02-22 22:13:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>abstract-balls-blue-200</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>13</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/02/abstract-balls-blue-200.png</wp:attachment_url>
</item>
<item>
  <title>CUDA basics part 2</title>
  <link>https://0x7df.wordpress.com/2015/04/21/cuda-basics-part-2/</link>
  <pubDate>Tue, 21 Apr 2015 20:58:46 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=199</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Introduction</h2>

Recently, I posted <a title="CUDA basics part 1" href="https://0x7df.wordpress.com/2015/04/05/cuda-basics-part-1/" target="_blank">a basic introduction to CUDA C for programming GPUs</a>, which showed how to do a vector addition. This illustrated some of the CUDA basic syntax, but it wasn't a complex- enough example to bring to light some of the trickier issues to do with designing algorithms carefully to minimise data movement. Here we move on to the more complicated algorithm for matrix multiplication, <em>C = AB</em>, where we'll see that elements of the matrices get used multiple times, so we'll want to put them in the shared memory to minimise the number of times they get retrieved from the much slower global (or device) memory. We'll also see that, because data that a thread puts into shared memory is only accessible by the other threads in the same thread block, we need to be careful how we do this.

<h2>Naive matrix multiplication in CUDA</h2>

First, let's ignore those concerns and put together the simplest implementation of matrix multiplication; then we'll analyse the memory access, and see how we can improve on it.

Before we begin, however, some-error checking. Below is a function-like C macro that will be used to surround each CUDA statement we execute with a check of the return code. The return code is set to the pre-defined variable <code>cudaSuccess</code> if the statement executed successfully, or an error value otherwise. (Hence, we declare the variable that will contain the CUDA statement return to be type <code>cudaError_t</code>.) Where an error value is returned, we pass this to the CUDA function <code>cudaGetErrorString</code>, which returns an error message that we can print.

[sourcecode language="C"]
#define cudaCheck(stmt)                                                \
    do                                                                 \
    {                                                                  \
        cudaError_t err = stmt;                                        \
        if (err != cudaSuccess)                                        \
        {                                                              \
            printf(&quot;ERROR: failed to run %s\n&quot;, stmt);                 \
            printf(&quot;ERROR: CUDA error %s\n&quot;, cudaGetErrorString(err)); \
            return -1;                                                 \
        }                                                              \
    } while (0)
[/sourcecode]

<h3>Simple matrix multiplication kernel</h3>

<h3><a href="https://0x7df.files.wordpress.com/2015/03/tiled_matrix_multiplication_1.png"><img class="alignright  wp-image-215" src="https://0x7df.files.wordpress.com/2015/03/tiled_matrix_multiplication_1.png?w=296" alt="tiled_matrix_multiplication_1" width="360" height="365" /></a></h3>

Now for the kernel function. The way we've chosen to divide this problem up amongst threads is to have each thread calculate a single element in the output vector, <em>C</em>. Mathematically, for an <em>m</em>-by-<em>n</em> matrix <em>A</em> and an <em>n</em>-by-<em>p</em> matrix <em>B</em>, this is:

$latex C_{i,j} = \sum_{k=1}^n A_{i,k}B_{k,j} &amp;s=1&amp;bg=ffffff$

for each of the <em>m</em>-by-<em>p</em> elements in <em>C</em>. This is illustrated in the figure, where the input matrices <em>A</em> and <em>B</em> are shown in grey, and the result, matrix <em>C</em>, in blue; a single element of <em>C</em> is highlighted in red, and the corresponding row and column of <em>A</em> and <em>B</em> are also highlighted.

We implement this in CUDA C as follows:

[sourcecode language="C"]
__global__ void matrixMultiply(float *A, float *B,
                              float *C, int numACols,
                              int numBRows, int numBCols,
                              int numCRows, int numCCols)
{
        
    // Get the row and column indices of the single
    // element of the output matrix that this thread
    // is dealing with
    int col = threadIdx.x + blockDim.x*blockIdx.x;
    int row = threadIdx.y + blockDim.y*blockIdx.y;
    
    // Calculate the output matrix element
    if ((row &lt; numCRows) &amp;&amp; (col &lt; numCCols))
    {
        float Ctmp = 0;
        for (int k = 0; k &lt; numACols; ++k)
        {
            Ctmp += A[row*numACols+k]*B[k*numBCols+col];
        }
        C[row*numCCols + col] = Ctmp;
    }
}
[/sourcecode]

This is reasonably simple. Each thread figures out which output matrix element it is responsible for, simply by checking the thread indices. It proceeds only if the element indices are within the correct bounds of the output matrix, which may not be the case if there are more threads than elements (because we have to have a whole number of thread blocks). Where they are, it retrieves the correct row of <em>A</em> and column of <em>B</em>, and calculates the corresponding single element of <em>C</em>.

<h3>Naive matrix multiplication host code</h3>

For completeness, here is the host code. The new things here that we didn't see in the vector multiplication example are:

<ol>
    <li>The use of the C macro <code>cudaCheck</code> (defined above) for error checking</li>
    <li>The fact that the grid and the thread blocks are two-dimensional</li>
    <li>The call to <code>cudaDeviceSynchronize()</code></li>
</ol>

[sourcecode language="C"]

int main(int argc, char **argv) {

    float *hostA, *hostB, *hostC;
    float *deviceA, *deviceB, *deviceC;
    int numARows, numACols;   // Rows, columns in the matrix A
    int numBRows, numBCols;   // Rows, columns in the matrix B
    int numCRows, numCCols;   // Rows, columns in the matrix C
    int sizeA, sizeB, sizeC;  // Size in memory of each of A, B and C
    int gridXSize, gridYSize; // Number of thread blocks in x, y dimensions of grid
    int blockSize;            // Number of threads in block
    
    // Allocate and populate the A and B matrices
    // hostA and hostB, and get numARows, numACols,
    // numBRows, numBCols
    
    // Set numCRows and numCCols
    numCRows = numARows;
    numCCols = numBCols;
    
    // Allocate the C matrix
    hostC = (float*)malloc(numCRows*numCCols*sizeof(float));
    
    // Allocate GPU memory
    sizeA = numARows*numACols*sizeof(float);
    sizeB = numBRows*numBCols*sizeof(float);
    sizeC = numCRows*numCCols*sizeof(float);
    cudaCheck(cudaMalloc((void **) &amp;deviceA, sizeA));
    cudaCheck(cudaMalloc((void **) &amp;deviceB, sizeB));
    cudaCheck(cudaMalloc((void **) &amp;deviceC, sizeC));

    // Copy data to the GPU
    cudaCheck(cudaMemcpy(deviceA, hostA, sizeA, cudaMemcpyHostToDevice));
    cudaCheck(cudaMemcpy(deviceB, hostB, sizeB, cudaMemcpyHostToDevice));
    
    // Initialize the grid and block dimensions
    blockSize = 16;
    gridXSize = (numCCols-1)/blockSize + 1;
    gridYSize = (numCRows-1)/blockSize + 1;
    dim3 dimGrid(gridXSize, gridYSize, 1);
    dim3 dimBlock(blockSize, blockSize, 1);
    
    // Launch the GPU Kernel
    matrixMultiply&lt;&lt;&lt;dimGrid,dimBlock&gt;&gt;&gt;(deviceA, deviceB,
                                         deviceC, numACols,
                                         numBRows, numBCols,
                                         numCRows, numCCols);
    cudaDeviceSynchronize();
    
    // Copy the GPU memory back to the CPU
    cudaCheck(cudaMemcpy(hostC, deviceC, sizeC, cudaMemcpyDeviceToHost));
    
    // Free the GPU memory
    cudaCheck(cudaFree(deviceA));
    cudaCheck(cudaFree(deviceB));
    cudaCheck(cudaFree(deviceC));
    
    // Do something with the solution, free the host memory, return
    
}
[/sourcecode]

The call to <code>cudaDeviceSynchronize()</code> ensures that all threads have finished before the host code proceeds any further.

<h3>Performance analysis of the naive implementation</h3>

Clearly, each of the <em>mp</em> elements of <em>C</em> requires a full row of <em>A</em> and a full column of <em>B</em> - both of length <em>n</em> - to be read from memory, and one value to be written back. Hence there are <em>(2n + 1)</em><em>m</em><em>p</em> memory accesses. Re-examining the kernel, we see that there are two floating point operations per iteration of the inner loop (one multiply and one add), and <em>n</em> iterations of that loop, which is completed for each of the <em>mp</em> elements in the product matrix. Hence, there are 2<em>nmp</em> FLOP, and the CGMA is 2<em>n</em>/(2<em>n</em> + 1); which is effectively 1, except when the matrices are very small. With a memory bandwidth of 150 GB/s, the algorithm is limited to just under 150/8 = 20 GFLOP/s (assuming double precision), which is still less than 2% of the available compute of our nominal 1 TFLOP GPU.

<h2>Improving on the naive implementation</h2>

However, it turns out that we can improve on this. So far, all the data storage has been in global memory, because that's the only permissible location for CUDA memory allocations in the host code, and that's where the data stays unless we explicitly move it, once inside the kernel function (we'll see how later). It's also clear that in this algorithm data gets re-used frequently. Every row of matrix <em>A</em> is used <em>p</em> times and every column of matrix <em>B</em> is used <em>m</em> times. If we contrive an algorithm that gets the necessary data into shared memory before it is needed, and keeps it there while it is being re-used, then we can clearly reduce the global memory accesses.

However, it's not as though we can read <em>A</em> and <em>B</em> into shared memory and have them accessible to all the threads working on the computation; shared memory isn't globally accessible, despite the name, but is instead local to a single streaming multiprocessor, and only 'shared' amongst the threads in whichever thread block is currently assigned to the SM. Hence our goal is to ensure that the threads in a given thread block have the subset of input data they need available in their SM's shared memory, under the general assumption that because of the small size of the shared memory, not all of the needed data will fit in at once.

<a href="https://0x7df.files.wordpress.com/2015/03/tiled_matrix_multiplication_2.png"><img class="alignright  wp-image-216" src="https://0x7df.files.wordpress.com/2015/03/tiled_matrix_multiplication_2.png?w=285" alt="tiled_matrix_multiplication_2" width="342" height="359" /></a>Consider a thread block covering an area of the product matrix <em>C</em>, which is <em>a</em> rows high by <em>a</em> columns wide, with the top-left element being <em>i</em>,<em>j</em> and the bottom-right therefore being <em>i+a,j+a</em>. This is shown in the figure. To compute these values, the rows <em>i, i+1, ..., i+a</em> of matrix <em>A</em> and columns <em>j</em><em>, j+1, ..., j+a</em> of matrix <em>B</em> are required, comprising horizontal and vertical strips, respectively, of dimension <em>a × n</em> elements. We assume in general these strips comprise too much data to move all together to shared memory. Instead, we move a block of elements from the strip of <em>A</em>, and a block of elements from the strip of <em>B</em> - i.e. two blocks of size <em>a</em> × <em>a</em>, one from each matrix; we will refer to these as <em>tiles</em>. Performing matrix multiplication on these two tiles creates a tile of partial sums in the <em>C</em> elements. When the next pair of tiles from <em>A</em> and <em>B</em> are retrieved, the partial sums are further incremented, until eventually the full strips have been processed and the final answers are available.

There is still some duplication of global memory accesses, because any given strip of <em>A</em> will be required by all the thread blocks of the <em>C</em> matrix that share the same row indices; and any given strip of <em>B</em> will be required by all the thread blocks of the <em>C</em> matrix that share the same column indices. However, we can see that there is at least <em>some</em> re-use of data in shared memory; each sub-row of the tile from <em>A</em> gets re-used <em>a</em> times (for the <em>a</em> elements of the output matrix that have the same row index), as does each sub-column of the tile from <em>B</em>. This data re-use reduces the retrievals from global memory by a factor of <em>a</em>.

Here is the kernel for tiled matrix multiplication.

[sourcecode language="C"]

__global__ void matrixMultiply(float *A, float *B, float *C,
                               int numARows, int numACols,
                               int numBRows, int numBCols,
                               int numCRows, int numCCols) {

    // Define device shared-memory storage for
    // tiles of the matrices
    // Scope: each tile is accessible by a single
    // block of threads
    __shared__ float tileA[TILE_WIDTH][TILE_WIDTH];
    __shared__ float tileB[TILE_WIDTH][TILE_WIDTH];

    // Define abbreviated variables for the
    // block and thread IDs
    // Scope: stored in registers and therefore
    // accessible by single threads
    int bx =  blockIdx.x;
    int by =  blockIdx.y;
    int tx =  threadIdx.x;
    int ty =  threadIdx.y;

    // Each thread is responsible for a single
    // element of the product matrix C.
    // Determine which element, from the block
    // and thread indices
    int row = by*TILE_WIDTH + ty;
    int col = bx*TILE_WIDTH + tx;

    // Initialise a temp variable for the solution
    // for this matrix element
    // Scope: in register, private to individual thread
    float Ctemp = 0;

    // Loop over the tiles in the A and B matrices
    // that will contribute to the calculation of
    // this element in the product matrix. We are
    // looping over columns of A for a given row
    // (equal to the row index of the C element),
    // and over rows of the B matrix for a given
    // column index (equal to the column index of
    // the C element)
    int numTiles = (numACols-1)/TILE_WIDTH + 1;

    for (int tl = 0; tl &lt; numTiles; ++tl) {

        // Load the tiles into shared memory, so all
        // threads in the block have access to the
        // whole tiles. Each thread needs to load only
        // a single value of each of the A and B tiles.
        if ((row &lt; numARows) &amp;&amp; (tl*TILE_WIDTH + tx &lt; numACols)) {
            tileA[ty][tx] = A[row*numACols + tl*TILE_WIDTH + tx];
        } else {
            tileA[ty][tx] = 0.;
        }
        if ((tl*TILE_WIDTH + ty &lt; numBRows) &amp;&amp; (col &lt; numBCols)) {
            tileB[ty][tx] = B[(tl*TILE_WIDTH + ty)*numBCols + col];
        } else {
            tileB[ty][tx] = 0.;
        }
        __syncthreads();
    
        // Loop over the elements within the A and B
        // tiles that contribute to this element of C
        for (int k = 0; k &lt; TILE_WIDTH; ++k) {
            Ctemp += tileA[ty][k] * tileB[k][tx];
        }
        __syncthreads();
    }

    // Write the final value into the output array
    if ((row &lt; numARows) &amp;&amp; (col &lt; numBCols)) {
        C[row*numBCols + col] = Ctemp;
    }
}
[/sourcecode]

In each thread block, the <em>a</em><sup>2</sup> threads load two float values each and perform 2<em>a</em> floating-point operations to compute the dot product of the row and column sub-sections (both of length <em>a</em>) required for the single output matrix element it holds. Hence there are 2<em>a</em> computations for two memory loads, which gives a CGMA ratio of <em>a</em>. For the naive implementation it was 1, so we have improved the CGMA by a factor of <em>a</em> by tiling the data.

There are a few other things to note in the kernel.

<ol>
    <li>The use of the <code>__shared__</code> identifier in the allocations statements for <code>tileA</code> and <code>tileB</code> (which are the temporary storage arrays for the tiles of <em>A</em> and <em>B</em>). This keyword is how we cause the storage to be allocated in shared memory (and therefore it can be used only in <code>__device__</code> functions, not <code>__host__</code> functions).</li>
    <li><code>TILE_WIDTH</code> is a C macro that we assume has been defined elsewhere.</li>
    <li>Calculation of the <em>C</em> element indices <code>row</code> and <code>col</code> is done using <code>TILE_WIDTH</code>, where previously <code>blockDim.x</code> and <code>blockDim.y</code> appeared. This works because we have <em>defined</em> the tile to be the same size as the thread block. In theory it could be different, but doing so gives us the very convenient consequence that each thread needs only to load a single element from each of <em>A</em> and <em>B</em> into shared memory to construct the tiles. This means the host code that calls the kernel needs to use <code>TILE_WIDTH</code> to define the block size:

[sourcecode language="C"]
gridXSize = (numCCols-1)/TILE_WIDTH + 1;
gridYSize = (numCRows-1)/TILE_WIDTH + 1;
dim3 DimGrid(gridXSize, gridYSize, 1);    // gridSize blocks in the grid
dim3 DimBlock(TILE_WIDTH, TILE_WIDTH, 1); // blockSize threads in each block
matrixMultiply&lt;&lt;&lt;DimGrid,DimBlock&gt;&gt;&gt;(deviceA, deviceB, deviceC, ...
[/sourcecode]

</li>
    <li>We have put some logic around the statements that transfer data to the shared-memory tile storage. Since we can't guarantee that there will be a whole number of thread blocks in the matrix, this prevents threads whose <code>row</code>, <code>col</code> indices are outside the bounds of either <em>A</em> or <em>B</em> from attempting to retrieve data that isn't there.</li>
    <li>The appearance of <code>__syncthreads()</code>. This is a barrier synchronization across all threads that ensures all threads complete any work up to this point before any proceed further. Without this, some threads could move on to begin computing matrix elements before other threads have loaded the correct data into shared memory, and out-of-date data could be used.</li>
</ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>199</wp:post_id>
  <wp:post_date>2015-04-21 20:58:46</wp:post_date>
  <wp:post_date_gmt>2015-04-21 20:58:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cuda-basics-part-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="c"><![CDATA[C]]></category>
  <category domain="post_tag" nicename="cuda"><![CDATA[CUDA]]></category>
  <category domain="post_tag" nicename="gpu"><![CDATA[GPU]]></category>
  <category domain="post_tag" nicename="hpc"><![CDATA[HPC]]></category>
  <category domain="post_tag" nicename="massively-parallel"><![CDATA[massively parallel]]></category>
  <category domain="post_tag" nicename="parallel-computing"><![CDATA[parallel computing]]></category>
  <category domain="post_tag" nicename="parallel-programming"><![CDATA[parallel programming]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[216]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/450210125130823_482389501912885]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1374960056154041;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/20shAfkHYB]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_linkedin_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"272H9O01VL";s:4:"date";s:29:"Tue, 21 Apr 2015 20:58:59 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"+scttQsj1xOwrHueCSsAAA==";s:10:"set-cookie";s:153:"lidc="b=VB29:g=220:u=6:i=1429649939:t=1429736339:s=AQG8QTVAFj9d5HztcILzcMZ5a-B91E0A"; Expires=Wed, 22 Apr 2015 20:58:59 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1429136421925",
  "requestId": "272H9O01VL",
  "status": 401,
  "timestamp": 1429649939999
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:79:""b=VB29:g=220:u=6:i=1429649939:t=1429736339:s=AQG8QTVAFj9d5HztcILzcMZ5a-B91E0A"";s:7:"expires";i:1429736339;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>tiled_matrix_multiplication_1</title>
  <link>https://0x7df.wordpress.com/2015/04/21/cuda-basics-part-2/tiled_matrix_multiplication_1/#main</link>
  <pubDate>Sun, 01 Mar 2015 20:49:27 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/03/tiled_matrix_multiplication_1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>215</wp:post_id>
  <wp:post_date>2015-03-01 20:49:27</wp:post_date>
  <wp:post_date_gmt>2015-03-01 20:49:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tiled_matrix_multiplication_1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>199</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/03/tiled_matrix_multiplication_1.png</wp:attachment_url>
</item>
<item>
  <title>tiled_matrix_multiplication_2</title>
  <link>https://0x7df.wordpress.com/2015/04/21/cuda-basics-part-2/tiled_matrix_multiplication_2/#main</link>
  <pubDate>Sun, 01 Mar 2015 20:49:31 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/03/tiled_matrix_multiplication_2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>216</wp:post_id>
  <wp:post_date>2015-03-01 20:49:31</wp:post_date>
  <wp:post_date_gmt>2015-03-01 20:49:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tiled_matrix_multiplication_2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>199</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/03/tiled_matrix_multiplication_2.png</wp:attachment_url>
</item>
<item>
  <title>Restarting the LHC</title>
  <link>https://0x7df.wordpress.com/2015/03/22/restarting-the-lhc/</link>
  <pubDate>Sun, 22 Mar 2015 18:13:34 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=222</guid>
  <description/>
  <content:encoded><![CDATA[[caption id="" align="alignleft" width="320"]<a href="https://www.flickr.com/photos/11304375@N07/2046228644/"><img id="Flickr-2046228644-1427038344888" title="'The Large Hadron Collider/ATLAS at CERN' by Image Editor, released on Flickr under the Creative Commons Attribution License (https://creativecommons.org/licenses/by/2.0/), found via Wylio" src="https://farm3.staticflickr.com/2326/2046228644_05507000b3_z.jpg" alt="The Large Hadron Collider/ATLAS at CERN from Flickr via Wylio" width="320" /></a> © 2007 <a title="'The Large Hadron Collider/ATLAS at CERN' published on Flickr by Image Editor" href="https://www.flickr.com/people/11304375@N07/">Image Editor</a>, <a title="from Flickr" href="https://www.flickr.com/photos/11304375@N07/2046228644/">Flickr</a> | <a style="font-size:.8em;" title="Creative Commons Attribution License  https://creativecommons.org/licenses/by/2.0/" href="https://creativecommons.org/licenses/by/2.0/">CC-BY</a> | <a title="Easily credit free 'large hadron collider' pictures with Wylio." href="https://www.wylio.com">via Wylio</a>[/caption]

As the <a href="http://home.web.cern.ch/topics/large-hadron-collider" target="_blank">Large Hadron Collider (LHC)</a> gears up, after a big upgrade, to start its second major run, this post is a reminder of the story so far.

<h2>What is it?</h2>

The Large Hadron Collider (LHC) is the largest <a href="http://en.wikipedia.org/wiki/Particle_accelerator" target="_blank">particle accelerator</a> in the world, costing over 6.3b Euros.

For <a href="http://www.particleadventure.org/hadrons.html" target="_blank">hadrons</a>, read <a href="http://education.jlab.org/glossary/proton.html" target="_blank">protons</a>. (Protons are one of a class of sub-atomic particles called hadrons; hence the name.) The basic idea is to accelerate the protons until they have very high energies, and then smack them into each other; the result of each collision is the creation of a number other particles, which can be studied. In particular, the purpose of it was to find and study one particular particle called the <a href="www.newscientist.com/topic/higgs-boson" target="_blank">Higgs boson</a>.

<h2>How are the particles accelerated?</h2>

To get to the necessary high energies, the protons need a long track; so they're steered around a 27 km-long underground ring, typically circulating many times before colliding. The acceleration, including the steering round the circular track, is done by thousands of powerful <a href="http://hyperphysics.phy-astr.gsu.edu/hbase/solids/scmag.html" target="_blank">superconducting magnets</a>.

<h2>How much energy?</h2>

The energy of the protons being collided is measured in TeV - tera-electron-volts (probably easier just to say teravolts - people will know what you mean from the context). During the first run of LHC, up to the end of 2012, the proton beams had an energy of 3.5 TeV.

Now, 1 TeV is 10<sup>12</sup> - or 1 trillion - electron-volts, where an <a href="http://physics.stackexchange.com/questions/23294/how-much-is-1-electron-volt-ev" target="_blank">electron-volt is defined as the amount of energy an electron would have if it were accelerated from rest through a potential difference of 1 V</a>. That turns out to be 1.6 × 10<sup>-19</sup> J, so 3.5 TeV is 5.6 × 10<sup>-7</sup> J. For context, a <a href="www.thefreedictionary.com/joule" target="_blank">Joule </a>is the energy it takes to lift 100 g (e.g. a small apple) through 1 m at the earth's surface; so, with an energy of 3.5 TeV each, it would take the combined energy of only 1.8 million of these protons to lift that apple...

After the upgrade, the proton energy will be 6.5 TeV.

The total collision energy is twice the beam energy, because two beams of equal energy are directed head-on at each other. So the first run had a collision energy of 7 TeV, and the post-upgrade second run will have a collision energy of 13 TeV. The design intent was always that the LHC would achieve 14 TeV, but because of technological problems (discussed later), <a href="home.web.cern.ch" target="_blank">CERN </a>have played it safe and kept the energy lower.

However, even the lower collision energy of 7 TeV was a big step up from what had been achieved before: the previous record, set by the 6.3 km <a href="http://www.fnal.gov/pub/tevatron/" target="_blank">Tevatron </a>proton-<a href="www.britannica.com/EBchecked/topic/28507/antiproton" target="_blank">antiproton</a> collider at <a href="www.fnal.gov" target="_blank">Fermilab </a>in Illinois, was 1.96 TeV. And, it turned out OK, because as we'll see (and as you already know unless you were living in a cave at the bottom of the sea in July 2012), the LHC fulfilled its main purpose of discovering the Higgs boson.

<h2>What are the limiting factors on collision energy?</h2>

The beam energy, and therefore the collision energy, is limited by the <a href="http://whatis.techtarget.com/definition/magnetic-field" target="_blank">magnetic field</a> that steers the beam, and the size of the ring.

The <a href="http://physics.info/lorentz/" target="_blank">magnetic force</a> provides the <a href="http://theory.uwinnipeg.ca/physics/circ/node6.html" target="_blank">centripetal acceleration</a>, so:

$latex q_pvB = \frac{\gamma m_p v^2}{r} &amp;s=1&amp;bg=ffffff$

where <em>q</em><sub>p</sub> and <em>m</em><sub>p</sub> are the charge and mass of the proton, respectively, <em>v</em> is its speed, <em>B</em> is the magnetic field strength, <em>r</em> is the radius of the circular motion, and <em>γ</em> is the <a href="http://simple.wikipedia.org/wiki/Lorentz_factor" target="_blank">relativistic factor</a> that we must include to account for the fact that the protons are moving at an appreciable fraction of the speed of light. The energy of a relativistic proton is <em>γm</em><sub>p</sub>, so:

$latex q_p B = \frac{E v}{r} &amp;s=1&amp;bg=ffffff$

Hence:

$latex E = \frac{q_p B r}{v} &amp;s=1&amp;bg=ffffff$

A larger ring would have a smaller radius of curvature, and so particles could be given higher energies and still be kept on track with a given field strength. For example, using the LHC-type 9 <a href="http://www.teslasociety.com/teslaunit.htm" target="_blank">Tesla</a> magnets in a 100 km-circumference collider, rather than a 27 km one, would allow an increase of the collision energy to 50 TeV. Clearly, the limitation on size is the cost.

Alternatively, for a fixed-size ring, further increasing the beam energy means having to increase the field strength. The limiting factor for the field strength is local heating in the superconducting coils, caused in turn by movement due to the high fields themselves. The heating causes the coils to cease to be superconducting; this is called <em>quenching</em>. The magnet starts to conduct normally, and releases a large part of its stored energy as heat, which in turn boils off the <a href="http://www.wired.com/2012/08/questions-and-answers-about-liquid-helium/" target="_blank">liquid helium</a> coolant and induces high pressures. (Note that, during preparations, quenching is done deliberately to increase the strength of the field that the magnets can support. The field is gradually increased until quenching occurs; when this process is repeated, the quenching occurs at a higher field strength. This is continued until the magnets can support a sufficiently high field for the beam energy required. The process is called <em>training</em>, and takes months.)

Furthermore, protons, like electrons and other charged particles, emit <a href="http://abyss.uoregon.edu/~js/glossary/synchrotron_radiation.html" target="_blank">synchrotron radiation</a> and thus lose energy when they travel in circular orbits such as in the LHC. The radiated power goes as the fourth power of <em>γ</em>, and since the energy of a relativistic proton is <em>γm</em><sub>p</sub>, the rate of energy loss is proportional to the fourth power of the beam energy. Clearly also, the loss is worse for electrons and positrons, because of their lower mass, than for protons.

<h2>Is the beam energy all that matters?</h2>

The other important aspect of a particle collider is the intensity of the beam, which dictates the rate of collisions. This is usually characterised by a quantity called the <em>luminosity.</em>

Working out the collision rate is fairly simply. It helps to know that the particles are actually grouped into <em>bunches</em>, rather than being a continuous stream. If we imagine one beam as a stationary target and the other beam as impacting on it (with twice the nominal collision energy), it makes it easier to work out the collision rate. The number of protons in the target bunch is <em>n<sub>T</sub></em>, and the cross-sectional area of each proton is <em>σ</em>, so the total area 'blocked out' by the target protons in <em>n<sub>T</sub>σ</em>. The actual cross-sectional area of the beam is <em>πr</em><sup>2</sup>; so the proportion of this that's blocked out by protons is <em>n<sub>T</sub>σ</em> / <em>πr</em><sup>2</sup> - the rest of the area is empty space. (This assumes that the protons in the bunch are spaced out enough that, if we were to look along the length of the 'target' beam, none of the protons further away from us would be hidden behind any others. Because the size of the protons is so astonishingly tiny relative to the cross-sectional area of the beam, this is a fair assumption).

Now, when the incident bunch of protons, <em>n<sub>I</sub></em>, impacts the target bunch, the fraction of them that collide with a proton in the target is equal to the fraction of the total area that's blocked out by target protons; which we've already determined to be <em>n<sub>T</sub>σ</em> / <em>πr</em><sup>2</sup>. Hence there are <em>n<sub>I</sub>n<sub>T</sub>σ</em> / <em>πr</em><sup>2</sup> collisions for every bunch crossing. If the rate of bunch crossings is <em>f</em>, then the overall collision rate is <em>fn<sub>I</sub>n<sub>T</sub>σ</em> / <em>πr</em><sup>2</sup>.

<a href="http://www.nature.com/ncomms/journal/v2/n9/full/ncomms1472.html" target="_blank">The cross-section for inelastic scatter is about 60 mb</a>, which is 6 × 10<sup>-30</sup> m<sup>2</sup>. The diameter of the beam at the point of collision is about 16 microns, so its cross-sectional area is 2 × 10<sup>-10</sup> m<sup>2</sup>. The ratio of these areas - and therefore the probability of a collision - is about 3 × 10<sup>-20</sup>. The value of <em>n</em> is about 10<sup>11</sup>, which suggests the number of collisions is 300 per bunch crossing. The bunches are crossed every 50 ns, so there are 2 × 10<sup>7</sup> crossings per second, and so 6 billion collisions per second. (Actually, the figures are about a factor of 15 too high - <a href="http://cds.cern.ch/record/1165534/files/CERN-Brochure-2009-003-Eng.pdf" target="_blank">CERN reports the number of collision per bunch to be about 20 for bunch size of 10</a><sup>11</sup>, suggesting the cross-section of 60 mb used should be more like 4 mb.)

It's conventional to take the proton cross-section, which is dependent on the proton energy but otherwise doesn't vary with the characteristics of the accelerator, out of this equation; what's left is referred to as the <em>luminosity</em>, <em>L</em>:

$latex L = \frac{f n_I n_T }{\pi r^2} &amp;s=1&amp;bg=ffffff $

which is expressed in collisions per unit area per unit time, i.e. it has units of [T]<sup>-1</sup> [L]<sup>-2</sup>.  With luminosity so defined, the collision rate is just the product of the accelerator's luminosity and the cross-section of the proton collision (at the particular proton energy in question).

The total number of collisions during some time period is the integral of the collision rate over the time period. Of course, this is equal to the integral of the luminosity over the time period, times the cross-section (assuming that the cross-section remains constant over time, because it only depends on the beam energy, so it can be brought out of this integration):

$latex N = \int_0^T R dt &amp;s=1&amp;bg=ffffff $

$latex N = \sigma \int_0^T L dt &amp;s=1&amp;bg=ffffff $

The integrated luminosity has units of inverse area, [L]<sup>-2</sup>.

The unit of area in typical use is the <a href="http://en.wikipedia.org/wiki/Barn_%28unit%29" target="_blank"><em>barn</em></a>, which is approximately the cross-sectional area of the <a href="http://education.jlab.org/itselemental/ele092.html" target="_blank">uranium </a>nucleus (1 b is 10<sup>-28</sup> m<sup>2</sup>). A <em>femtobarn</em> is 10<sup>-15</sup> b, so 1 fb = 10<sup>-43</sup> m<sup>2</sup>. Hence, the luminosity is measured in fb<sup>-1</sup> s<sup>-1</sup>, which, when multiplied by the collision cross-section in fb, gives a collision rate in s<sup>-1</sup>. The time-integrated luminosity is therefore typically expressed in <em>inverse femtobarns</em>. In fact, the total number of collisions is also usually quoted in inverse femtobarns (the true number of collisions would be this number times the cross-section of the proton-proton collision at whatever energy is being used). Given the actual cross-section of the proton-proton collision at 7 TeV collision energy, 1 fb<sup>-1</sup> corresponds to about 8 × 10<sup>12</sup> collisions.

<h2>What about the magnets?</h2>

There are several thousand superconducting magnets, cooled by helium to 1.9 K, of various types. For example, there are 392 quadrupole-type magnets, which focus the proton beams along the straight sections, and 1,232 dipole magnets.

<h2>So there were teething problems?</h2>

There were some early problems. On 27 March 2007 one of the quadrupole-type superconducting magnets failed a preliminary test. The magnet was deliberately being subjected to high pressures, similar to those that occur during quenching. The magnet that failed was built by Fermilab.

That was embarrassing, more for Fermilab than CERN, but things got worse after initial switch-on. Protons were first streamed in both directions around the tunnel on 10 September 2008, at 0.45 TeV beam energy. However, only eight or nine days later, an accident occurred in which the electrical connection between two of the 1,232 superconducting dipole magnets evaporated while carrying a current of 8.7 kA, as the beam energy was being increased to 5 TeV per beam. An electrical arc occurred that ruptured the cooling system, allowing six tonnes of liquid helium to boil off and leak into the tunnel. The pressure spike created a shock wave that damaged a few hundred metres of the tunnel. Repairs cost 40m Euros: 53 magnets had to be brought back to the surface, and either repaired or replaced.

On 23 November 2009, over a year later, the LHC returned to accelerating protons, initially at 0.45 TeV per beam again. On December 9 members of the <a href="http://iopscience.iop.org/1748-0221/3/08/S08003" target="_blank">ATLAS collaboration</a> spotted 2.36 TeV collisions during test circulations. By December 16, there had been 50,000 collisions at this energy. Overall this was four years later than originally expected.

In March 2010, CERN announced its plans to keep the collision energy to 7 TeV for the next 18-24 months, or until an inverse femtobarn of data had been collected.

It was realised that the copper stabilisers surrounding the superconducting cables, which bear electrical current in the event that the superconducting cables fail, had too high a resistance. There are 10,000 of these connections. The upgrade that has been going on over the past two years has involved, among other things, replacing these shunts. The upgrade cost 124m Euros. However, despite this, CERN is still going to run LHC at 13 TeV rather than the design energy of 14 TeV.

<h2>What are the experiments?</h2>

There are four interaction points around the ring. The two main experiments are the 7000-tonne ATLAS and the 12,500-tonne CMS (compact muon solenoid), which are general-purpose detectors involved in the search for the Higgs boson. A third, smaller experiment - <a href="http://www-pnp.physics.ox.ac.uk/~lhcb/index.shtml" target="_blank">LHCb</a> - is involved in detailed investigations into B-mesons. A fourth is <a href="http://www.uslhc.us/What_is_the_LHC/Experiments/ALICE" target="_blank">ALICE</a>, which is designed to study collisions between nuclei such as lead, which the LHC delivers in special runs.

<h2>What is it for?</h2>

The Higgs boson was the last missing piece of <a href="http://www.superstringtheory.com/experm/exper2.html" target="_blank">the Standard Model of particle physics</a>, which was conceived in the early 1970s and remains the best description of particle physics. The existence of the particle was predicted by <a href="http://www.ph.ed.ac.uk/higgs/peter-higgs" target="_blank">Peter Higgs</a> in 1964, and Higgs (along with<a href="http://www.ulb.ac.be/sciences/physth/people_FEnglert.html" target="_blank"> Francois Englert</a>) won the <a href="http://www.nobelprize.org/nobel_prizes/physics/laureates/2013/" target="_blank">Nobel Prize for physics in 2013</a>, after the particle was discovered at the LHC. The significance of the Higgs is usually said to be that it explains how some particles acquire mass.

The idea is that there's a uniform scalar field pervading the universe, and that interactions of particles with this field is what gives those particles their mass. The stronger a particle's interaction with the field is, the greater its mass. Photons have no interaction whatsoever, electrons have a weak interaction, etc. This field has come to be known as the <a href="http://simple.wikipedia.org/wiki/Higgs_field" target="_blank"><em>Higgs field</em></a>, and the phenomenon of particles acquiring mass through coupling with this field as the <em>Higgs mechanism</em>. An analogy often given for the mechanism is that it's like the particles are travelling through treacle or molasses; particles more strongly coupled to the field aren't able to travel as far, before they decay into lighter particles. But Higgs himself has complained that this isn't an appropriate metaphor, as the mechanism isn't dissipative.

This mechanism was independently proposed by Francois Englert and <a href="http://cerncourier.com/cws/article/cern/46542" target="_blank">Robert Brout</a> at the <a href="http://www.ulb.ac.be/ulb/presentation/uk.html" target="_blank">Free University of Brussels</a>, as well as Higgs, and also by <a href="http://www.nytimes.com/2014/05/04/us/gerald-guralnik-77-a-god-particle-pioneer-dies.html" target="_blank">Gerald Guralnik</a>, <a href="http://www.rochester.edu/news/hagen/" target="_blank">Carl Hagen</a> and <a href="http://www.imperial.ac.uk/people/t.kibble" target="_blank">Thomas Kibble</a> at <a href="www.imperial.ac.uk" target="_blank">Imperial College</a>. Higgs has always felt uncomfortable about his name being the one associated with the phenomenon; in fact, Brout and Englert published their paper two weeks before he did. However, Higgs was the one who proposed that the mechanism would have 'experimental consequences'; i.e. that, as a consequence of wave-particle duality, vibrations in the Higgs field ought to manifest as particles, in the same way that vibrations in the electromagnetic field manifest as <a href="www.universetoday.com/74027/what-are-photons" target="_blank">photons</a>.

The theory did not predict the mass, however, of the Higgs boson. Hence, the <a href="http://hepwww.rl.ac.uk/public/bigbang/file9.html" target="_blank">LEP</a> (the Large Electron Positron Collider, which previously occupied the tunnel the LHC is in now and which operated with a collision energy of 200 GeV for 11 years from 1989 to 2000, to provide data to study the <a href="http://images-of-elements.com/particle-zoo/w-boson.php" target="_blank">W</a> and <a href="http://images-of-elements.com/particle-zoo/z-boson.php" target="_blank">Z bosons</a>, as well as to search for the Higgs boson), the <a href="http://www.scientificamerican.com/article/the-supercollider-that-never-was/" target="_blank">Superconducting Super Collider</a> (which started to be built in Texas but was never completed due to cost over-runs), the Tevatron at Fermilab, and ultimately the LHC, were conceived of to verify the existence of the Higgs boson and measure its mass.

Prior to the LHC, theory suggested the mass of the Higgs was probably no more than 186 GeV, and the LEP's failure to find it demonstrated that the Higgs could not be less than 114 GeV. The Tevatron data at 1.96 TeV collision energy ruled out masses around 165 GeV, and suggested the 160-180 GeV range was unlikely. This left two regions - a lighter region of 114-160 GeV and a heavier region of 180-186 GeV - unexplored.

<h2>Finding the Higgs</h2>

On 30 March 2010, 18 months after start-up, the first collisions at 7 TeV collisions, were achieved, but at low luminosity. The original intention was to run for 18-24 months at 7 TeV. Serious data collection began in 2011; by summer 2011 the mass range of the Higgs had been narrowed down to 115-145 GeV, and by 13 December 2011 CERN was able to announce that the energy range had been restricted to 116-130 GeV, with 'an intriguing excess' at around 125 GeV.

Further measurements began in April 2012. At this point, the beam energy was increased from 3.5 TeV to 4 TeV. On 4 July 2012, the discovery of the Higgs boson, with a mass of around 125 GeV, was announced with 5$latex \sigma &amp;s=1&amp;bg=ffffff$ significance by both ATLAS and <a href="http://iopscience.iop.org/1748-0221/3/08/S08004/pdf/1748-0221_3_08_S08004.pdf" target="_blank">CMS</a>. This is the same mass as about 133 protons, or one caesium atom.

A further three months of run time was announced beyond the scheduled shut-down at the end of 2012. The first run ended in February 2013, after three years.

<h2>What is 'five sigma' significance?</h2>

The protons are collided in bunches, which causes pile-up - multiple collisions within each bunch crossing. Furthermore, protons aren't elementary particles like electrons, but are composite particles made of <a href="http://www.physics.ox.ac.uk/documents/PUS/dis/fundam.htm" target="_blank">quarks </a>held together by <a href="http://math.ucr.edu/home/baez/physics/ParticleAndNuclear/gluons.html" target="_blank">gluons</a>. Therefore, when they collide at these high energies, a lot of debris is created - <a href="www.feynman.com/" target="_blank">Feynman </a>likened it to 'smashing garbage cans into garbage cans'. This means there's a huge background of detected events that disguise the events actually being looked for; getting confidence about the signal in the light of this background requires a very large number of collisions to be integrated over a long period. This is why the luminosity is so significant; obviously the higher the luminosity, the higher the collision rate, and the less time it takes to accumulate the necessary data.

So, the determination of the existence of the Higgs was a statistical one, based on the agglomeration of a lot of data, rather than something that could be determined from analysing any one particular collision. There are many possible outcomes from a proton-proton collision at these energies, each one a different combination of outgoing particles. Each combination of outgoing particles is referred to as a <em>decay channel</em>, and the probability of each channel, and of the production of each possible particle, is predicted by the Standard Model and precisely known. Deviations from these known probabilities, indicating the presence of a new particle, need to be built up over a long period of time to establish confidence that it's not merely background. The number of particles actually detected in a given energy range over a given period of time is not fixed, but follows a <a href="http://mathworld.wolfram.com/PoissonDistribution.html" target="_blank">Poisson distribution</a> with a mean equal to the expected number based on the probability. There's therefore a finite likelihood of detecting more than the expected number even if there is no new particle in that energy range; this is just a statistical fluctuation. The excess has to be large to be attributed to the presence of a new particle; 5<em>σ</em> is the 'gold standard' (i.e. the excess has to be at least 5 times the standard deviation for it to be confidently attributed to a new particle). An excess of 3<em>σ</em> is usually referred to as only 'evidence for' it.

<h2>How much data is this?</h2>

Each collision/event that is recorded represents a few hundred MB of data. Because only a small fraction of the theoretically-possible decay channels involve a Higgs boson being produced, many can be disregarded; hence only a small fraction of events taking place need to be recorded, with the majority being deliberately discarded. The data is initially stored at the on-site tape silo facility known as Tier 0. Reconstructed data are delivered to regional centres around the world.

<h2>What's next?</h2>

The upgrade involved:

<ul>
    <li>Upgrading the 10,000 electrical interconnections between the dipole magnets (the component that failed in the accident that put the LHC out of commission for over a year)</li>
    <li>Improving the quench protection system, so that when quenching occurs the released energy is dissipated in a controlled way that minimises the chance of damage</li>
    <li>Replacing 18 of the 1,232 dipole magnets</li>
    <li>Upgrading the cryogenics</li>
    <li>Improving the vacuum in the beam pipe.</li>
</ul>

These modifications will allow the LHC to operate safely at the higher collision energy of 13 TeV.

The other operational change will be that the bunch size will be reduced from 1.7 × 10<sup>11</sup> protons per bunch down to 1.2 × 10<sup>11</sup>. This will reduce 'pile-up', which is the simultaneous occurrence of numerous collisions, which are hard to disentangle from each other when analysing the data. However, the bunches will be collided every 25 ns instead of every 50 ns, giving an overall increase in luminosity despite the reduced bunch size.

Now the two-year upgrade is complete, preparations are underway for the next major run. The SPS - a 7 km-long accelerator that feeds protons to the LHC - began being powered up in early July 2014.

The objectives of the next set of experiments are to further study the Higgs, but also to investigate dark matter. We've known for some time that observable matter and energy make up only 5% of the energy in the universe; the rest is invisible, hard to detect, and we don't know what it is. The remainder is comprised of <em>dark energy</em> (70%) and <em>dark matter</em> (25%) - we know it's there only through its gravitational pull. At the new high energies, LHC scientists hope to be able to detect particles that display the same properties

LHC is expected to operate into the 2030s.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>222</wp:post_id>
  <wp:post_date>2015-03-22 18:13:34</wp:post_date>
  <wp:post_date_gmt>2015-03-22 18:13:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>restarting-the-lhc</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="particle-physics"><![CDATA[particle physics]]></category>
  <category domain="post_tag" nicename="physics"><![CDATA[physics]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[259]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/450210125130823_468643919954110]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1374960056154041;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/ijYuUcN29d]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=403453629&stype=M&topic=5985473235167301632&type=U&a=qp5Y]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Synchrotrons</title>
  <link>https://0x7df.wordpress.com/?p=234</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=234</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Synchrotrons</h2>

A synchrotron is a hard X-ray source. Electrons travel at near-light speed around a large (e.g. 0.8 km-radius) underground storage ring. X-rays are focused down to sub-micron-diameter beams for use in a very wide range of experiments in X-ray imagine, spectroscopy and diffraction.

Diffraction-limited performance.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>234</wp:post_id>
  <wp:post_date>2015-03-15 18:37:27</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>lhc_atlas</title>
  <link>https://0x7df.wordpress.com/2015/03/22/restarting-the-lhc/lhc_atlas/#main</link>
  <pubDate>Sun, 22 Mar 2015 15:34:32 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/03/lhc_atlas.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>259</wp:post_id>
  <wp:post_date>2015-03-22 15:34:32</wp:post_date>
  <wp:post_date_gmt>2015-03-22 15:34:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lhc_atlas</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>222</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/03/lhc_atlas.jpg</wp:attachment_url>
</item>
<item>
  <title>Converting from Doxygen to WordPress</title>
  <link>https://0x7df.wordpress.com/2015/03/29/converting-from-doxygen-to-wordpress/</link>
  <pubDate>Sun, 29 Mar 2015 19:27:14 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=283</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Overview</h2>

I write code documentation in <a href="www.doxygen.org/" target="_blank">Doxygen</a>, and in some cases include a fair amount of information about the mathematical theory of the problem that the code is solving. It seemed worthwhile posting the same content on <a href="https://wordpress.com" target="_blank">Wordpress</a>. However, the syntax isn't 100% interchangeable, despite both applications supporting <a href="http://daringfireball.net/projects/markdown/" target="_blank">Markdown</a>. This is mainly because Doxygen extends Markdown by providing <a href="http://www.stack.nl/~dimitri/doxygen/manual/commands.html" target="_blank">a large range of special commands</a>, which begin with a <code>/</code> or a <code>@</code>.

The bulk of the changes that need to be made are to the equations. Doxygen and WordPress both allow  <a href="http://www.latex.org" target="_blank"><img class="latex" title="\LaTeX" src="https://s0.wp.com/latex.php?latex=%5CLaTeX&amp;bg=ffffff&amp;fg=000&amp;s=0" alt="\LaTeX" /></a> equations; Doxygen by actually calling <img class="latex" title="\LaTeX" src="https://s0.wp.com/latex.php?latex=%5CLaTeX&amp;bg=ffffff&amp;fg=000&amp;s=0" alt="\LaTeX" /> to generate <a href="en.wikipedia.org/wiki/Portable_Network_Graphics" target="_blank">PNG</a>-format images which it embeds in the <a href="www.w3schools.com/html/" target="_blank">HTML </a>files that it generates, and WordPress by using one of <a href="https://wordpress.org/plugins/search.php?q=latex" target="_blank">various plug-ins</a> (see documentation <a href="https://en.support.wordpress.com/latex/" target="_blank">here</a>). However, while the code for the actual equation is identical in both, being standard <a href="http://www.ams.org/publications/authors/tex/amsmath" target="_blank">amsmath</a>-style <a href="http://www.latex.org" target="_blank"><img class="latex" title="\LaTeX" src="https://s0.wp.com/latex.php?latex=%5CLaTeX&amp;bg=ffffff&amp;fg=000&amp;s=0" alt="\LaTeX" /></a>, the delimiters that identify it as maths and separate it from the body of the text are different. References also need to be handled differently.

[caption id="" align="alignright" width="404"]<img class="" src="http://imgs.xkcd.com/comics/automation.png" alt="xkcd: Automation" width="404" height="408" /> xkcd: Automation - http://imgs.xkcd.com/comics/automation.png[/caption]

Rather than do the conversion by hand, I knocked up a simple <a href="http://python.org" target="_blank">Python</a> script to do it (and in doing so risked falling into the trap of spending more time writing code to automate the task than I would have spent doing it manually) using simple <a href="www.regular-expressions.info/" target="_blank">regular expressions</a> in some cases. This post describes how the script works, so along the way we'll learn a bit of Python, something about regular expressions, and a bit about Doxygen and WordPress syntax.

Let's jump straight in. The script is called from the command line:

[code lang="bash"]

&gt; python dox2wp.py /path/to/doxygen/data/example.md

[/code]

The script is called <code>dox2wp.py</code>, and we've passed the full path to a Doxygen Markdown file called <code>example.md</code> as an argument to the Python script.

<h2>Main script</h2>

The first part of the script looks like this:

[code lang="python"]
if __name__ == &quot;__main__&quot;:

    args = sys.argv[1:]

    reffile = '/default/path/to/references.md'

    for arg in args:
        errmsg = processdox(arg,reffile)
        for msg in errmsg:
            print msg
[/code]

The first line - <code>if __name__ == "__main__":</code> - is a fairly standard Python construct that checks that the module being executed has been called from the command-line or interpreter directly, and not by some other Python module or function. <a href="http://stackoverflow.com/a/419185/3832350" target="_blank">This answer</a> on <a href="http://stackoverflow.com" target="_blank">StackOverflow </a>gives more details. The next line retrieves the arguments that were passed in to the Python script using the <code>sys</code> module's <code>argv</code> function  (this assumes <code>sys</code> has been imported using <code>import sys</code> somewhere prior to this statement; usually at the very top of the file). The <code>argv</code> function returns the arguments as a list; the zeroth element corresponds to the name of the script, so we ignore that and just get elements 1 through to the end of the list and store them in a new list called <code>args</code>. You can find documentation for the <code>sys</code> module <a href="https://docs.python.org/2/library/sys.html" target="_blank">here</a>.

Next we define a hard-wired path to a file, which we'll come back to later.

The next chunk of code is where the main business happens. We loop over all the items in <code>args</code>, each of which is assumed to be a Markdown file we want to process. For each, we call the function <code>processdox</code>, passing in both the path to the file, and the hard-wired path mentioned above. The <code>processdox</code> function returns a list of error messages, which we bind to the variable <code>errmsg</code>. The last action in this script is to loop over the error messages returned by the processing function, and print them to the screen.

<h2>Function `processdox`</h2>

The body of the <code>processdox</code> function is given below:

[code lang="python"]
def processdox(filename,reffile):

    errmsg = checkfile(filename)
    
    if len(errmsg) == 0:
        processfile(filename,reffile=reffile)
    
    return errmsg
[/code]

The first line is the function definition, which also specifies the arguments that function accepts: <code>filename</code> and <code>reffile</code>. Then, two functions are called: the first, <code>checkfile</code>, does some error-checking, and the second, <code>processfile</code>, does the main work - but only if the length of the list <code>errmsg</code> is zero (i.e. it contains no data, which is a way of checking that <code>checkfile</code> didn't return any error messages).

<h2>Error checking</h2>

Let's see the file-checking function <code>checkfile</code> next:

[code lang="python"]
def checkfile(filename):

    errmsg = []
    
    filebase, fileext = os.path.splitext(filename)
    
    if fileext != '.md':
        errmsg.append(filename+' is not Markdown')
	
    if not os.path.isfile(filename):
        errmsg.append(filename+' does not exist or is
                      not a file')
	
    return errmsg
[/code]

This first declares the <code>errmsg</code> variable as an empty list, and then uses the standard <code>os.path</code> module's <code>splitext</code> function, which returns the file's extension, and everything up to that extension (as a tuple), which we write into <code>fileext</code> and <code>filebase</code>. Doing this allows us to check easily that the file extension is <code>.md</code>. The next check is that the filename given refers to something that exists and is a file (e.g. as opposed to a directory), using the <code>isfile()</code> function. Documentation for <code>os.path</code> can be found <a href="https://docs.python.org/2/library/os.path.html#module-os.path" target="_blank">here</a>.

Notice that all we do on finding an error is to append an error message to the previously defined list, using <code>errmsg.append()</code>. The reason for this is that, although it scarcely matters for this almost trivial application, I find it good practice to let a piece of code go on for as long as it can after encountering errors, because there may be further errors that will get picked up subsequently. If it stopped immediately, the user would fix that error, and start it again, whereupon the next error encountered would cause it to bail out again. For software with complicated input this could go on for a long time and cause a lot of frustration. The behaviour here, however, is to keep going and identify as many errors as possible before stopping, so we minimise the number of iterations the user will have to go through to fix everything.

For example, if we call:

[code lang="bash"]
&gt; python dox2wp.py isnotmarkdown.txt doesnotexist.md \
&gt; existsbutisafolder.md realmarkdown.md
[/code]

then we get:

[code]
isnotmarkdown.txt is not Markdown
doesnotexist.md does not exist or is not a file
existsbutisafolder.md does not exist or is not a file
[/code]

Note there's no error message referring to <code>realmarkdown.md</code>, which meets the criteria and so is processed successfully.

It's important to understand that this isn't the same as being fault-tolerant or trying to recover from the errors. In principle, as soon as the user does something that doesn't seem to fit in with the way a piece of code is intended to work, we should stop and let the user know; trying to recover starts to get into the realm of making assumptions about what the user wants. All we're doing here is continuing to progress through the <em>error-checking</em> when an error is encountered; as soon as one is, the actual processing is prevented by the <code>if</code> statement around the call to <code>processfile</code>. We do allow the application to continue to the next Markdown file if an error was encountered previously, but since processing of each file is completely independent, this seems safe enough.

Of course, all this is total overkill for what we're trying to do, but is useful to illustrate the principles in a simple application.

<h2>The actual format conversion part</h2>

<h3>Preamble</h3>

Function <code>processfile</code> executes the real work. This is somewhat longer so we'll deal with it in sections. It starts with:

[code lang="python"]
def processfile(filename,reffile='references.md'):

    fi = open(filename,'r')
    fo = open(filename+'.txt','w')
    fr = open(reffile,'r')
[/code]

After the function definition, which like the previous one we saw defines the input arguments <code>filename</code> and <code>reffile</code> (but with the addition that the <code>reffile</code> variable defaults to <code>references.md</code> if no argument is passed in), the next three lines open some files. <code>filename</code> and <code>reffile</code> are opened as read-only (with some obvious error-checking around <code>reffile</code> clearly missing). A new file called <code>reffile + '.txt'</code> is opened as writeable, and this will contain the output; the filename will be the same as the input but with <code>.txt</code> appended, e.g. <code>example.md.txt</code> if the input was <code>example.md</code>.

The next stage is to define some regular expressions that will get used later; we define them here rather than nearer to where they get used because their use will be inside a loop, and there's no point re-defining them every time the loop is executed, because they're always the same.

[code lang="python"]
    p1 = re.compile('@f\$[^@]*@f\$')
    p2 = re.compile('@ref [^&quot;]* &quot;[^&quot;]*&quot;')
[/code]

We'll come back to these when they're needed.

The final part of the pre-amble involved setting up a counter and an empty list for the references, again which we'll come to when we need them.

[code lang="python"]
    refnum = 1
    footnotes = []
[/code]

In the next stage we enter the loop over individual lines in the input file, which Python implements very simply as <code>for line in fi:</code>, with <code>line</code> being the variable name into which each successive line is placed, and <code>fi</code> just being the pointer to the opened text file.

The first text-processing operation is to replace &lt; and &gt; with their HTML equivalents: <code>&amp;lt;</code> and <code>&amp;gt;</code>, respectively.

[code lang="python"]
    for line in fi:
        
	# Some of the later changes insert &quot;&lt;&quot; and &quot;&gt;&quot; so do
	# these as early as possible
	line = line.replace('&lt;','&amp;lt;')
	line = line.replace('&gt;','&amp;gt;')
[/code]

The reason for this is that, for this to work overall, the final output needs to be copied and pasted into WordPress's HTML editor, rather than the Visual editor. Consequently, there's a risk that any &lt; and &gt; symbols appearing in mathematical formulae will get interpreted as delimiters for an HTML tag. E.g. if:

$latex a &lt; b &amp;bg=ffffff$ and also $latex b &gt; c &amp;bg=ffffff$

appeared on a single line then the string:

$latex &lt; b &amp;bg=ffffff$ and also $latex b &gt; &amp;bg=ffffff$

would get interpreted as an HTML tag (and ignored as not recognised), leaving:

$latex a c $

I wasn't expecting this, at least not when the &lt; and &gt; symbols were safely inside the correct <code>$latex</code> and <code>$</code> delimiters identifying them as maths - but it happened, which seems like a flaw in the WordPress parsing.

<h3>Special commands</h3>

Subsequently, we remove some of the Doxygen special commands:

[code lang="python"]
	# Remove the table of contents special command    
	line = line.replace('\\tableofcontents','')
	
	# Replace the Doxygen special commands for sections
        # with Markdown
  	if '\section' in line:
	    fields = line.split()
	    line = '# ' + ' '.join(fields[2:])
 	if '\subsection' in line:
	    fields = line.split()
	    line = '## ' + ' '.join(fields[2:])
	if '\subsubsection' in line:
	    fields = line.split()
	    line = '### ' + ' '.join(fields[2:])
[/code]

The first special command is <code>\tableofcontents</code>, which appears on its own and causes Doxygen to automatically insert a contents table into the rendered page at that location. We strip this out by replacing it with an empty string, using the <code>replace</code> string method.

Next are <code>\section</code>, <code>\subsection</code> and <code>\subsubsection</code>. Each of these special commands is followed by two arguments: first an identifying tag, which can then be used elsewhere in the Doxygen pages to create a link to this section, followed by the actual title of the section, e.g.:

[code]
\subsection introdoxy Introduction to Doxygen
[/code]

We don't care about the ID tag, but we want to keep the title and retain it at the same location as the section title in the WordPress post. To do this we split the line into a list of tokens, separated by whitespace, using <code>line.split()</code>. The resulting list, in <code>fields</code>, would look like this for the example above if we printed it out:

[code lang="python"]
['\\subsection', 'introdoxy', 'Introduction', 'to', 'Doxygen']
[/code]

The idea is to discard the first two elements and keep the rest, joining them back together into a string, and stripping out the quotation marks.

[code]
            line = '## ' + ' '.join(fields[2:])
[/code]

Here the <code>string.join(list)</code> syntax in Python joins all the elements of <code>list</code> together into a single string, using <code>string</code> as the delimiter. Hence in our example, <code>' '.join(fields[2:])</code> would yield <code>Introduction to Doxygen</code>, and we prepend <code>##</code> to this string to turn it into standard Markdown format for a level 2 section header.

There's probably a more compact way to deal with the multiple cases (i.e. <code>\section</code>, <code>\subsection</code>, etc.) involving counting how many times the string <code>sub</code> appears and prepending the appropriate number of hashes accordingly; but for only three cases, writing them out explicitly isn't difficult, and leads to easier-to-understand code.

<h3>References</h3>

The next section of code deals with references. In Doxygen, we insert references into the main body of the text like this:

<pre>@ref ref01 "Fick (1855)"
</pre>

(or we could use <code>\ref</code> instead of <code>@ref</code>). Elsewhere, there would be a references section - in this case in a separate file called <code>references.md</code>, which is why we've previously seen that file being hard-wired in the main script and then passed in to this function as an argument. In the references section, there would be an entry like:

<pre>-# \anchor ref01 Fick, A, 1855. On liquid diffusion. The London, Edinburgh, and Dublin Philosophical Magazine and Journal of Science, X, 30-39.
</pre>

The initial <code>-#</code> is to create a numbered list, and the <code>\anchor ref01</code> creates an anchor that the earlier <code>@ref ref01</code> syntax can link to. The remainder is the text that appears in the references section.

What we want to do is replace the in-line reference with a link to a footnote, and use the long reference text as the footnote.

For an individual references, the code that does this looks like this:

[code lang="python"]
        # References
        
        refidstr = 'fn'+str(refnum)
        refnum += 1

        fields = istr.split()
        reftxt = &quot; &quot;.join(fields[2:]).strip('&quot;')

        ostr = '&lt;a href=&quot;#'+refidstr+'&quot;&gt;'+reftxt+'&lt;/a&gt;'
        line = line.replace(istr,ostr)

        doxref = fields[1]
        for refline in fr:
            if doxref in refline:
                reffull = ' '.join(refline.strip().split()[3:])
                break
        footnotes.append('&lt;a name=&quot;'+refidstr+'&quot;&gt;'+reffull+'&lt;/a&gt;')
[/code]

Although you don't see it here, the Doxygen text containing the in-line reference is contained in <code>istr</code> - we'll explain how it got there shortly. The first thing we do is create a unique string for the anchor that will be used as the ID for the footnote; i.e. if the anchor is <code>fn1</code>, then the inline reference will be:

[code lang="html"]
&lt;a href=&quot;fn1&quot;&gt;Fick (1855)&lt;/a&gt;
[/code]

and the footnote would be:

[code lang="html"]
&lt;a name=&quot;fn1&quot;&gt;Fick, A, 1855. On liquid diffusion...&lt;/a&gt;
[/code]

We have previously set up a counter for the references we discover, which was <code>refnum</code>, so the code <code>refidstr = 'fn'+str(refnum)</code> will create <code>fn1</code> for the first reference, <code>fn2</code> for the second, etc. You can see that <code>refnum</code> is incremented by 1 in the next line of the code fragment above to ensure this.

Next, we want to extract the text for the in-line reference ("Fick (1855)" in our example), for which we use the same kind of trick as we did for the section headings. The only difference here is that we have to add the <code>strip('"')</code> function to strip off the quotation marks.

At this point we have enough information to construct the new text for the in-line reference:

[code lang="python"]
        ostr = '&lt;a href=&quot;#'+refidstr+'&quot;&gt;'+reftxt+'&lt;/a&gt;'
[/code]

and replace the original string with the new one:

[code lang="python"]
        line = line.replace(istr,ostr)
[/code]

There's one final job; we have to create the footnote and put it at the bottom of the page. We'll store it in a list called <code>footnotes</code> in the interim, and then write the list out after all the other processing has been finished, so it appears in its proper place at the bottom of the page.

[code lang="python"]
        doxref = fields[1]
        for refline in fr:
            if doxref in refline:
                reffull = ' '.join(refline.strip().split()[3:])
                break
        footnotes.append('&lt;a name=&quot;'+refidstr+'&quot;&gt;'+reffull+'&lt;/a&gt;')
[/code]

So what is this doing? We know the text that Doxygen is using - <code>ref01</code> - in our example, because we can extract it from the second token of the <code>istr</code> line (where the first token is just the <code>@ref</code> code). Then we have to search line-by-line through the reference file, <code>fr</code>, until we find a line that contains the string we're after - this will cause <code>if doxref in refline</code> to return true. We know this is the right line, so we can extract the long text of the reference into <code>reffull</code> using the same <code>split</code> then <code>join</code> technique as we've seen before, starting at the fourth token (the first three being <code>-#</code>, <code>\anchor</code> and <code>ref01</code>, all of which we want to discard).

The real code, however, is a bit more complex; firstly because we need to find the appropriate text strings in our Doxygen code before we can format them (recall we haven't explained how <code>istr</code> gets defined yet), and also because there might be more than one reference on one line, so we have to deal with that. We do this via regular expressions, which first requires that the Python <code>re</code> module is imported (documented <a href="https://docs.python.org/2/library/re.html" target="_blank">here </a>). Once it is, we can compile a regular expression using the code we saw earlier but didn't explain:

[code lang="python"]
    p2 = re.compile('@ref [^&quot;]* &quot;[^&quot;]*&quot;')
[/code]

The regular expression is the bit inside the single quotes:

<pre>@ref [^"]* "[^"]*"
</pre>

and the <code>[</code>, <code>]</code>, <code>^</code> and <code>*</code> characters are special characters that have particular meanings in the regular expression language. The caret, <code>^</code>, is a <code>not</code> operator, so <code>^"</code> means not the quotation mark character. Using <code>[ ]</code> defines a set of characters that are allowed, so for example <code>[aeiou]</code> would match any vowel character. So <code>[^"]</code> means any character from the set of characters that are not the quotation mark <code>"</code>. Finally, the <code>*</code> character means match any number of whatever went previously. Hence, for example, <code>a*</code> would match <code>a</code>, <code>aa</code>, <code>aaa</code>, etc. Putting all this together, the regular expression <code>[^"]*</code>, which appears twice, means match any string of any length that doesn't contain a quotation mark. The reason we need to specify that the string shouldn't contain quotation marks is that these are used as delimiters, to surround the in-line text of the reference. If we could guarantee that quotation marks would never appear elsewhere on the same line, it wouldn't matter; but we can't.

Now we understand the regular expression syntax used, we need to understand the rest of the line. Compiling the regular expression creates a special regular expression object, which we've bound to <code>p2</code>, and which can be used later. We do this by writing:

[code lang="python"]
	for item in p2.finditer(line):
	    istr = item.group()
[/code]

This calls the <code>finditer</code> method of the <code>p2</code> regular expression object on the text string <code>line</code>, which returns an iterator of all the instances where the pattern represented by <code>p2</code> was matched. We need to do this because there could be more than one match in any given <code>line</code>. The second line returns the actual matched text string from <code>item</code>, using the <code>group</code> method, and puts it into <code>istr</code>. We now have the full thing:

[code lang="python"]
        # Loop over all matches against p2 in line
        for item in p2.finditer(line):
	    
            # Extract the matched text
            istr = item.group()

            # Create the unique reference (and increment the counter for next time)
            refidstr = 'fn'+str(refnum)
            refnum += 1

            # Get the in-line reference text
            fields = istr.split()
            reftxt = &quot; &quot;.join(fields[2:]).strip('&quot;')

            # Construct the WordPress-format inline reference and
            # replace the old Doxygen-format one
            ostr = '&lt;a href=&quot;#'+refidstr+'&quot;&gt;'+reftxt+'&lt;/a&gt;'
            line = line.replace(istr,ostr)

            # Get the full reference text to use as the footnote
            doxref = fields[1]
            fr.seek(0)
            for refline in fr:
                if doxref in refline:
                    reffull = ' '.join(refline.strip().split()[3:])
                    break
            footnotes.append('&lt;a name=&quot;'+refidstr+'&quot;&gt;'+reffull+'&lt;/a&gt;')
[/code]

The only additonal thing here that you haven't already seen is the <code>fr.seek(0)</code> line, which rewinds the references file to the beginning each time we do a search through it. It's common snafu in Python that once you've done a <code>for line in file:</code>-type of construct, you can't just do another one. The file pointer is left at the end, so the second time round nothing will happen (and it's not an error).

<h3>Maths</h3>

The final set of replacement operations we want to conduct is to replace any Doxygen-style maths delimiters with the appropriate WordPress ones. Doxygen allows several different kinds of delimiter. Firstly, in-line equations can be included by surrounding them with <code>\f$</code> tags; e.g.:

<code>...the equation \f$ E = mc^2 \f$ is well-known...</code>

Alternatively, we can create a numbered equation on its own line by using the opening delimiter <code>\f{equation}</code> and the closing delimiter <code>\f}</code>. For example:

[code]
\f{equation}
    F = ma
\f}
[/code]

Then finally, a non-numbered equation can be created on its own line by using:

[code]
\f[
    a^2 + b^2 = c^2
\f]
[/code]

In WordPress, there is only one way to embed mathematics, which is to use the opening delimiter <code>$latex</code> followed by the closing delimiter <code>$</code>. This is used whether we want the maths in-line or on its own line; there's no support for equation numbering.

Replacing the second two types is trivial, because the opening and closing delimiters are different, as they are for WordPress. Hence:

[code lang="python"]
	# Replace the maths delimiters
	line = line.replace('\\f{equation}','$latex')
	line = line.replace('\\f[','$latex')
	line = line.replace('\\f}','&amp;s=1&amp;bg=ffffff$')
	line = line.replace('\\f]','&amp;s=1&amp;bg=ffffff$')
[/code]

does the trick nicely. Note we add an extra <code>\</code> to protect the <code>\</code> that appears in the string we want to match. Without this, the <code>\f</code> would be interpreted as the form-feed escape sequence.

For the in-line equations it's slightly more complex, because the start and end delimiter in Doxygen are the same, but we need to replace them with different start and end delimiters for WordPress to understand. We go back to regular expressions:

[code lang="python"]
	# Replace the inline maths delimiters
	for item in p1.finditer(line):
	    istr = item.group()
	    ostr = '$latex'+istr.strip('@f$')+'&amp;s=1&amp;bg=ffffff$'
	    line = line.replace(istr,ostr)
[/code]

We saw <code>p1</code> defined earlier as:

[code lang="python"]
    p1 = re.compile('@f\$[^@]*@f\$')
[/code]

Here we are trying to match something that begins and ends with a literal <code>@f$</code>, which we have to write as <code>@f\$</code> because <code>$</code> is also a special character in the regular expression language, but we want it to be interpreted literally. In between we will allow any expression of any length as long as it doesn't contain a <code>@</code> symbol. This is represented by <code>[^@]*</code>. The rest should be self-explanatory.

<h2>Summary</h2>

So that's a lengthy explanation of a fairly short and simple script (it certainly took a lot longer to write...). It's also a fairly esoteric use case I should think, so will probably be of use to all of 3 other people if I'm lucky! The final, full script is reproduced below.

<hr />

[code lang="python"]
import sys
import os
import re


# -----------------------------------------------------------------------------


def checkfile(filename):

    errmsg = []
    
    filebase, fileext = os.path.splitext(filename)
    
    if fileext != '.md':
        errmsg.append(filename+' is not Markdown')
	
    if not os.path.isfile(filename):
        errmsg.append(filename+' does not exist or is not
                      a file')
	
    return errmsg
    
    
# -----------------------------------------------------------------------------


def processfile(filename,reffile='references.md'):

    fi = open(filename,'r')
    fo = open(filename+'.txt','w')
    fr = open(reffile,'r')
    
    p1 = re.compile('@f\$[^@]*@f\$')
    p2 = re.compile('@ref [^&quot;]* &quot;[^&quot;]*&quot;')
    
    refnum = 1
    footnotes = []
    
    for line in fi:
        
	# Some of the later changes insert &quot;&lt;&quot; and &quot;&gt;&quot; so do these
	# as early as possible
	line = line.replace('&lt;','&amp;lt;')
	line = line.replace('&gt;','&amp;gt;')
	
	# Remove the table of contents special command    
	line = line.replace('\\tableofcontents','')
	
	# Replace the Doxygen special commands for sections with
        # Markdown
	if '\section' in line:
	    fields = line.split()
	    line = '# ' + ' '.join(fields[2:])
	if '\subsection' in line:
	    fields = line.split()
	    line = '## ' + ' '.join(fields[2:])
	if '\subsubsection' in line:
	    fields = line.split()
	    line = '### ' + ' '.join(fields[2:])
	    
	# References
	# Doxygen format is '@ref doxref &quot;reference text&quot;'
	# Replace with an HTML link to a footnote '&lt;a href=&quot;fn1&quot;&gt;reference text&lt;/a&gt;'
	for item in p2.finditer(line):
	    istr = item.group()
	    refidstr = 'fn'+str(refnum)
	    fields = istr.split()
	    reftxt = &quot; &quot;.join(fields[2:]).strip('&quot;')
	    doxref = fields[1]
	    fr.seek(0)
	    for refline in fr:
	        if doxref in refline:
		    reffull = ' '.join(refline.strip().split()[3:])
		    break
	    ostr = '&lt;a href=&quot;#'+refidstr+'&quot;&gt;'+reftxt+'&lt;/a&gt;'
	    line = line.replace(istr,ostr)
	    footnotes.append('&lt;a name=&quot;'+refidstr+'&quot;&gt;'+reffull+'&lt;/a&gt;')
	    refnum += 1
	    
	# Replace the maths delimiters
	line = line.replace('\\f{equation}','$latex')
	line = line.replace('\\f[','$latex')
	line = line.replace('\\f}','&amp;s=1&amp;bg=ffffff$')
	line = line.replace('\\f]','&amp;s=1&amp;bg=ffffff$')
	
	# Replace the inline maths delimiters
	for item in p1.finditer(line):
	    istr = item.group()
	    ostr = '$latex'+istr.strip('@f$')+'&amp;s=1&amp;bg=ffffff$'
	    line = line.replace(istr,ostr)
	    
	fo.write(line+'\n')
    
    # Write out the footnotes generated by processing the references
    fo.write('&lt;hr&gt;\n')
    fo.write('&lt;ol&gt;\n')
    for fn in footnotes:
        fo.write('&lt;li&gt;'+fn+'\n')
    fo.write('&lt;/ol&gt;\n')
    
    fi.close()
    fo.close()
    fr.close()
    
    return
    
    
# -----------------------------------------------------------------------------


def processdox(filename,reffile):

    errmsg = checkfile(filename)
    
    if len(errmsg) == 0:
        processfile(filename,reffile=reffile)
    
    return errmsg
    
    
# -----------------------------------------------------------------------------


if __name__ == &quot;__main__&quot;:
    
    args = sys.argv[1:]
    
    reffile = '/default/path/to/references.md'
    
    for arg in args:
        errmsg = processdox(arg,reffile)
        for msg in errmsg:
	    print msg
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>283</wp:post_id>
  <wp:post_date>2015-03-29 19:27:14</wp:post_date>
  <wp:post_date_gmt>2015-03-29 19:27:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>converting-from-doxygen-to-wordpress</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="doxygen"><![CDATA[doxygen]]></category>
  <category domain="post_tag" nicename="latex"><![CDATA[latex]]></category>
  <category domain="post_tag" nicename="markdown"><![CDATA[markdown]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="regular-expressions"><![CDATA[regular expressions]]></category>
  <category domain="post_tag" nicename="text-processing"><![CDATA[text processing]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="wordpress"><![CDATA[wordpress]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://0x7df.wordpress.com/?p=298</link>
  <pubDate>Sun, 22 Mar 2015 22:12:09 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?p=298</guid>
  <description/>
  <content:encoded><![CDATA[<h1 id="basictheorypage">Basic Theory</h1>

<h2>Diffusion Equation</h2>

The diffusion equation is:

$latex
\frac{\partial u}{\partial t} = \nabla \cdot \left( D\left(\mathbf{r}, t\right) \nabla u\left(\mathbf{r}, t\right) \right) + Q\left(\mathbf{r}, t\right)
&amp;s=1&amp;bg=ffffff $

where:

<ul>
<li>$latex \mathbf{r}  &amp;s=1&amp;bg=ffffff $ is position</li>
<li>$latex t  &amp;s=1&amp;bg=ffffff $ is time</li>
<li>$latex u \left( \mathbf{r}, t \right)  &amp;s=1&amp;bg=ffffff $ is the unknown, i.e. diffusing quantity</li>
<li>$latex D \left( \mathbf{r}, t \right)  &amp;s=1&amp;bg=ffffff $ is the diffusion coefficient</li>
<li>$latex Q \left( \mathbf{r}, t \right)  &amp;s=1&amp;bg=ffffff $ is the source density</li>
</ul>

From hereon we will display the quantities $latex D  &amp;s=1&amp;bg=ffffff $, $latex t  &amp;s=1&amp;bg=ffffff $ and $latex u  &amp;s=1&amp;bg=ffffff $ without their arguments, for simplicity of notation.

To derive the diffusion equation we begin with Fick's law <a href="#fn1">(Fick, 1855)</a>:

$latex
\mathbf{F} = -D \nabla u
&amp;s=1&amp;bg=ffffff $

The vector field $latex \mathbf{F}  &amp;s=1&amp;bg=ffffff $ is the flux, which is the rate of transfer per unit area; the integral of the normal component of $latex \mathbf{F}  &amp;s=1&amp;bg=ffffff $ over a given surface is equal to the rate of flow through the surface. The direction of the flux vector is normal to the surface of constant concentration Fick's law says that for a given concentration $latex u  &amp;s=1&amp;bg=ffffff $ at a given point $latex \mathbf{r}  &amp;s=1&amp;bg=ffffff $, the flux is proportional to the concentration gradient there, and has the opposite direction.

$latex Q  &amp;s=1&amp;bg=ffffff $ is the source density: the concentration produced per unit time per unit volume.

The divergence of $latex \mathbf{F} &amp;s=1&amp;bg=ffffff $, i.e. $latex \nabla \cdot \mathbf{F}  &amp;s=1&amp;bg=ffffff $, is the rate of loss of concentration per unit time from the volume element.

Hence, by conservation:

$latex
\frac{\partial u}{\partial t} =
- \nabla \cdot \mathbf{F} + Q
&amp;s=1&amp;bg=ffffff $

Hence:

$latex
\frac{\partial u}{\partial t} =
\nabla \cdot D \nabla u + Q
&amp;s=1&amp;bg=ffffff $

As we saw above, this is the diffusion equation (sometimes known as Fick's second law).

The equation as written is linear, although it would be non-linear if we allowed the diffusion coefficient $latex D  &amp;s=1&amp;bg=ffffff $ to vary with the unknown $latex u  &amp;s=1&amp;bg=ffffff $, as well as with $latex x  &amp;s=1&amp;bg=ffffff $ and $latex t  &amp;s=1&amp;bg=ffffff $.

<h2>Special Cases</h2>

In the special case that $latex D  &amp;s=1&amp;bg=ffffff $ is constant, then this equation simplifies to:

$latex
\frac{\partial u}{\partial t} = D \nabla^2 u + Q
&amp;s=1&amp;bg=ffffff $

and in steady-state, $latex \frac{\partial u}{\partial t} = 0  &amp;s=1&amp;bg=ffffff $, and with constant source, it reduces to Poisson's equation:

$latex
\nabla^2 u = Q/D
&amp;s=1&amp;bg=ffffff $

and further to Laplace's equation if the source term is zero:

$latex
\nabla^2 u = 0
&amp;s=1&amp;bg=ffffff $

Returning now to the full equation, we recall that:

\f{eqnarray}
\nabla &amp;=&amp; \hat i \frac{\partial}{\partial x} + \hat j \frac{\partial}{\partial y} + \hat k \frac{\partial}{\partial z} &#092;
&amp;=&amp; \hat e_{\rho} \frac{\partial}{\partial \rho} + \hat e_{\phi} \frac{\partial}{\partial \phi} + \hat e_z \frac{\partial}{\partial z} &#092;
&amp;=&amp; \hat e_{r} \frac{\partial}{\partial r} + \hat e_{\theta} \frac{\partial}{\partial \theta} + \hat e_{\phi} \frac{\partial}{\partial \phi}
&amp;s=1&amp;bg=ffffff $

in Cartesian, cylindrical and spherical geometries, respectively.

Consider first spherical geometry:

$latex
\nabla \cdot D \nabla u = \\
\frac{1}{r^2}           \frac{\partial}{\partial r}      \left( r^2 D                    \frac{\partial u}{\partial r}      \right) +
\frac{1}{r \sin \theta} \frac{\partial}{\partial \theta} \left( \frac{D \sin \theta }{r} \frac{\partial u}{\partial \theta} \right) +
\frac{1}{r \sin \theta} \frac{\partial}{\partial \phi}   \left( \frac{D}{r \sin \theta}  \frac{\partial u}{\partial \phi}   \right)
&amp;s=1&amp;bg=ffffff $

In cylindrical geometry:

$latex
\nabla \cdot D \nabla u =
\frac{1}{\rho} \frac{\partial}{\partial \rho} \left( \rho D         \frac{\partial u}{\partial \rho} \right) +
\frac{1}{\rho} \frac{\partial}{\partial \phi} \left( \frac{D}{\rho} \frac{\partial u}{\partial \phi} \right) +
\frac{\partial}{\partial z}    \left( D              \frac{\partial u}{\partial z}    \right)
&amp;s=1&amp;bg=ffffff $

and in Cartesian geometry:

$latex
\nabla \cdot D \nabla u =
\frac{\partial}{\partial x}\left( D \frac{\partial u}{\partial x} \right) +
\frac{\partial}{\partial y}\left( D \frac{\partial u}{\partial y} \right) +
\frac{\partial}{\partial z}\left( D \frac{\partial u}{\partial z} \right)
&amp;s=1&amp;bg=ffffff $

In one dimension:

\f{eqnarray}
\frac{\partial u}{\partial t} &amp;=&amp; \frac{1}{r^2}  \frac{\partial}{\partial r}    \left( r^2  D \frac{\partial u}{\partial r}    \right) + Q &#092;
\frac{\partial u}{\partial t} &amp;=&amp; \frac{1}{\rho} \frac{\partial}{\partial \rho} \left( \rho D \frac{\partial u}{\partial \rho} \right) + Q &#092;
\frac{\partial u}{\partial t} &amp;=&amp;                \frac{\partial}{\partial x}    \left(      D \frac{\partial u}{\partial x}    \right) + Q
&amp;s=1&amp;bg=ffffff $

These equations can be generalised:

$latex
\frac{\partial u}{\partial t} = \frac{1}{x^p} \frac{\partial}{\partial x} \left(x^p D \frac{\partial u}{\partial x} \right) + Q
&amp;s=1&amp;bg=ffffff $

where:

<ul>
<li>$latex p = 0  &amp;s=1&amp;bg=ffffff $ for plane geometry</li>
<li>$latex p = 1  &amp;s=1&amp;bg=ffffff $ for 1D cylindrical geometry, and</li>
<li>$latex p = 2  &amp;s=1&amp;bg=ffffff $ for 1D spherical geometry.</li>
</ul>

<h2>Heat Flow Equation</h2>

The phenomena of heat conduction and diffusion are basically the same, and Fick <a href="#fn2">(Fick, 1855)</a> first put diffusion on a quantitative basis by adopting the mathematical equation of heat conduction derived by Fourier <a href="#fn3">(Fourier, 1822)</a>.

The heat flow equation of Fourier is:

$latex
a \frac{\partial \theta}{\partial t} = \frac{\partial}{\partial x} K \frac{\partial \theta}{\partial x}
&amp;s=1&amp;bg=ffffff $

where $latex a  &amp;s=1&amp;bg=ffffff $ is the heat capacity of the material per unit volume and $latexK &amp;s=1&amp;bg=ffffff $ is the thermal conductivity. For constant conductivity this becomes:

$latex
\frac{\partial \theta}{\partial t} = \frac{K}{a} \frac{\partial^2 \theta}{\partial x^2}
&amp;s=1&amp;bg=ffffff $

where the corresponding equation for diffusion is:

$latex
\frac{\partial u}{\partial t} = D \frac{\partial^2 u}{\partial x^2}
&amp;s=1&amp;bg=ffffff $

For the two equations to correspond, we equate temperature $latex \theta  &amp;s=1&amp;bg=ffffff $ with concentration $latex u  &amp;s=1&amp;bg=ffffff $, which clearly implies that $latex D = K/a  &amp;s=1&amp;bg=ffffff $. However, it is also the case that:

$latex
\mathbf{F} = -K \nabla \theta
&amp;s=1&amp;bg=ffffff $

which, when compared with Fick's law for diffusion, implies that $latex D = K  &amp;s=1&amp;bg=ffffff $, and therefore that in diffusion, unlike in heat conduction, $latex a = 1  &amp;s=1&amp;bg=ffffff $. This is because we have identified $latex C  &amp;s=1&amp;bg=ffffff $ with $latex \theta  &amp;s=1&amp;bg=ffffff $, whereas in heat conduction, the diffusing 'substance' is actually heat, not temperature. The factor $latex a  &amp;s=1&amp;bg=ffffff $ is needed to convert temperature to the amount of heat per unit volume, whereas in diffusion, the concentration is already by definition the amount of substance per unit volume, so $latex a = 1  &amp;s=1&amp;bg=ffffff $.

<hr>

<ol>
<li><a name="fn1">Fick, A, 1855. On liquid diffusion. The London, Edinburgh, and Dublin Philosophical Magazine and Journal of Science, X, 30-39.</a>
<li><a name="fn2">Fick, A, 1855. On liquid diffusion. The London, Edinburgh, and Dublin Philosophical Magazine and Journal of Science, X, 30-39.</a>
<li><a name="fn3">Fourier, M, 1822.</a>
</ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>298</wp:post_id>
  <wp:post_date>2015-03-22 22:12:09</wp:post_date>
  <wp:post_date_gmt>2015-03-22 22:12:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>0x7df application</title>
  <link>https://0x7df.wordpress.com/0x7df-application/</link>
  <pubDate>Mon, 23 Mar 2015 22:08:37 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.wordpress.com/?page_id=319</guid>
  <description/>
  <content:encoded><![CDATA[A test application.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>319</wp:post_id>
  <wp:post_date>2015-03-23 22:08:37</wp:post_date>
  <wp:post_date_gmt>2015-03-23 22:08:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>0x7df-application</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://0x7df.wordpress.com/2015/03/25/321/</link>
  <pubDate>Wed, 25 Mar 2015 20:52:41 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=321</guid>
  <description/>
  <content:encoded><![CDATA[<code>
import sys
import os
import re

<h1>-----------------------------------------------------------------------------</h1>

def checkfile(filename):

<pre><code>errmsg = []

filebase, fileext = os.path.splitext(filename)

if fileext != '.md':
    errmsg.append(filename+' is not Markdown')

if not os.path.isfile(filename):
    errmsg.append(filename+' does not exist or is not a file')

return errmsg
</code></pre>

<h1>-----------------------------------------------------------------------------</h1>

def processfile(filename,reffile='references.md'):

<pre><code>fi = open(filename,'r')
fo = open(filename+'.txt','w')
fr = open(reffile,'r')

p1 = re.compile('@f$[^@]*@f$')
p2 = re.compile('@ref [^"]* "[^"]*"')

refnum = 1
footnotes = []

for line in fi:

# Some of the later changes insert "" so do these as early as
# possible
line = line.replace('','&amp;gt;')

# Remove the table of contents special command    
line = line.replace('\tableofcontents','')

# Replace the Doxygen special commands for sections with Markdown
if 'section' in line:
    fields = line.split()
    line = '# ' + ' '.join(fields[2:])
if 'subsection' in line:
    fields = line.split()
    line = '## ' + ' '.join(fields[2:])
if 'subsubsection' in line:
    fields = line.split()
    line = '### ' + ' '.join(fields[2:])

# References
# Doxygen format is '@ref doxref "reference text"'
# Replace with an HTML link to a footnote '&lt;a href="fn1"&gt;reference text&lt;/a&gt;'
for item in p2.finditer(line):
    istr = item.group()
    refidstr = 'fn'+str(refnum)
    fields = istr.split()
    reftxt = " ".join(fields[2:]).strip('"')
    doxref = fields[1]
    fr.seek(0)
    for refline in fr:
        if doxref in refline:
        reffull = ' '.join(refline.strip().split()[3:])
        break
    ostr = '&lt;a href="#'+refidstr+'"&gt;'+reftxt+'&lt;/a&gt;'
    line = line.replace(istr,ostr)
    footnotes.append('&lt;a name="'+refidstr+'"&gt;'+reffull+'&lt;/a&gt;')
    refnum += 1

# Replace the maths delimiters
line = line.replace('\f{equation}','$latex')
line = line.replace('\f[','$latex')
line = line.replace('\f}','&amp;amp;s=1&amp;amp;bg=ffffff$')
line = line.replace('\f]','&amp;amp;s=1&amp;amp;bg=ffffff$')

# Replace the inline maths delimiters
for item in p1.finditer(line):
    istr = item.group()
    ostr = '$latex'+istr.strip('@f$')+'&amp;amp;s=1&amp;amp;bg=ffffff$'
    line = line.replace(istr,ostr)

fo.write(line+'n')

# Write out the footnotes generated by processing the references
fo.write('&lt;hr&gt;n')
fo.write('&lt;ol&gt;n')
for fn in footnotes:
    fo.write('&lt;li&gt;'+fn+'n')
fo.write('&lt;/ol&gt;n')

fi.close()
fo.close()
fr.close()

return
</code></pre>

<h1>-----------------------------------------------------------------------------</h1>

def processdox(filename,reffile):

<pre><code>errmsg = checkfile(filename)

if len(errmsg) == 0:
    processfile(filename,reffile=reffile)

return errmsg
</code></pre>

<h1>-----------------------------------------------------------------------------</h1>

if <strong>name</strong> == "<strong>main</strong>":

<pre><code>args = sys.argv

reffile = '/home/albion/harvey/harvey/src/Doc/markdown/references.md'

for arg in args[1:]:
    errmsg = processdox(arg,reffile)
    for msg in errmsg:
    print msg
</code></pre>

</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>321</wp:post_id>
  <wp:post_date>2015-03-25 20:52:41</wp:post_date>
  <wp:post_date_gmt>2015-03-25 20:52:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>321</wp:post_name>
  <wp:status>trash</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d560bd5a23da1d199f8dfb1587dcecb1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python code analysis using Prospector</title>
  <link>https://0x7df.wordpress.com/2015/04/11/python-code-analysis-using-prospector/</link>
  <pubDate>Sat, 11 Apr 2015 23:32:19 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=441</guid>
  <description/>
  <content:encoded><![CDATA[A <a href="https://blog.landscape.io/prospector-python-static-analysis-for-humans.html" target="_blank">recent blog post</a> I came across introduced me to <a href="https://github.com/landscapeio/prospector" target="_blank">Prospector</a>, a <a href="https://www.python.org/" target="_blank">Python </a><a href="http://en.wikipedia.org/wiki/Static_program_analysis" target="_blank">static analysis</a> tool developed by <a href="https://landscape.io/" target="_blank">Landscape</a>. From the <a href="https://prospector.readthedocs.org" target="_blank">documentation</a>:

<blockquote>Prospector is a tool to analyse Python code and output information about errors, potential problems, convention violations and complexity.

It brings together the functionality of other Python analysis tools such as <a class="reference external" href="http://docs.pylint.org/">Pylint</a>, <a class="reference external" href="http://pep8.readthedocs.org/en/latest/">pep8</a>, and <a class="reference external" href="https://pypi.python.org/pypi/mccabe">McCabe complexity</a>.

The primary aim of Prospector is to be useful ‘out of the box’. A common complaint of other Python analysis tools is that it takes a long time to filter through which errors are relevant or interesting to your own coding style. Prospector provides some default profiles, which hopefully will provide a good starting point and will be useful straight away, and adapts the output depending on the libraries your project uses.</blockquote>

So rather than configuring and individually using the various different static analysis packages mentioned, and wading through the potentially overwhelming output, Prospector provides a single interface to all of them, and is set up to give a more manageable level of information straight-away, without much user intervention. I won't repeat the sales pitch and the basic how-to that <a href="https://blog.landscape.io/prospector-python-static-analysis-for-humans.html" target="_blank">that post</a> contains, but will go on from there to give a bit more information.

<hr />

<h2>Cyclomatic complexity</h2>

The first thing you might come across that might not be self-evident is the complexity rating given by the <a href="https://github.com/flintwork/mccabe" target="_blank"><code>mccabe</code></a> package. E.g.:

[code lang="bash"]

&gt; prospector --strictness low 
Messages
========

main.py
  Line: 13
    mccabe: MC0001 / run is too complex (17)



Check Information
=================
        Started: 2015-04-11 15:59:47.759944
       Finished: 2015-04-11 15:59:51.598176
     Time Taken: 3.84 seconds
      Formatter: grouped
       Profiles: default, strictness_low, strictness_medium, strictness_high, strictness_veryhigh, no_doc_warnings, no_test_warnings, no_member_warnings
     Strictness: low
 Libraries Used: 
      Tools Run: dodgy, mccabe, pep8, profile-validator, pyflakes, pylint
 Messages Found: 1


[/code]

The <em>cyclomatic complexity</em> metric was defined by <a href="http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=1702388&amp;filter%3DAND%28p_IS_Number%3A35895%29" target="_blank">Thomas J. McCabe in a 1976 paper</a> (the PDF of which can be found <a href="http://www.literateprogramming.com/mccabe.pdf" target="_blank">here</a>, or reproduced in the <a href="https://books.google.co.uk/books?id=vtNWAAAAMAAJ&amp;dq=%22structured%20testing%22&amp;pg=PR1#v=onepage&amp;q=%22structured%20testing%22&amp;f=false" target="_blank">book "Structured Testing" which is available on Google Books</a>). It is essentially a measure of the number of logical paths through a piece of source code: the higher the number, the higher the complexity, and therefore the more error-prone the code is likely to be. McCabe suggested "10... seems like a reasonable, but not magical, upper limit". The example given above was found to have a complexity of 17, so needs simplifying (e.g by breaking up into more than one routine).

For more detail, the McCabe paper gives a very good description which is hard to improve on:

<blockquote>Given a program we will associate with it a directed graph that has unique entry and exit nodes [vertices]. Each node in the graph corresponds to a block of code in the program where the flow is sequential and the arcs [edges] correspond to branches taken in the program. This graph is classically known as the program control graph... and it is assumed that each node can be reached by the entry node and each node can reach the exit node. For example the following is a program control graph with entry node $latex a &amp;bg=ffffff$ and exit node $latex f &amp;bg=ffffff$:

[caption id="" align="alignnone" width="212"]<img class="" src="https://books.google.co.uk/books?id=vtNWAAAAMAAJ&amp;pg=PA3&amp;img=1&amp;zoom=3&amp;hl=en&amp;sig=ACfU3U2LbN62dSqC_xZCFeoYcb-COKZ7IA&amp;ci=642%2C968%2C254%2C220&amp;edge=0" alt="" width="212" height="182" /> Reproduced from McCabe (1976).[/caption]

The following mathematical preliminaries will be needed...

<em>Definition 1</em>: The cyclomatic number $latex V(G) &amp;bg=ffffff$ of a graph $latex G &amp;bg=ffffff$ with $latex n &amp;bg=ffffff$ vertices, $latex e &amp;bg=ffffff$ edges and $latex p &amp;bg=ffffff$ connected components is

$latex V(G) = e - n + p &amp;bg=ffffff$

<em>Theorem 1</em>: In a strongly connected graph $latex G &amp;bg=ffffff$ the cyclomatic number is equal to the maximum number of linearly independent circuits.</blockquote>

Note here that at this stage we are concerned with <em>circuits</em> - i.e. closed loops that start at a given node and return back to that same node - rather than <em>paths</em>.

<blockquote>Theorem 1 is applied to $latex G &amp;bg=ffffff$ in the following way. Imagine that the exit node $latex f &amp;bg=ffffff$ branches back to the entry node $latex a &amp;bg=ffffff$. The control graph $latex G &amp;bg=ffffff$ is now strongly connected (there is a path joining any pair of arbitrary distinct vertices) so Theorem 1 applies. Therefore the maximum number of linearly independent circuits in $latex G &amp;bg=ffffff$ is $latex 9 - 6 + 2 &amp;bg=ffffff$. For example one could choose the following 5 independent circuits in $latex G &amp;bg=ffffff$:

$latex B1: (abefa), (beb), (abea), (acfa), (adcfa) &amp;bg=ffffff$

It follows that $latex B1 &amp;bg=ffffff$ forms a basis for the set of all circuits in $latex G &amp;bg=ffffff$ and any path through $latex G &amp;bg=ffffff$ can be expressed as a linear combination of circuits from $latex B1 &amp;bg=ffffff$. For instance the path $latex (abeabebebef) &amp;bg=ffffff$ is expressible as $latex (abea) + 2(beb) + (abefa) &amp;bg=ffffff$.

To see how this works it's necessary to number the edges on $latex G &amp;bg=ffffff$ as in:

[caption id="" align="alignnone" width="135"]<img src="https://books.google.co.uk/books?id=vtNWAAAAMAAJ&amp;pg=PA4&amp;img=1&amp;zoom=3&amp;hl=en&amp;sig=ACfU3U2LMlgVCsIny0X682Rs8LVIkP0WqA&amp;ci=165%2C387%2C235%2C207&amp;edge=0" alt="" width="135" height="119" /> Reproduced from McCabe, 1976.[/caption]

Now for each member of the basis $latex B1 &amp;bg=ffffff$ associate a vector as follows:

[caption id="" align="alignnone" width="160"]<img src="https://books.google.co.uk/books?id=vtNWAAAAMAAJ&amp;pg=PA4&amp;img=1&amp;zoom=3&amp;hl=en&amp;sig=ACfU3U2LMlgVCsIny0X682Rs8LVIkP0WqA&amp;ci=66%2C638%2C279%2C134&amp;edge=0" alt="" width="160" height="77" /> Reproduced from McCabe, 1976.[/caption]

The path $latex (abea(be)^3fa) &amp;bg=ffffff$ corresponds to the vector $latex 2004200111 &amp;bg=ffffff$ and the vector addition of $latex (abefa) &amp;bg=ffffff$, $latex 2(beb) &amp;bg=ffffff$ and $latex (abea) &amp;bg=ffffff$ yields the desired result.

In using Theorem 1 one can choose a basis set of circuits that correspond to paths through the program. The set $latex B2 &amp;bg=ffffff$ is a basis of program paths.

$latex B2: (abef), (abeabef), (abebef), (acf), (adcf) &amp;bg=ffffff$

Linear combination of paths in $latex B2 &amp;bg=ffffff$ will also generate any path. For example:

$latex (abea(be)^3f) = 2(abebef) - (abef) &amp;bg=ffffff$

and:

$latex (a(be)^2(abef) = (a(be)^2f) + (abeabef) - (abef) &amp;bg=ffffff$.

The overall strategy will be to measure the complexity of a program by computing the number of linearly independent paths $latex V(G) &amp;bg=ffffff$, control the size of programs by setting an upper limit to $latex V(G) &amp;bg=ffffff$ (instead of using just physical size), and use the cyclomatic complexity as the basis for a testing methodology.</blockquote>

[caption id="attachment_450" align="alignleft" width="178"]<a href="https://0x7df.files.wordpress.com/2015/04/example_mccabe_graph.png"><img class="size-large wp-image-450" src="https://0x7df.files.wordpress.com/2015/04/example_mccabe_graph.png?w=178" alt="Example mccabe graph output" width="178" height="1024" /></a> Example mccabe graph output[/caption]

If you want to run <code>mccabe</code> separately from <code>prospector</code> you can do, using:

[code lang="bash"]
&gt; python -m mccabe mysourcefile.py
('If 209', 2)
(&quot;13:1: 'run'&quot;, 8)
[/code]

You can add the <code>-d</code> option (documented <a href="http://nedbatchelder.com/blog/200803/python_code_complexity_microtool.html" target="_blank">here</a>) to produce output that can be passed to the <a href="http://www.graphviz.org/" target="_blank">Graphviz</a> program <a href="http://www.graphviz.org/pdf/dotguide.pdf" target="_blank">dot</a>, which will plot the graph. I.e.:

[code lang="bash"]
&gt; python -m mccabe -d example.py | \
dot -Tpng -o example.png
[/code]

produces something like the graph shown to the left.

As well as using the cyclomatic complexity as a metric of whether a particular piece of source code needs simplifying, it can also give an indication of the number of tests that are required. If the number of tests is less than the complexity metric, then clearly there must be some paths through that are not being tested. Obviously, it doesn't necessarily follow that, if the number of tests is equal to or greater than the complexity, then all paths <em>are</em> being tested - more than one test might be following a particular logical path. So having $latex V(G) &amp;bg=ffffff$ tests for a particular routine $latex G &amp;bg=ffffff$ is necessary but not sufficient to ensure full coverage of all the paths; but it seems like a good start.

<h2>Fine-tuning using profiles in Prospector</h2>

Probably one of the most useful aspects of Prospector is the ability to fine-tune the warnings that are issued. For instance, once the strictness level is up to medium or above, you might start to get a lot of warnings from Pylint about invalid constant names:

[code]
example.py
  Line: 1
    pylint: invalid-name / Invalid constant name &quot;nmats&quot;
  Line: 17
    pylint: invalid-name / Invalid constant name &quot;dcoeff&quot;
  Line: 21
    pylint: invalid-name / Invalid constant name &quot;tpower&quot;
  Line: 23
    pylint: invalid-name / Invalid constant name &quot;tmp0&quot;
...
[/code]

The <a href="https://www.python.org/dev/peps/pep-0008" target="_blank">PEP8 style guide</a> suggests constants should be in upper case; I'm happy with this rule but in most cases that were identified for a particular project I used a trial run, I didn't regard the variable as a constant (e.g. like $latex \pi &amp;bg=ffffff$, $latex c &amp;bg=ffffff$, $latex h &amp;bg=ffffff$, etc.), but a variable that happens not to change - in a lot of the cases just because the code is incomplete and, at some point down the line, these will end up changing.

When we move to the <code>veryhigh</code> strictness level, another example that comes up is trailing whitespace. I want to remove trailing whitespace from lines of code; but because my editor automatically indents, <em>blank</em> lines also get indented to the same level as the most recent non-blank line. This whitespace on otherwise blank lines counts as trailing whitespace, so I get far too many warning messages.

Thirdly, classes that have too few (fewer than two) public methods are warned against; <a href="http://stackoverflow.com/questions/14027417/what-does-pylints-too-few-public-methods-message-mean" target="_blank">the advice is that classes shouldn't be used for data storage, but should include functions</a>. If the only purpose is data storage, then a data structure  like a dictionary is more appropriate. However, again because of the work-in-progress status of the code being analysed, I've defined certain classes that currently only register data, but I expect at some point will include methods. So in the meantime I want to turn this check off, for the moment at least.

The fine-tuning is done using profiles. A profile is just a <a href="http://yaml.org/" target="_blank">YAML </a>file with some configuration information, so you can give different projects different rule sets by giving them their own configuration file. An example is:

[code]
strictness: veryhigh
ignore-paths: QA
pylint:
  disable:
    - invalid-name
    - trailing-whitespace
    - too-few-public-methods
[/code]

The really nice part is that configurations can inherit from other configurations. For example, Prospector's different <code>--strictness</code> options are really just different pre-defined profiles, and the example above has been set up to inherit from the <code>--strictness high</code> profile. The project-specific tweaks are:

<ul>
    <li>Ignore the directory called `QA` and its contents (which in this project contains temporary/intermediate files). This can also be achieved by using `--ignore-paths QA` on the command line.</li>
    <li>Disable the `invalid-name` messages from Pylint.</li>
    <li>Disable the `trailing-whitespace` messages from Pylint</li>
    <li>Disable the `too-few-public-methods` messages from Pylint</li>
</ul>

<h2> Adding additional tools</h2>

As well as the default tools (Pylint, <a href="https://pypi.python.org/pypi/pep8" target="_blank">pep8</a>, <a href="https://pypi.python.org/pypi/pyflakes">pyflakes</a>, mccabe, <a href="https://github.com/landscapeio/dodgy">dodgy</a> and profile_validator), additional tools can be turned on either via the command line or by adding them to a profile. The useful extra options are:

<ul>
    <li><a href="https://pypi.python.org/pypi/pep257">pep257</a>, which checks that docstrings conform to the <a href="https://www.python.org/dev/peps/pep-0257/">PEP257 docstring conventions guide</a>. Use `--with-tool pep257` on the command line, or add `run: true` to a `pep257:` section in a profile file.</li>
    <li><a href="https://pypi.python.org/pypi/vulture">vulture</a>, which checks for 'dead code' (unused variables, functions, classes, etc.). This requires installation first, via `pip install prospector[with_vulture]`. (NB this syntax doesn't work in a <a href="http://zsh.sourceforge.net/">Z shell</a>.)</li>
    <li><a href="https://pypi.python.org/pypi/pyroma">pyroma</a>, used for checking that Python packaging best practices are being followed. Requires `pip install prospector[with_pyroma]`. Note that using pyroma implies the use of pep257.</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>441</wp:post_id>
  <wp:post_date>2015-04-11 23:32:19</wp:post_date>
  <wp:post_date_gmt>2015-04-11 23:32:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-code-analysis-using-prospector</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cyclomatic-complexity"><![CDATA[cyclomatic complexity]]></category>
  <category domain="post_tag" nicename="graph-theory"><![CDATA[graph theory]]></category>
  <category domain="post_tag" nicename="mccabe"><![CDATA[mccabe]]></category>
  <category domain="post_tag" nicename="pep8"><![CDATA[pep8]]></category>
  <category domain="post_tag" nicename="prospector"><![CDATA[prospector]]></category>
  <category domain="post_tag" nicename="pylint"><![CDATA[pylint]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="static-analysis"><![CDATA[static analysis]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="yaml"><![CDATA[yaml]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9c104fced572e256723aeb15875c76aa</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9165a605e739d7baa2326585c73acc1e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c66de98cd5937d09dbf822d29cfaac14</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_07f0b81d47145d617754c0df4d2966d4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cc98e30a3baab98836cf0ca7bb476df1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/450210125130823_477699379048564]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[472]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1374960056154041;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/7cu4u2abfN]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=403453629&stype=M&topic=5992801199080906752&type=U&a=OgcE]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Example mccabe graph output</title>
  <link>https://0x7df.wordpress.com/2015/04/11/python-code-analysis-using-prospector/example_mccabe_graph/#main</link>
  <pubDate>Sat, 11 Apr 2015 15:52:47 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/04/example_mccabe_graph.png</guid>
  <description/>
  <content:encoded><![CDATA[Output of program control graph produced by mccabe and plotted using dot.]]></content:encoded>
  <excerpt:encoded><![CDATA[Example mccabe graph output]]></excerpt:encoded>
  <wp:post_id>450</wp:post_id>
  <wp:post_date>2015-04-11 15:52:47</wp:post_date>
  <wp:post_date_gmt>2015-04-11 15:52:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>example_mccabe_graph</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>441</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/04/example_mccabe_graph.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
    <wp:meta_value><![CDATA[Example mccabe graph output]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>program_control_graph_02</title>
  <link>https://0x7df.wordpress.com/2015/04/11/python-code-analysis-using-prospector/program_control_graph_02/#main</link>
  <pubDate>Sat, 11 Apr 2015 23:24:20 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/04/program_control_graph_02.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>472</wp:post_id>
  <wp:post_date>2015-04-11 23:24:20</wp:post_date>
  <wp:post_date_gmt>2015-04-11 23:24:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>program_control_graph_02</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>441</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/04/program_control_graph_02.png</wp:attachment_url>
</item>
<item>
  <title>Creating a new Ubuntu virtual machine in Oracle VirtualBox</title>
  <link>https://0x7df.wordpress.com/2015/04/26/creating-a-new-ubuntu-virtual-machine-in-oracle-virtualbox/</link>
  <pubDate>Sun, 26 Apr 2015 12:29:02 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=473</guid>
  <description/>
  <content:encoded><![CDATA[These instructions are for a Windows host machine. An article <a href="http://osxdaily.com/2012/03/27/install-run-ubuntu-linux-virtualbox/">here </a>gives instructions for Mac OS X, but are unlikely to be very different. This assumed you've already <a href="https://www.virtualbox.org/wiki/Downloads">downloaded</a> and <a href="https://www.virtualbox.org/manual/ch02.html">installed </a>VirtualBox.

<h2>Create the VM</h2>

<ol>
    <li>Open the Oracle VM VirtualBox Manager. This brings up the window shown in Figure 1.

[caption id="attachment_474" align="alignnone" width="276"]<a href="https://0x7df.files.wordpress.com/2015/04/01_oracle_virtualbox_manager.png"><img class="wp-image-474 size-medium" src="https://0x7df.files.wordpress.com/2015/04/01_oracle_virtualbox_manager.png?w=276" alt="Figure 1. Oracle VirtualBox VM Manager window." width="276" height="300" /></a> Figure 1. Oracle VirtualBox VM Manager window.[/caption]</li>
    <li>Click "New" in the top-left corner. This brings up the "Create Virtual Machine" dialogue box, shown in Figure 2.</li>
    <li>Give the system a descriptive name, and select "Linux" from the "Type" drop-down menu, and then "Ubuntu (64 bit)" from the "Version" drop-down menu. (Obviously you can choose whatever you like at this point, I default to Ubuntu.) Click "Next".

[caption id="attachment_475" align="alignnone" width="300"]<a href="https://0x7df.files.wordpress.com/2015/04/02_create_vm_dialogue.png"><img class="wp-image-475 size-medium" src="https://0x7df.files.wordpress.com/2015/04/02_create_vm_dialogue.png?w=300" alt="Figure 2. Create Virtual Machine dialogue box." width="300" height="283" /></a> Figure 2. Create Virtual Machine dialogue box.[/caption]</li>
    <li>The next  few dialogue boxes allow you to select how much memory you want, decide whether or not to create a virtual hard drive or not (or use an existing one), and assuming you do, define its properties (file format, whether or not to dynamically allocate storage, size (or maximum size), and location). Assuming you want to keep the defaults for all these, click "Next" or "Create" until you get to the end.</li>
    <li>You've finished the first phase and have been returned to the VirtualBox Manager window, and you should see the system you've just created in the list of available VMs on the left-hand side. If you click on it once, the details of the system will be shown in the right-hand pane. To launch it, either double-click, or click "Start" up at the top when the VM is selected.</li>
</ol>

<h2>Install the OS</h2>

<ol>
    <li>

[caption id="attachment_476" align="alignright" width="300"]<a href="https://0x7df.files.wordpress.com/2015/04/03_select_start-up_disk_dialogue.png"><img class="size-medium wp-image-476" src="https://0x7df.files.wordpress.com/2015/04/03_select_start-up_disk_dialogue.png?w=300" alt="Figure 3. Select start-up disk dialogue box." width="300" height="227" /></a> Figure 3. Select start-up disk dialogue box.[/caption]

The next step is to install the operating system. A "Select start-up disk" dialogue box comes up, with a drop-down menu. The default selection is "Host drive 'D:'". Rather than use a DVD installation disk however, I've previously downloaded an ISO disk image file. I can select this directly from the drop-down menu (see Figure 3) because I've used it before, so VirtualBox remembers its location. If this isn't the case for you, you can click the folder icon to the right of the drop-down menu, which opens up a file browser and allows you to navigate to wherever you stored the downloaded ISO file (look <a href="http://www.ubuntu.com/download/desktop">here</a> for a download). Click "Start", and the VM will start to boot from the ISO.</li>
    <li>From here on the instructions are as to install Ubuntu from disk. Click through the defaults and self-explanatory settings, until the installation begins proper. This takes a while, and when it's complete you'll be prompted to restart.</li>
</ol>

<h2>Install Guest Additions</h2>

<ol>
    <li>When the restart has completed, you have working VM. However, there's something obviously wrong with the desktop. When you re-size the VM window, the desktop doesn't scale with it but remains a fixed size, which is way too small. This is because the resolution is fixed, and having the desktop size scale with the window size essentially means changing the VM screen resolution. To do this you need to install additional software on the VM, called the Guest Additions. The next stage is to install the Guest Additions.</li>
    <li>First, the Linux VM needs Dynamic Kernel Module Support (DKMS) to be installed. Open a terminal on the VM and run:

[code lang="bash"]sudo apt-get install dkms[/code]

This allows it to build external module kernels.</li>
    <li>Select, from the VM's "Devices" menu, "Insert Guest Additions CD image...". This will open File Manager showing the contents of the CD, and the path, which will be something like "/media/username/VBOXADDITIONS_4.3.26_98988/".</li>
    <li>Return to the terminal, cd into the Guest Additions directory, then run:

[code lang="bash"]sudo sh ./VBoxLinuxAdditions.run[/code]

</li>
    <li>Restart the VM. You're done.</li>
</ol>

<h2>Initial software stack</h2>

While I try to have a VM for each project I'm working on, I start each one with a few bits and pieces that I expect to find useful on most projects. To make this as quick as possible I have <a href="https://github.com/0x7df/mkvm" target="_blank">a script on GitHub</a> that performs the installation for me. To use this:

<ol>
    <li>Install git:

[code lang="bash"] sudo apt-get install git [/code]

</li>
    <li>Clone the repository:

[code lang="bash"] git clone https://github.com/0x7df/mkvm.git [/code]

</li>
    <li>Run the script:

[code lang="bash"] cd mkvm ; ./mkvm.sh [/code]

</li>
</ol>

You can see the software that gets installed from the listing below:

[code lang="bash"]

# mkvm - Make virtual machine
# This script configures an Ubuntu virtual machine how I like it

sudo apt-get -y update               # Must be done before upgrade
sudo apt-get -y dist-upgrade         # Does upgrade with intelligent dependency-handling

sudo apt-get -y install dkms         # For installing VirtualBox Linux Guest Additions (https://www.virtualbox.org/manual/ch04.html)

sudo apt-get -y install git
sudo apt-get -y install nedit
sudo apt-get -y install python-numpy # Contains, amongst other things, f2py
sudo apt-get -y install python-dev   # For Python.h; required by f2py
sudo apt-get -y install gfortran
sudo apt-get -y install python-pip
sudo apt-get -y install python-matplotlib
sudo apt-get -y install okular
sudo apt-get -y upgrade graphviz
sudo apt-get -y install texlive
sudo apt-get -y install doxygen

sudo pip install robotframework
sudo pip install prospector[with_frosted]
sudo pip install prospector[with_pyroma]
sudo pip install prospector[with_vulture]

sudo add-apt-repository ppa:staticfloat/juliareleases
sudo add-apt-repository ppa:staticfloat/julia-deps
sudo apt-get -y install julia

# python-scipy
# matplotlib

# If Java JDK is required, determine the path:
#   &gt; update-alternatives --config java
# Set JAVA_HOME=/usr/bin/java (or wherever) in /etc/environment, which is the preferred location for JAVA_HOME or any system variable.

echo &quot;
# Now install the Linux Guest Additions for VirtualBox. Go to the
# \&quot;Devices\&quot; menu of VirtualBox when the VM is running (make sure it is not in
# stretch mode or the menu bar will not be visible); select \&quot;Insert Guest
# Additions CD image...\&quot;; then run VBoxLinuxAdditions.run with administrator
# privileges. Re-boot the VM; after this the VM desktop should resize with the
# VirtualBox window, rather than being a fixed (small) size.
&quot;
[/code]

<h2>Shared clipboard</h2>

One extra useful thing to do is enable the shared clipboard, which allows copy-and-paste from the host to the guest, vice versa, or both. Make sure the VM is shut down, select it in the VirtualBox Manager window, go to "Settings", "General", "Advanced" and select from the "Shared Clipboard" drop-down. Detailed descriptions with screen shots are <a href="http://www.howtogeek.com/187535/how-to-copy-and-paste-between-a-virtualbox-host-machine-and-a-guest-machine" target="_blank">here</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>473</wp:post_id>
  <wp:post_date>2015-04-26 12:29:02</wp:post_date>
  <wp:post_date_gmt>2015-04-26 12:29:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>creating-a-new-ubuntu-virtual-machine-in-oracle-virtualbox</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="virtual-machine"><![CDATA[virtual machine]]></category>
  <category domain="post_tag" nicename="virtualbox"><![CDATA[virtualbox]]></category>
  <category domain="post_tag" nicename="vm"><![CDATA[vm]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[80872226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/450210125130823_484745281677307]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[474]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1374960056154041;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/DQOmKUwmBP]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_linkedin_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"7R5ZT06VSC";s:4:"date";s:29:"Sun, 26 Apr 2015 12:29:25 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"PROD-ELA4";s:9:"x-li-uuid";s:24:"ZO0myyOQ2BPAemuoQysAAA==";s:10:"set-cookie";s:153:"lidc="b=VB29:g=224:u=6:i=1430051365:t=1430137765:s=AQF38Xf0h3qdyDNVFAx5auZ2NyKBCEnS"; Expires=Mon, 27 Apr 2015 12:29:25 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1429136421925",
  "requestId": "7R5ZT06VSC",
  "status": 401,
  "timestamp": 1430051365315
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:79:""b=VB29:g=224:u=6:i=1430051365:t=1430137765:s=AQF38Xf0h3qdyDNVFAx5auZ2NyKBCEnS"";s:7:"expires";i:1430137765;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>01_oracle_virtualbox_manager</title>
  <link>https://0x7df.wordpress.com/2015/04/26/creating-a-new-ubuntu-virtual-machine-in-oracle-virtualbox/01_oracle_virtualbox_manager/#main</link>
  <pubDate>Sun, 12 Apr 2015 11:47:44 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/04/01_oracle_virtualbox_manager.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>474</wp:post_id>
  <wp:post_date>2015-04-12 11:47:44</wp:post_date>
  <wp:post_date_gmt>2015-04-12 11:47:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>01_oracle_virtualbox_manager</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>473</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/04/01_oracle_virtualbox_manager.png</wp:attachment_url>
</item>
<item>
  <title>02_create_VM_dialogue</title>
  <link>https://0x7df.wordpress.com/2015/04/26/creating-a-new-ubuntu-virtual-machine-in-oracle-virtualbox/02_create_vm_dialogue/#main</link>
  <pubDate>Sun, 12 Apr 2015 11:52:08 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/04/02_create_vm_dialogue.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>475</wp:post_id>
  <wp:post_date>2015-04-12 11:52:08</wp:post_date>
  <wp:post_date_gmt>2015-04-12 11:52:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>02_create_vm_dialogue</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>473</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/04/02_create_vm_dialogue.png</wp:attachment_url>
</item>
<item>
  <title>03_select_start-up_disk_dialogue</title>
  <link>https://0x7df.wordpress.com/2015/04/26/creating-a-new-ubuntu-virtual-machine-in-oracle-virtualbox/03_select_start-up_disk_dialogue/#main</link>
  <pubDate>Sun, 12 Apr 2015 12:06:10 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/04/03_select_start-up_disk_dialogue.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Figure 3. Select start-up disk dialogue box.]]></excerpt:encoded>
  <wp:post_id>476</wp:post_id>
  <wp:post_date>2015-04-12 12:06:10</wp:post_date>
  <wp:post_date_gmt>2015-04-12 12:06:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>03_select_start-up_disk_dialogue</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>473</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/04/03_select_start-up_disk_dialogue.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
    <wp:meta_value><![CDATA[Figure 3. Select start-up disk dialogue box.]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python wordcloud for WordPress</title>
  <link>https://0x7df.wordpress.com/2015/05/10/python-wordcloud-for-wordpress/</link>
  <pubDate>Sun, 10 May 2015 12:06:33 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=506</guid>
  <description/>
  <content:encoded><![CDATA[There is a <a href="http://www.python.org" target="_blank">Python</a> routine available on <a href="https://github.com/" target="_blank">Github</a> for creating a word cloud, created by <a href="http://peekaboo-vision.blogspot.co.uk/" target="_blank">Andreas Mueller</a>: <a title="https://github.com/amueller/word_cloud" href="https://github.com/amueller/word_cloud" target="_blank">https://github.com/amueller/word_cloud</a>.

<a href="http://sebastianraschka.com/Articles/2014_twitter_wordcloud.html" target="_blank">A blog post here</a>, and <a href="https://github.com/rasbt/datacollect" target="_blank">the Github repo that it goes with</a> (both due to <a href="http://sebastianraschka.com/" target="_blank">Sebastien Raschka</a>), make it easy to use the <a href="https://dev.twitter.com/rest/public" target="_blank">Twitter API</a> to download your <a href="https://support.twitter.com/articles/164083-what-s-a-twitter-timeline#" target="_blank">Twitter timeline</a> (as a <a href="http://en.wikipedia.org/wiki/Comma-separated_values" target="_blank">CSV</a> file), and then use the word cloud script to produce a word cloud from it.

<a href="https://0x7df.files.wordpress.com/2015/04/my_twitter_wordcloud_1.png"><img class="alignnone wp-image-508 size-large" src="https://0x7df.files.wordpress.com/2015/04/my_twitter_wordcloud_1.png?w=660" alt="my_twitter_wordcloud_1" width="660" height="495" /></a>

To add something to this, I did the same thing with my <a href="https://wordpress.com" target="_blank">WordPress</a> blog posts. I didn't want to bother fighting with the WordPress API, so I simply exported the blog contents to an XML file, which WordPress allows you to do through the admin interface (so you can archive your blog locally and/or transfer it into a different blog). Hence, this really just ends up being about XML parsing. Here is the source code:

[code lang="python"]
#!/usr/bin/python

from HTMLParser import HTMLParser
import xml.etree.ElementTree as ET
import matplotlib.pyplot as plt
from wordcloud import WordCloud, STOPWORDS

# http://stackoverflow.com/questions/753052/strip-html-from-strings-in-python
class MLStripper(HTMLParser):
    def __init__(self):
        self.reset()
        self.fed = []
    def handle_data(self, d):
        self.fed.append(d)
    def get_data(self):
        return ''.join(self.fed)

tree = ET.parse('0x7df.wordpress.2015-04-25.xml')

root = tree.getroot()

postwords = []

for child in root.iter():
    if child.tag == 'item':
        if child.find('{http://wordpress.org/export/1.2/}status').text == 'publish':
            postbody = child.find('{http://purl.org/rss/1.0/modules/content/}encoded').text
            s = MLStripper()
            s.feed(postbody)
            postwords += s.get_data().split()

keywords = ' '.join([wd for wd in postwords
                     if 'http' not in wd and
                        'bg=' not in wd and
                        not wd.startswith('$') and
                        not wd.startswith('[') and
                        not wd.startswith('&amp;')
                    ])

wordcloud = WordCloud(
                      font_path='./SaucerBB.ttf',
                      stopwords=STOPWORDS,
                      background_color='black',
                      width=1800,
                      height=1800
                     ).generate(keywords)

plt.imshow(wordcloud)
plt.axis('off')
plt.savefig('./my_wordpress_wordcloud_2.png', dpi=300)
plt.show()
[/code]

I used the standard library light-weight <code>&lt;a href="https://docs.python.org/2/library/xml.etree.elementtree.html" target="_blank"&gt;xml.etree.ElementTree&lt;/a&gt;</code> parser. I get the root of the <a href="http://en.wikipedia.org/wiki/XML" target="_blank">XML</a> document, and iterate over its children; this is recursive, so it descends down the tree to all nodes. Whenever I encounter a node which has the tag <code>item</code> (which contains the post information), I search amongst its immediate children using the <code>find()</code> method, to find one with tag <code>{http://wordpress.org/export/1.2/}status</code>, which contains the status of the post, i.e. whether it's published, draft, etc. If it's published (the text that the XML tag contains <code>== publish</code>), then I search again using <code>find()</code> for the tag <code>{http://purl.org/rss/1.0/modules/content/}encoded</code>, which contains the blog post text. I put this in the <code>postbody</code> variable.

The next few lines use the <code>class</code> defined earlier on in the script - <code>MLStripper()</code> - to strip out the <a href="http://www.w3schools.com/html/" target="_blank">HTML</a> tags from the blog post. (This came from <a href="//stackoverflow.com/questions/753052/strip-html-from-strings-in-python" target="_blank">StackOverflow</a>.) The rest of the script is essentially the same as <a href="http://sebastianraschka.com/Articles/2014_twitter_wordcloud.html" target="_blank">Raschka's code for Twitter</a>, tweaked a little where necessary.
The result is:

<a href="https://0x7df.files.wordpress.com/2015/04/my_wordpress_wordcloud_21.png"><img class="alignnone wp-image-512 size-large" src="https://0x7df.files.wordpress.com/2015/04/my_wordpress_wordcloud_21.png?w=660" alt="my_wordpress_wordcloud_2" width="660" height="495" /></a>

The font is called Saucer BB, from <a href="http://www.1001fonts.com/saucer-bb-font.html" target="_blank">here</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>506</wp:post_id>
  <wp:post_date>2015-05-10 12:06:33</wp:post_date>
  <wp:post_date_gmt>2015-05-10 12:06:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-wordcloud-for-wordpress</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="api"><![CDATA[api]]></category>
  <category domain="post_tag" nicename="html"><![CDATA[html]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="wordcloud"><![CDATA[wordcloud]]></category>
  <category domain="post_tag" nicename="wordpress"><![CDATA[wordpress]]></category>
  <category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[512]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/450210125130823_489972617821240]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1374960056154041;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/115824850944145124788/posts/aiAbWgUjQLt]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_11298791</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/5lrT5AqIAf]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=403453629&stype=M&topic=6003137891855802368&type=U&a=UdLt]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_99956cfa3810040e606767ec8fa0bf5f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>my_twitter_wordcloud_1</title>
  <link>https://0x7df.wordpress.com/2015/05/10/python-wordcloud-for-wordpress/my_twitter_wordcloud_1/#main</link>
  <pubDate>Sat, 25 Apr 2015 20:35:39 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/04/my_twitter_wordcloud_1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>508</wp:post_id>
  <wp:post_date>2015-04-25 20:35:39</wp:post_date>
  <wp:post_date_gmt>2015-04-25 20:35:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my_twitter_wordcloud_1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>506</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/04/my_twitter_wordcloud_1.png</wp:attachment_url>
</item>
<item>
  <title>my_wordpress_wordcloud_2</title>
  <link>https://0x7df.wordpress.com/2015/05/10/python-wordcloud-for-wordpress/my_wordpress_wordcloud_2/#main</link>
  <pubDate>Sat, 25 Apr 2015 20:44:26 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/04/my_wordpress_wordcloud_2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>511</wp:post_id>
  <wp:post_date>2015-04-25 20:44:26</wp:post_date>
  <wp:post_date_gmt>2015-04-25 20:44:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my_wordpress_wordcloud_2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>506</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/04/my_wordpress_wordcloud_2.png</wp:attachment_url>
</item>
<item>
  <title>my_wordpress_wordcloud_2</title>
  <link>https://0x7df.wordpress.com/2015/05/10/python-wordcloud-for-wordpress/my_wordpress_wordcloud_2-2/#main</link>
  <pubDate>Sat, 25 Apr 2015 20:46:32 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/04/my_wordpress_wordcloud_21.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>512</wp:post_id>
  <wp:post_date>2015-04-25 20:46:32</wp:post_date>
  <wp:post_date_gmt>2015-04-25 20:46:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my_wordpress_wordcloud_2-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>506</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/04/my_wordpress_wordcloud_21.png</wp:attachment_url>
</item>
<item>
  <title>Thermal radiation, Kirchhoff's law, and black bodies (1/4)</title>
  <link>https://0x7df.wordpress.com/2015/05/17/thermal-radiation-kirchhoffs-law-and-black-bodies-14/</link>
  <pubDate>Sun, 17 May 2015 14:53:29 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=526</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Thermal radiation</h2>

[caption id="attachment_528" align="alignright" width="127"]<a href="https://0x7df.files.wordpress.com/2015/05/sts-3_infrared_on_reentry.jpg"><img class="size-thumbnail wp-image-528" src="https://0x7df.files.wordpress.com/2015/05/sts-3_infrared_on_reentry.jpg?w=127" alt="Thermal imaging" width="127" height="150" /></a> Thermal imaging[/caption]

All matter continuously emits electromagnetic radiation as a consequence of its temperature. This radiation is called <strong>thermal radiation</strong> or <strong>heat radiation</strong> (although of course it isn't intrinsically different from electromagnetic radiation generated by any other means). Thermal radiation is what makes thermal imaging possible, and why hot embers glow, etc. From our everyday experience and from experimentation we can see that both the wavelength and intensity of radiation emitted depend in some way on the temperature of the matter.

We can understand a lot about the properties of thermal radiation from thought experiments, in particular by considering a hollow enclosure of any shape, whose walls are opaque to radiation and which are held everywhere at a constant temperature. The inner surface emits thermal radiation, and therefore the interior space is filled with a radiation field. The walls also absorb radiation. If at a particular time a small volume $latex dv &amp;bg=ffffff$ of space around a point $latex P &amp;bg=ffffff$ contains an amount of radiation $latex Q &amp;bg=ffffff$, then the quantity $latex Q/dv &amp;bg=ffffff$ is called the <strong>energy density</strong> at point $latex P &amp;bg=ffffff$. We can show that <em>the energy density in a constant-temperature enclosure is independent of the nature of the walls of the enclosure, and depends only on the temperature of the walls</em>.

First, imagine two such containers, $latex A &amp;bg=ffffff$ and $latex B &amp;bg=ffffff$, with the same wall temperatures, but in which, for some reason (e.g. the material of the walls perhaps) the energy density is different. It is higher in $latex B &amp;bg=ffffff$<a href="https://0x7df.files.wordpress.com/2015/05/two_cavities.png"><img class="alignright size-medium wp-image-530" src="https://0x7df.files.wordpress.com/2015/05/two_cavities.png?w=300" alt="two_cavities" width="300" height="225" /></a>.

Then imagine we can bring the two enclosures together to form a single enclosure - perhaps they each have at least one flat face of a given shape and size, which we can match up, and then instantaneously remove these walls so the two cavities are joined into one. If $latex B &amp;bg=ffffff$ had the higher initial energy density, then the energy density in $latex A &amp;bg=ffffff$ will begin to increase, and the energy density in $latex B &amp;bg=ffffff$ will decrease. Correspondingly, the walls of $latex A &amp;bg=ffffff$ will increase in temperature by absorbing the excess radiation, and the walls of $latex B &amp;bg=ffffff$ will cool. The result is that we are causing heat to flow from one body to another at higher temperature without doing any work, which contravenes the second law of thermodynamics. From this we can conclude that, if the walls are at the same temperature, then the energy densities must be the same, no matter what. Hence, the energy density in each enclosure is dependent on only the wall temperature.

The result also applies to the energy density in any restricted range of wavelengths,  between $latex \lambda &amp;bg=ffffff$ and $latex \lambda + d\lambda &amp;bg=ffffff$. If, when we first conjoin the two enclosures, instead of simply removing the interior walls we replace them with a screen that is transparent to radiation only in the wavelength range of interest, then the situation is the same. Therefore not only must the total energy density be the same in the two enclosures (if their wall temperatures are the same), but the energy density in any given range of wavelengths must also be the same; i.e. the energy in both enclosures must have the same <em>spectrum</em>. This spectrum is called the <strong>Planck spectrum</strong> or the <strong>black-body spectrum</strong>, and is evidently a function of temperature only.

<h2>Kirchhoff's Law (1859)</h2>

For radiation of wavelengths between $latex \lambda &amp;bg=ffffff$ and $latex \lambda + d\lambda &amp;bg=ffffff$, the <strong>absorptive power</strong> (or <strong>absorptivity</strong>), $latex a_\lambda &amp;bg=ffffff$, of a surface is defined as the fraction of the energy incident on the surface that is absorbed. The <strong>emissive power</strong>, $latex e_\lambda &amp;bg=ffffff$, is the energy emitted per unit area per unit time (per unit wavelength); such that $latex e_\lambda d\lambda &amp;bg=ffffff$ is the energy emitted per unit area per unit time.

Knowing this, we can determine that, if a new body is inserted into a constant-temperature enclosure of the kind discussed earlier, then some amount of radiation, $latex dQ &amp;bg=ffffff$, will be incident on each unit area in each unit time, and an amount $latex a_\lambda dQ &amp;bg=ffffff$ will be absorbed. Since the nature of the walls of the outer container cannot have any effect on the density or spectrum of the radiation inside the enclosure, then the body cannot either; it must be in equilibrium and the emission per unit area per unit time - $latex e_\lambda d\lambda &amp;bg=ffffff$ - must equate to the absorption. Hence:

$latex a_\lambda dQ = e_\lambda d\lambda &amp;bg=ffffff&amp;s=2$

and:

$latex \frac{dQ}{d\lambda} = \frac{e_\lambda}{a_\lambda} &amp;bg=ffffff&amp;s=3$

Because $latex dQ &amp;bg=ffffff$ depends only on the temperature, then for a given temperature both sides of the above equation are equal to a constant, whose value depends on the temperature and the wavelengths in question, but not on the composition of the body. This is <strong>Kirchhoff's law</strong>:

<blockquote><em>The ratio of the emissive to absorptive power for radiation of a given wavelength is the same for all bodies at the same temperature</em>.</blockquote>

A way of clarifying this is to compare two different bodies, placed separately in the interior. The body discussed above, has equilibrium state:

$latex a_\lambda dQ = e_\lambda d\lambda &amp;bg=ffffff&amp;s=2$

but if this is replaced with a different body having different surface properties $latex a_\lambda' &amp;bg=ffffff$ and $latex e_\lambda' &amp;bg=ffffff$, then the new equilibrium state is:

$latex a_\lambda' dQ = e_\lambda' d\lambda &amp;bg=ffffff&amp;s=2$

The ratios $latex a_\lambda/e_\lambda &amp;bg=ffffff$ and $latex a_\lambda' / e_\lambda' &amp;bg=ffffff$ must clearly be equal. Alternatively, you can think of a body inside and therefore in equilibrium with one enclosure, being instantaneously transferred to a different enclosure at the same temperature, and arrive at the same conclusion again.

<h2>Black bodies and perfect radiators</h2>

One interesting consequence of the fact that:

$latex a_\lambda dQ = e_\lambda d\lambda &amp;bg=ffffff&amp;s=2$

is that a stronger absorber (larger $latex a_\lambda &amp;bg=ffffff$) is also a stronger emitter (larger $latex e_\lambda &amp;bg=ffffff$), at a given temperature and for a given wavelength of radiation. In fact a perfect absorber, for which $latex a_\lambda = 1 &amp;bg=ffffff$, and which we therefore refer to as a<strong> black body</strong>, also radiates as intensely as it's possible to do so under the given conditions; so it is also sometimes called a <strong>full</strong> or <strong>perfect radiator</strong>.

[caption id="" align="alignright" width="288"]<img class="" src="http://upload.wikimedia.org/wikipedia/commons/e/ef/Hole_in_Cavity_as_Blackbody.png" alt="" width="288" height="264" /> An enclosure with a small hole acts nearly as a block body, absorbing radiation incident on it with a very small probability of escape (as long as the walls absorb a non-zero fraction of the radiation incident on them).[/caption]

A black body is a theoretical construct - a substance like<a href="https://paleotechnics.wordpress.com/2014/02/25/lampblack-what-it-is-and-what-its-good-for/" target="_blank"> lamp black</a> is an excellent but not perfect absorber - but one way to approach a black body very nearly, is by constructing a sealed enclosure with only a small hole through the walls. Radiation incident on this hole has a very tiny probability of escaping again (i.e. by being reflected off the interior walls) as long as the hole is small in comparison with the dimensions of the enclosure; therefore this system acts as a perfect absorber or black body.

Interestingly, such an enclosure doesn't have the characteristics of a black body only in terms of its ability to <em>absorb</em> the radiation incident on it; radiation <em>emitted</em> from the hole also has identical characteristics to radiation emitted from a black body. We can see this from the fact that, if we were to place a black body of the same temperature into the interior of the cavity, then for it to remain at this original temperature (which it must), the radiation emitted from the cavity walls must be incident on the black body inside it with just the same rate as the rate at which the black body is emitting radiation itself. Hence, the radiation in the enclosure - or any enclosure with constant wall temperature - is black-body radiation.

Since the radiation in the interior of any constant-temperature enclosure has the intensity of black-body radiation, then another way of expressing Kirchhoff's law is that:

<blockquote>The ratio of the emissive power of a body to the emissive power of a black body at the same temperature is equal to the absorptive power of the body.</blockquote>

(Recall that the absorptive power is just a number between 0 and 1). This ratio is also called the <strong>emissivity</strong>, or <strong>absorptivity</strong>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>526</wp:post_id>
  <wp:post_date>2015-05-17 14:53:29</wp:post_date>
  <wp:post_date_gmt>2015-05-17 14:53:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>thermal-radiation-kirchhoffs-law-and-black-bodies-14</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="black-body"><![CDATA[black body]]></category>
  <category domain="post_tag" nicename="physics"><![CDATA[physics]]></category>
  <category domain="category" nicename="physics-2"><![CDATA[Physics]]></category>
  <category domain="post_tag" nicename="thermal-radiation"><![CDATA[thermal radiation]]></category>
  <category domain="post_tag" nicename="thermodynamics"><![CDATA[thermodynamics]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/450210125130823_492684854216683]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[528]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1374960056154041;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/115824850944145124788/posts/PxQfr5pXbnR]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_11298791</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/9wKCU9BpPC]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=403453629&stype=M&topic=6005716638916190209&type=U&a=gj9D]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349743</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>STS-3_infrared_on_reentry</title>
  <link>https://0x7df.wordpress.com/2015/05/17/thermal-radiation-kirchhoffs-law-and-black-bodies-14/sts-3_infrared_on_reentry/#main</link>
  <pubDate>Thu, 14 May 2015 20:07:21 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/05/sts-3_infrared_on_reentry.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Thermal imaging]]></excerpt:encoded>
  <wp:post_id>528</wp:post_id>
  <wp:post_date>2015-05-14 20:07:21</wp:post_date>
  <wp:post_date_gmt>2015-05-14 20:07:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sts-3_infrared_on_reentry</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>526</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/05/sts-3_infrared_on_reentry.jpg</wp:attachment_url>
</item>
<item>
  <title>two_cavities</title>
  <link>https://0x7df.wordpress.com/2015/05/17/thermal-radiation-kirchhoffs-law-and-black-bodies-14/two_cavities/#main</link>
  <pubDate>Thu, 14 May 2015 21:16:20 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/05/two_cavities.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>530</wp:post_id>
  <wp:post_date>2015-05-14 21:16:20</wp:post_date>
  <wp:post_date_gmt>2015-05-14 21:16:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>two_cavities</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>526</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/05/two_cavities.png</wp:attachment_url>
</item>
<item>
  <title>Radiation pressure and the Stefan-Boltzmann law (2/4)</title>
  <link>https://0x7df.wordpress.com/?p=544</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=544</guid>
  <description/>
  <content:encoded><![CDATA[In a previous post on Kirchhoff's law (1859) and black bodies, we saw that the energy density of thermal radiation is a function of temperature only. The first measurements of thermal radiation (from hot platinum wire) were made by Tyndall, and from his results Stefan concluded, in 1879, that the energy radiated went as the fourth power of the absolute temperature. This empirical relationship was later theoretically determined, for black bodies, by Boltzmann in 1884. The law that bears both their names is:

$latex R_B = \sigma T^4 &amp;bg=ffffff&amp;s=2$

and $latex \sigma &amp;bg=ffffff$ is known as the Stefan-Boltzmann constant, and $latex R_B &amp;bg=ffffff$ is the emissive power, the radiant power emitted per unit area.

<h2>Radiation pressure</h2>

Before we begin, it is necessary to understand that radiation exerts a pressure. The easiest way to calculate the radiation pressure is to assume that photons are particles of mass $latex m &amp;bg=ffffff$, where $latex m &amp;bg=ffffff$ is given by $latex e = mc^2 &amp;bg=ffffff$, $latex e &amp;bg=ffffff$ being the photon energy. If we do this, then we can treat the radiation field as a photon gas and find its pressure in the same way as we would for a normal gas, from kinetic arguments; we assume the pressure is the sum of all the impulses delivered to unit area of the wall in unit time by particles colliding with it. The collision rate of a single particle is $latex |u_x|/ \left(2 L_x\right) &amp;bg=ffffff$, where $latex u_x &amp;bg=ffffff$ is the component of the particle's velocity normal to the wall (assumed conserved), and $latex L_x &amp;bg=ffffff$ is the dimension of the container along the normal to the wall. The impulse delivered in each collision is equal to the momentum change of the particle, so $latex 2m|u_x| &amp;bg=ffffff$, so the impulse per unit time is $latex m u_x^2 / L_x &amp;bg=ffffff$, or $latex N \bar m c^2 / 3 L_x &amp;bg=ffffff$ for $latex N &amp;bg=ffffff$ particles, where $latex c^2/3 &amp;bg=ffffff$ is the mean value of $latex \bar{u_x^2} &amp;bg=ffffff$ and $latex \bar m &amp;bg=ffffff$ is the mean mass. This force corresponds to a pressure of $latex N m c^2 / 3 V &amp;bg=ffffff$, where we have assumed the volume $latex V = L_x A &amp;bg=ffffff$; or $latex n m c^2 / 3 &amp;bg=ffffff$ where $latex n = N/V &amp;bg=ffffff$ is the number density of particles. Hence, replacing $latex \bar m c^2 &amp;bg=ffffff$ with $latex e &amp;bg=ffffff$ gives $latex p = (1/3) n\bar e &amp;bg=ffffff$, which is the same as:

$latex p = (1/3) E/V &amp;bg=ffffff&amp;s=2$

<h2>Derivation of the Stefan-Boltzmann law - energy density</h2>

Let's begin with the general thermodynamic expression:

$latex dE = T dS - p dV &amp;bg=ffffff&amp;s=2$

which applies when volume is the only constraint to be be varied. If we divide by $latex dV &amp;bg=ffffff$ at fixed $latex T &amp;bg=ffffff$ we obtain:

$latex \left( \partial E/\partial V\right)_T = T \left(\partial S/\partial V\right)_T - p &amp;bg=ffffff&amp;s=2$

We can see that for an enclosure at constant temperature:

$latex \left(\partial E/\partial V\right)_T = E/V &amp;bg=ffffff&amp;s=2$

(i.e. the energy density in the cavity), since increasing the size of the cavity just adds more radiation at the same density (we proved in the previous post that the energy density is constant throughout and depends only on the temperature of the walls, not on the size or shape or material). Hence:

$latex E/V = T \left(\partial S/\partial V\right)_T - p &amp;bg=ffffff&amp;s=2$

Next we can also use the Maxwell relation:

$latex \left(\partial S/\partial V\right)_T = \left(\partial p/\partial T\right)_V &amp;bg=ffffff&amp;s=2$

which comes from the fact that both:

$latex dF = -S dT - p dV &amp;bg=ffffff&amp;s=2$

$latex dF = \left(\partial F/\partial T\right)_V dT + \left(\partial F/\partial V\right)_T dV &amp;bg=ffffff&amp;s=2$

are true, so that we can identify:

$latex S = -\left(\partial F/\partial T\right)_V &amp;bg=ffffff&amp;s=2$

$latex p = - \left(\partial F/\partial V\right)_T &amp;bg=ffffff&amp;s=2$

and bearing in mind that $latex \left(\partial/\partial V\right)_T \left(\partial F/\partial T\right)_V = \left(\partial/\partial T\right)_V \left(\partial F/\partial V\right)_T &amp;bg=ffffff$, arrive at:

$latex \left(\partial S/\partial V\right)_T = \left(\partial p/\partial T\right)_V &amp;bg=ffffff&amp;s=2$.

Inserting this result into:

$latex E/V = T \left(\partial S/\partial V\right)_T - p &amp;bg=ffffff&amp;s=2$

gives:

$latex E/V = T \left(\partial p/\partial T\right)_V - p &amp;bg=ffffff&amp;s=2$

Now, the radiation pressure is $latex p = (1/3) E/V &amp;bg=ffffff$, so:

$latex 4p = T \left(\partial p/\partial T\right)_V &amp;bg=ffffff&amp;s=2$

Hence:

$latex dp/p = 4 dT/T &amp;bg=ffffff&amp;s=2$

at fixed $latex T &amp;bg=ffffff$. It follows that $latex p \propto T^4 &amp;bg=ffffff$, and since $latex p \propto E/V &amp;bg=ffffff$, then:

$latex E/V \propto T^4 &amp;bg=ffffff&amp;s=2$

That is, the radiation energy density is proportional to the fourth power of the temperature. We will call the constant of proportionality here latex a &amp;bg=ffffff$ to distinguish it from $latex \sigma &amp;bg=ffffff$, since here we are considering energy density, and the version of the Stefan-Boltzmann law we gave at the beginning was for the radiated power per unit area.

$latex E/V = a T^4 &amp;bg=ffffff&amp;s=2$

<h2>Stefan-Boltzmann law - radiated power</h2>

If the energy density in the interior of our constant-temperature enclosure is $latex E/V = a T^4 &amp;bg=ffffff$, then the flux onto unit area of the cavity wall would be $latex ac T^4 &amp;bg=ffffff$ if the radiation were all incident normally on the wall. If it were incident at an angle $latex \theta &amp;bg=ffffff$ to the normal, the flux would be $latex ac T^4 \cos \theta &amp;bg=ffffff$. In reality the radiation is isotropic, so the flux is given by:

$latex R_B = \int{ac T^4 \cos \theta}df &amp;bg=ffffff&amp;s=2$

where we have equated the radiated power per unit area $R_B$ with the flux of radiation falling on the wall, which ust be true of the temperature stays constant; and where $latex df &amp;bg=ffffff$ is the area element of the unit sphere centred at the point of interest on the wall. This is given by:

$latex df = 2\pi r^2 \sin \theta d\theta / 4\pi r^2 &amp;bg=ffffff&amp;s=2$

so the flux is:

$R_B = latex (1/2) \int_0^{\pi /2} {ac T^4 \cos \theta\sin\theta} d\theta  = (1/4) acT^4 &amp;bg=ffffff&amp;s=2$

If we define $latex \sigma = (1/4) ac &amp;bg=ffffff$ then:

$latex R_B = \sigma T^4 &amp;bg=ffffff&amp;s=2$

which is where we began.

Note that, since we know from Kirchhoff's law that a non-black body radiator has emissive power $latex R = a R_B &amp;bg=ffffff$, where $latex a &amp;bg=ffffff$ is the absorptivity of the non-black body at the temperature in question, then in general:

$latex R = a\sigma T^4 &amp;bg=ffffff&amp;s=2$

Care is needed using this formula because $latex a &amp;bg=ffffff$ often has a strong dependence on temperature.

In practice, it is usually the difference between emitted and absorbed radiation that is measured. A black body at temperature $latex T_1 &amp;bg=ffffff$ emits radiation at a rate of $latex \sigma T_1^4 $ per unit area, but if it is placed in a sealed enclosure with wall temperature $latex T_2 &amp;bg=ffffff$, so that its surroundings are at temperature $latex T_2 &amp;bg=ffffff$, it is subject to incident radiation at a rate of $\sigma T_2^4 &amp;bg=ffffff$. (This latter must be true since, if the body were in equilibrium with the radiation field of the enclosure, it would be radiating at a rate of $\sigma T_2^4 &amp;bg=ffffff$, and since it's in equilibrium, must absorb radiation at the same rate. The rate of absorption is no different when the body is at a different temperature  (Assume the body is small enough compared to the enclosure that its presence doesn't disturb the radiation field in the enclosure - $latex T_2 &amp;bg=ffffff$ is constant.)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>544</wp:post_id>
  <wp:post_date>2015-05-17 15:12:51</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>black_body</title>
  <link>https://0x7df.wordpress.com/2015/05/17/thermal-radiation-kirchhoffs-law-and-black-bodies-14/black_body/#main</link>
  <pubDate>Sat, 16 May 2015 17:36:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">http://0x7df.files.wordpress.com/2015/05/black_body.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>581</wp:post_id>
  <wp:post_date>2015-05-16 17:36:00</wp:post_date>
  <wp:post_date_gmt>2015-05-16 17:36:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>black_body</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>526</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://0x7df.files.wordpress.com/2015/05/black_body.png</wp:attachment_url>
</item>
<item>
  <title>3/4 - Wien's displacement law and Rayleigh-Jeans's law</title>
  <link>https://0x7df.wordpress.com/?p=584</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=584</guid>
  <description/>
  <content:encoded><![CDATA[Towards the spectral distribution.

1893 - Wien's displacement law

Thermodynamic engine can show: energy density E_\lambda = \lambda^{-5} F(\lambda T) (see Born, Atomic Physics, appendix XXXIII)

Consistent with experimental finding \lambda_{max} T = constant

Finally from thermodynamics, function F independent of special mechanism

Planck adopted linear harmonic oscillator of frequency \mu, mean energy \bar(\eps)

In equilibrium E_{\mu} = (8\pi\mu^2/c^3)\bar(\epsilon)

Classical statistics \bar(\epsilon) = kT

1900 Raylegh-Jeans law E_\mu = (8\pi\mu^2/c^3) kT

I.e. consistent with Wien's displacement law but \int d\mu diverges: "ultra-violet cataastrophe".]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>584</wp:post_id>
  <wp:post_date>2015-06-03 07:36:34</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>4/4 - Planck's law of heat radiation and Bose-Einstein statistics</title>
  <link>https://0x7df.wordpress.com/?p=587</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=587</guid>
  <description/>
  <content:encoded><![CDATA[<blockquote>... classical mechanics and statistics fail with the explanation
of the laws of radiation of heat (or energy)... To make the laws of radiation intelligible, [Planck (1900)] found
the following hypothesis to be necessary: emission and absorption
of radiant energy by matter does not take place continuously, but in finite,
"quanta of energy" <em>hν</em> (<em>h</em> = Planck's constant 6.62 × 10^{-27} erg sec.,
<em>ν</em> = frequency).</blockquote>

<blockquote>quantum theory... was devised by Planck when he was endeavouring
to deduce the law of heat radiation (1900).</blockquote>

Plankc (1900) postulated discrete quanta of energy \epsilon_0, 2\epsilon_0, 3\epsilon_0, etc.

For mean energy, replacing integrals by sums

\bar\epsilon = \sum_{n=0}^\infty {n\epsilon_0 \exp{-\beta n\epsilon_0}} / \sum_{n=0}^\infty {\exp{-\beta n\epsilon_0}}

= \epsilon_0 / (\exp{\beta\epsilon_0} - 1)

Substitute for \bar\epsilon as before, and for consistency with Wien's displacement law \epsilon_0 = h\nu

E_\nu = (8\pi\nu^2/c^3)(1 / (\exp{h\nu/kT} - 1))

Planck's hypothesis superbly successful but still part classical, part quantum...

<h2>1924 Bose-Einstein statistics</h2>

Corpuscular approach, light quanta energy h\nu, momentum h\nu/c...

If base on classical Boltzmann statistics, fails to derive Planck's law (Born, Atomic Theory, ch.VIII)

Needs something else

Indistinguishability of light quanta, symmetric wave function

Bose-Einstein statistics based on number of distinguishable arrangements

Leads to Planck's formula (justfying \beta = 1/kT from thermodynamics)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>587</wp:post_id>
  <wp:post_date>2015-06-03 07:36:54</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Genetic algorithms</title>
  <link>https://0x7df.wordpress.com/?p=599</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=599</guid>
  <description/>
  <content:encoded><![CDATA[In a genetic algorithm, a population of random solutions to the problem in question is generated. Each individual solution is encoded in a binary string (its genotype). The ‘fitness’ of each individual (i.e. how good a solution to the problem it is) is assessed.

An iterative process then follows, whereby the fittest half of the population is kept, and the other half discarded. The fit solutions are paired up and allowed to mate: that is, the binary strings of each parent are broken in half at some random point, and one half from the mother and one half from the father joined together to create a new individual – a daughter solution. This is called crossing over. In this way each coupled pair of parents spawns two daughter solutions, thus restoring the total population to its original size.

The theory is that the population of solutions will evolve as the iterations progress, and become on average better and better solutions to the given problem. After some number of generations, the process is stopped, and the fittest individual out of the final population is assumed to be the best possible solution to the problem in question.

An important additional process is the application of random mutations. After the crossing over process, some bits in the binary strings of the daughter solutions are mutated at random (that is, changed from a 1 to a 0 or vice versa). This is done by generating a random number between 0 and 1 for each bit in each string: if the number is greater than some threshold, then the bit is mutated. The size of the threshold dictates how much mutation will occur.

It is also important to note that the fittest half of the population is not necessarily the best choice of individuals to go forward and mate. Sometimes this can cause the GA to approach the solution very quickly, thereby reducing the amount of genetic diversity in the population. If this occurs the algorithm slows down and can fail. To maintain genetic diversity whilst still allowing the overall population to improve, we simply allow the fitter solutions a higher probability of going forward. For example, if the range of possible fitnesses is normalised to the range 0 to 1, then a random number can be generated for each individual: and the individual goes forward if the random number is lower than its normalised fitness. That way, the fitter the solution, the more likely it is to survive, but the element of randomness means the culling of unfit solutions does not happen too quickly.

An iteration would go as follows:

<ul>
    <li>Assess the fitness of the population (and any other interesting stats)</li>
    <li>Determine whether this is to be the final population, and if so, finish</li>
    <li>Cycle through all the individuals, selecting which will survive, and copying their genotypes to a temporary population</li>
    <li>Randomly pair up individuals in the temporary population</li>
    <li>Generate a cross-over point for each pair</li>
    <li>Cross over each pair, creating two daughters for each pair</li>
    <li>Perform mutation on the offspring</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>599</wp:post_id>
  <wp:post_date>2015-06-03 07:36:07</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Geopotential</title>
  <link>https://0x7df.wordpress.com/2015/08/30/geopotential/</link>
  <pubDate>Sun, 30 Aug 2015 16:58:29 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=631</guid>
  <description/>
  <content:encoded><![CDATA[The <em>geopotential</em>:

$latex \phi = gz &amp;s=1&amp;bg=ffffff$

is the gravitational potential - i.e. the gravitational potential energy per unit mass - at a location in the earth's atmosphere. It is often used as a vertical coordinate instead of height above sea level, $latex z &amp;s=1&amp;bg=ffffff$.

The geopotential at height $latex z &amp;s=1&amp;bg=ffffff$ is the difference between the gravitational potential energy at some reference height, $latex z_0 &amp;s=1&amp;bg=ffffff$, usually taken to be zero (sea level), and that at $latex z &amp;s=1&amp;bg=ffffff$. This difference is numerically equal to the work done in raising the parcel from $latex z_0 &amp;s=1&amp;bg=ffffff$ to $latex z &amp;s=1&amp;bg=ffffff$:

$latex \phi(z) = \int_{z_0}^z g(z') dz' &amp;s=1&amp;bg=ffffff$

The simplification to:

$latex \phi = gz &amp;s=1&amp;bg=ffffff$

assumes that $latex g &amp;s=1&amp;bg=ffffff$ is constant with height. If the variation is to be taken into account, a suitable profile for $latex g(z) &amp;s=1&amp;bg=ffffff$ is:

$latex \phi(z) = \frac{g_0}{\left[ 1 + \left( z/E\right)\right]^2} &amp;s=1&amp;bg=ffffff$

where $latex g_0 &amp;s=1&amp;bg=ffffff$ is the value at sea level and $latex E &amp;s=1&amp;bg=ffffff$ is the earth's mean radius. Substituting into the definition of geopotential:

$latex \phi(z) = \int_{z_0}^z g(z') dz' &amp;s=1&amp;bg=ffffff$

gives:

$latex \phi(z) = \int_{z_0}^z \frac{g_0}{\left[ 1 + z' / E \right]^2} dz' &amp;s=1&amp;bg=ffffff$

$latex \phi(z) = g_0 E^2 \int_{z_0}^z \frac{1}{\left[ E+z' \right]^2} dz' &amp;s=1&amp;bg=ffffff$

$latex \phi(z) = g_0 \frac{z-z_0}{\left( 1+z/E \right) \left( 1+z_0/E \right)} &amp;s=1&amp;bg=ffffff$

or, if we take $latex z_0 &amp;s=1&amp;bg=ffffff$ to be zero:

$latex \phi(z) = g_0 \frac{z}{1+z/E} &amp;s=1&amp;bg=ffffff$

The assumption that gravity is constant is equivalent to assuming that $latex z &lt;&lt; E &amp;s=1&amp;bg=ffffff$ so that $latex z/E &lt;&lt; 1 &amp;s=1&amp;bg=ffffff$, and therefore that the denominator on the right-hand side of the above equation is unity.

In terms of differentials:

$latex d\phi = g dz &amp;bg=ffffff$

and taking into consideration the hydrostatic equation:

$latex dp = -\rho g dz &amp;bg=ffffff$

we obtain:

$latex d\phi = -\frac{dp}{\rho} = -\alpha dp &amp;bg=ffffff$

where $latex \alpha = 1 / \rho &amp;bg=ffffff$ is the specific volume (volume per unit mass).

The geopotential is larger than the geometric height by a factor of $latex g &amp;s=1&amp;bg=ffffff$ - e.g. the geopotential in J/kg is about 10 times the magnitude of the geometric altitude in metres. To make the geopotential have numerical magnitude more nearly equal to the geometric height, it is often expressed in units a factor of $latex g_0 &amp;s=1&amp;bg=ffffff$ smaller; these units are usually called <em>geopotential metres</em>, or <em>dynamic metres</em>, or <em>geodynamic metres</em>. That is, the geopotential in these units, is:

$latex \mathrm{gpm}(z) = \frac{\phi(z)}{g_0} &amp;s=1&amp;bg=ffffff$

$latex \mathrm{gpm}(z) = \frac{\int_{z_0}^z g(z') dz'}{g_0} &amp;s=1&amp;bg=ffffff$

$latex \mathrm{gpm}(z) = \frac{z}{1+z/E} &amp;s=1&amp;bg=ffffff$

<h2>Rogers and Yau Problem 3.2b</h2>

<blockquote>Show that the geopotential at pressure level $latex p &amp;s=1&amp;bg=ffffff$ of an atmosphere in hydrostatic equilibium is given by:

$latex \phi(p) = R\bar T\ln{\left(p_0/p\right)} &amp;s=1&amp;bg=ffffff$

where $latex \phi(p_0) = 0 &amp;s=1&amp;bg=ffffff$.</blockquote>

The differential expression for hydrostatic equilibrium is:

$latex dp = -g\rho dz &amp;s=1&amp;bg=ffffff$

From the definition of geopotential:

$latex \phi(z) = g \int_{z_0}^z dz' &amp;s=1&amp;bg=ffffff$

we have:

$latex d\phi = g dz &amp;s=1&amp;bg=ffffff$

Hence:

$latex dp = -\rho d\phi &amp;s=1&amp;bg=ffffff$

Introducing the equation of state gives:

$latex dp = \frac{p}{RT} d\phi &amp;s=1&amp;bg=ffffff$

$latex \int \frac{dp}{p} = -\frac{1}{R} \int \frac{d\phi}{T} &amp;s=1&amp;bg=ffffff$

Performing the integration gives:

$latex \ln(p) = -\frac{1}{R\bar T} \phi(p) + C &amp;s=1&amp;bg=ffffff$

where $latex \bar T &amp;s=1&amp;bg=ffffff$ is the average temperature through the layer from $latex p_0 &amp;s=1&amp;bg=ffffff$ to $latex p &amp;s=1&amp;bg=ffffff$. Since $latex \phi(p_0) = 0 &amp;s=1&amp;bg=ffffff$:

$latex C = \ln{p_0} &amp;s=1&amp;bg=ffffff$

Hence:

$latex \phi(p) = R\bar T\ln{(p_0/p)} &amp;s=1&amp;bg=ffffff$]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>631</wp:post_id>
  <wp:post_date>2015-08-30 16:58:29</wp:post_date>
  <wp:post_date_gmt>2015-08-30 16:58:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>geopotential</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[14253791262]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:10349377;s:51:"https://twitter.com/0x7df/status/638033072445788160";}s:8:"facebook";a:1:{i:10349464;s:52:"https://facebook.com/450210125130823_535394896612345";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_10304466</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_10304552</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_linkedin_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"W44TGJHQED";s:4:"date";s:29:"Sun, 30 Aug 2015 16:58:37 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"zhm9UfRL/xOgFGOI7yoAAA==";s:10:"set-cookie";s:153:"lidc="b=VB29:g=303:u=6:i=1440953918:t=1441028393:s=AQErIvg04kanInmgRLqiCF_Y7iYQ03W8"; Expires=Mon, 31 Aug 2015 13:39:53 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1436364430976",
  "requestId": "W44TGJHQED",
  "status": 401,
  "timestamp": 1440953918643
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:79:""b=VB29:g=303:u=6:i=1440953918:t=1441028393:s=AQErIvg04kanInmgRLqiCF_Y7iYQ03W8"";s:7:"expires";i:1441028393;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_10304825</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"W44TGJHQED";s:4:"date";s:29:"Sun, 30 Aug 2015 16:58:37 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"zhm9UfRL/xOgFGOI7yoAAA==";s:10:"set-cookie";s:153:"lidc="b=VB29:g=303:u=6:i=1440953918:t=1441028393:s=AQErIvg04kanInmgRLqiCF_Y7iYQ03W8"; Expires=Mon, 31 Aug 2015 13:39:53 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1436364430976",
  "requestId": "W44TGJHQED",
  "status": 401,
  "timestamp": 1440953918643
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:79:""b=VB29:g=303:u=6:i=1440953918:t=1441028393:s=AQErIvg04kanInmgRLqiCF_Y7iYQ03W8"";s:7:"expires";i:1441028393;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/115824850944145124788/posts/E2arRwUgJi6]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_11235975</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_11298791</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Total derivative</title>
  <link>https://0x7df.wordpress.com/?p=691</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=691</guid>
  <description/>
  <content:encoded><![CDATA[It is important in fluid dynamics to distinguish between two kinds of time derivative, for functions of multiple variables. The more common time derivative of a function is the <em>partial derivative</em>, $latex \partial / \partial t &amp;s=1&amp;bg=ffffff$. This is the rate of change of the function with time, with all other variables held constant. When the variables on which the function depends are independent of each other, the partial derivatives are sufficient to determine the rate of change of the function with respect to each of them. However, if there are dependencies among the independent variables, this is no longer the case.

The second kind of time derivative is the <em>total derivative</em>, $latex d / dt &amp;s=1&amp;bg=ffffff$ or sometimes $latex D / Dt &amp;s=1&amp;bg=ffffff$. This is the rate of change of the function with time, but taking into account not only the direct effect of time, but also its indirect effects due to changes in those other variables that are themselves functions of time. Typically, the other dependent variables are the spatial coordinates, and the total derivative takes into account the fact that, in addition to the properties of the fluid element changing intrinsically with time, its position is also changing with time, and therefore the spatial coordinates are functions of time.

For example, for a function $latex f(x, y, z, t) &amp;s=1&amp;bg=ffffff$:

$latex \frac{Df}{Dt} = \frac{\partial f}{\partial t} \frac{dt}{dt} + \frac{\partial f}{\partial x}\frac{dx}{dt} + \frac{\partial f}{\partial y}\frac{dy}{dt} + \frac{\partial f}{\partial z}\frac{dz}{dt} &amp;s=1&amp;bg=ffffff$

Hence:

$latex \frac{Df}{Dt} = \frac{\partial f}{\partial t} + u\frac{\partial f}{\partial x} + v\frac{\partial f}{\partial y} + w\frac{\partial f}{\partial z} &amp;s=1&amp;bg=ffffff$

where $latex u, v, w &amp;s=1&amp;bg=ffffff$ are the components of the fluid velocity in the $latex x, y, z &amp;s=1&amp;bg=ffffff$ directions respectively. In vector notation, for any coordinate system:

$latex \frac{Df}{Dt} = \frac{\partial f}{\partial t} + \mathbf{u}\cdot\nabla f &amp;s=1&amp;bg=ffffff$

where $latex \mathbf{u} &amp;s=1&amp;bg=ffffff$ is the flow velocity. The total derivative is often referred to as the <em>material derivative</em> or the <em>Lagrangian derivative</em>, as it gives the rate of change that would be experienced by following the motion of the fluid element. The first term on the right - the partial derivative with respect to time - is often called the <em>local derivative</em> or the <em>Eulerian derivative</em> because it measures the rate if change of the quantity at a fixed point in space. The second term is often referred to as the <em>convective derivative</em>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>691</wp:post_id>
  <wp:post_date>2015-08-30 21:43:11</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Virtual Temperature</title>
  <link>https://0x7df.wordpress.com/2015/08/31/virtual-temperature/</link>
  <pubDate>Mon, 31 Aug 2015 22:02:04 +0000</pubDate>
  <dc:creator>0x7df</dc:creator>
  <guid isPermaLink="false">https://0x7df.wordpress.com/?p=732</guid>
  <description/>
  <content:encoded><![CDATA[The ideal-gas equation of state is:

$latex p = \rho R T &amp;s=1&amp;bg=ffffff$

where $latex R &amp;s=1&amp;bg=ffffff$ is the individual gas constant for the gas in question, and:

$latex R = \frac{nR^*}{m} = \frac{R^*}{M} &amp;s=1&amp;bg=ffffff$

where $latex R^* &amp;bg=ffffff$ is the universal gas constant (8.31 J/mol.K) and $latex n, m &amp;bg=ffffff$ are the number of moles and the mass of the sample of gas, respectively; and $latex M = m/n &amp;bg=ffffff$ is the molecular mass of the gas.

Dry air is typically assumed to be a perfect gas, with an individual gas constant of 287 J/kg.K  or 2.87 × 10<sup>6</sup> cm<sup>2</sup>/s<sup>2</sup>.K.

Water vapour is also assumed to be a perfect gas, with an individual gas constant of 461.5 J/kg.K. The ratio of $latex R / R_v &amp;bg=ffffff$

$latex \sigma = \frac{R}{R_v} = \frac{M_v}{M} = 0.622 &amp;bg=ffffff$

where $latex R, M &amp;bg=ffffff$ are the gas constant and molecular mass of dry air, and $latex R_v, M_v &amp;bg=ffffff$ of water vapour.

Moist air is a mixture of dry air and water vapour. To determine the individual gas constant of moist air, consisting of some mixture of dry air and water vapour, we first write the equation of state for water vapour:

$latex e = \rho_v R_v T &amp;bg=ffffff$

where $latex e &amp;bg=ffffff$ is the water vapour pressure and $latex \rho_v &amp;bg=ffffff$ is the density of water vapour. The pressure of the moist air is the sum of the partial pressures of the dry air and the water vapour:

$latex p_m = p + e = \rho R T + \rho_v R_v T &amp;bg=ffffff$

$latex p_m = \rho R T + \rho_v \frac{R}{\sigma} T &amp;bg=ffffff$

$latex p_m = RT\left(\rho + \frac{\rho_v}{\sigma}\right) &amp;bg=ffffff$

$latex p_m = RT\frac{1}{V}\left(m + \frac{m_v}{\sigma}\right) &amp;bg=ffffff$

$latex p_m = RT \frac{\rho_m}{m + m_v}\left(m + \frac{m_v}{\sigma}\right) &amp;bg=ffffff$

This allows us to introduce the <em>virtual temperature</em>, which is the fictitious temperature that dry air would have to have to achieve the same (lower) density of the moist air, at the same pressure:

$latex p_m = \rho_m RT_v &amp;bg=ffffff$

From comparing the last two equations we can see that:

$latex T_v = \left[m + \frac{m_v}{\sigma}\right]\frac{1}{m+m_v} T &amp;bg=ffffff$

$latex T_v = \left[m + m_v + \frac{m_v}{\sigma} - m_v\right] \frac{1}{m + m_v} T &amp;bg=ffffff$

$latex T_v = \left[1 + \frac{m_v}{m + m_v}\left(\frac{1}{\sigma} - 1\right)\right] T &amp;bg=ffffff$

$latex T_v = \left[1 + \frac{m_v}{m + m_v}\frac{1 - \sigma}{\sigma} \right] \frac{1}{m + m_v} T &amp;bg=ffffff$

By definition, the mixing ratio $latex \mu = m_v/(m + m_v) &amp;bg=ffffff$ is the ratio of the mass of water vapour to the mass of moist air:

$latex T_v = \left[1 + \frac{1-\sigma}{\sigma} \mu \right] T &amp;bg=ffffff$

The virtual temperature is always slightly higher, by at most a few degrees, than the true temperature of the moist air.

<h2>Geopotential</h2>

Elsewhere we have seen that the geopotential is:

$latex d\phi = -\frac{1}{\rho} dp &amp;bg=ffffff$

Substituting in the equation of state for moist air, involving the virtual temperature:

$latex d\phi = -RT_v \frac{dp}{p} &amp;bg=ffffff$

Integrating:

$latex \phi = \phi_0 - R \int_{p_0}^p T_v d\ln p &amp;bg=ffffff$]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>732</wp:post_id>
  <wp:post_date>2015-08-31 22:02:04</wp:post_date>
  <wp:post_date_gmt>2015-08-31 22:02:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>virtual-temperature</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[14296485166]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:10349377;s:51:"https://twitter.com/0x7df/status/638471848800358401";}s:8:"facebook";a:1:{i:10349464;s:52:"https://facebook.com/450210125130823_535867466565088";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_10304466</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349377</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[0x7df]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_10304552</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_10349464</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_linkedin_publicize_failure</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"FE7LOPH8TR";s:4:"date";s:29:"Mon, 31 Aug 2015 22:02:10 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"8ATCKBmr/xNQFT+I7yoAAA==";s:10:"set-cookie";s:153:"lidc="b=VB29:g=303:u=6:i=1441058530:t=1441144930:s=AQF8FCmkzW16KkKBx028c_Pjay4RNqnH"; Expires=Tue, 01 Sep 2015 22:02:10 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1436364430976",
  "requestId": "FE7LOPH8TR",
  "status": 401,
  "timestamp": 1441058530419
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:79:""b=VB29:g=303:u=6:i=1441058530:t=1441144930:s=AQF8FCmkzW16KkKBx028c_Pjay4RNqnH"";s:7:"expires";i:1441144930;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_10304825</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"FE7LOPH8TR";s:4:"date";s:29:"Mon, 31 Aug 2015 22:02:10 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"8ATCKBmr/xNQFT+I7yoAAA==";s:10:"set-cookie";s:153:"lidc="b=VB29:g=303:u=6:i=1441058530:t=1441144930:s=AQF8FCmkzW16KkKBx028c_Pjay4RNqnH"; Expires=Tue, 01 Sep 2015 22:02:10 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1436364430976",
  "requestId": "FE7LOPH8TR",
  "status": 401,
  "timestamp": 1441058530419
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:79:""b=VB29:g=303:u=6:i=1441058530:t=1441144930:s=AQF8FCmkzW16KkKBx028c_Pjay4RNqnH"";s:7:"expires";i:1441144930;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/115824850944145124788/posts/izYbqGbuTFy]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_11235975</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_11298791</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
